
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006e34  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406e34  00406e34  00016e34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406e3c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000300  204009d0  0040780c  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400cd0  00407b0c  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd0  00409b0c  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00019107  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000038a5  00000000  00000000  00039b5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005ba6  00000000  00000000  0003d403  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000940  00000000  00000000  00042fa9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000990  00000000  00000000  000438e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000217cb  00000000  00000000  00044279  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000f008  00000000  00000000  00065a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000903c2  00000000  00000000  00074a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  0000202c  00000000  00000000  00104e10  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d0 2c 40 20 1d 12 40 00 19 12 40 00 19 12 40 00     .,@ ..@...@...@.
  400010:	19 12 40 00 19 12 40 00 19 12 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	19 12 40 00 19 12 40 00 00 00 00 00 19 12 40 00     ..@...@.......@.
  40003c:	19 12 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  40004c:	19 12 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  40005c:	19 12 40 00 19 12 40 00 00 00 00 00 7d 0d 40 00     ..@...@.....}.@.
  40006c:	91 0d 40 00 a5 0d 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  40007c:	19 12 40 00 b9 0d 40 00 cd 0d 40 00 19 12 40 00     ..@...@...@...@.
  40008c:	19 12 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  40009c:	1d 16 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  4000ac:	19 12 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  4000bc:	19 12 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  4000cc:	19 12 40 00 00 00 00 00 19 12 40 00 00 00 00 00     ..@.......@.....
  4000dc:	19 12 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  4000ec:	19 12 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  4000fc:	19 12 40 00 19 12 40 00 19 12 40 00 19 12 40 00     ..@...@...@...@.
  40010c:	19 12 40 00 19 12 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 19 12 40 00 19 12 40 00 19 12 40 00     ......@...@...@.
  40012c:	19 12 40 00 19 12 40 00 00 00 00 00 19 12 40 00     ..@...@.......@.
  40013c:	19 12 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406e3c 	.word	0x00406e3c

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406e3c 	.word	0x00406e3c
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406e3c 	.word	0x00406e3c
  4001a8:	00000000 	.word	0x00000000

004001ac <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4001ac:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4001ae:	4b07      	ldr	r3, [pc, #28]	; (4001cc <spi_enable_clock+0x20>)
  4001b0:	4298      	cmp	r0, r3
  4001b2:	d003      	beq.n	4001bc <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4001b4:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <spi_enable_clock+0x24>)
  4001b6:	4298      	cmp	r0, r3
  4001b8:	d004      	beq.n	4001c4 <spi_enable_clock+0x18>
  4001ba:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4001bc:	2015      	movs	r0, #21
  4001be:	4b05      	ldr	r3, [pc, #20]	; (4001d4 <spi_enable_clock+0x28>)
  4001c0:	4798      	blx	r3
  4001c2:	bd08      	pop	{r3, pc}
  4001c4:	202a      	movs	r0, #42	; 0x2a
  4001c6:	4b03      	ldr	r3, [pc, #12]	; (4001d4 <spi_enable_clock+0x28>)
  4001c8:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4001ca:	e7f6      	b.n	4001ba <spi_enable_clock+0xe>
  4001cc:	40008000 	.word	0x40008000
  4001d0:	40058000 	.word	0x40058000
  4001d4:	00400f01 	.word	0x00400f01

004001d8 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4001d8:	6843      	ldr	r3, [r0, #4]
  4001da:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4001de:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4001e0:	6843      	ldr	r3, [r0, #4]
  4001e2:	0409      	lsls	r1, r1, #16
  4001e4:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4001e8:	4319      	orrs	r1, r3
  4001ea:	6041      	str	r1, [r0, #4]
  4001ec:	4770      	bx	lr

004001ee <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4001ee:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4001f0:	f643 2499 	movw	r4, #15001	; 0x3a99
  4001f4:	6905      	ldr	r5, [r0, #16]
  4001f6:	f015 0f02 	tst.w	r5, #2
  4001fa:	d103      	bne.n	400204 <spi_write+0x16>
		if (!timeout--) {
  4001fc:	3c01      	subs	r4, #1
  4001fe:	d1f9      	bne.n	4001f4 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400200:	2001      	movs	r0, #1
  400202:	e00c      	b.n	40021e <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400204:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400206:	f014 0f02 	tst.w	r4, #2
  40020a:	d006      	beq.n	40021a <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40020c:	0412      	lsls	r2, r2, #16
  40020e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400212:	4311      	orrs	r1, r2
		if (uc_last) {
  400214:	b10b      	cbz	r3, 40021a <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400216:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  40021a:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40021c:	2000      	movs	r0, #0
}
  40021e:	bc30      	pop	{r4, r5}
  400220:	4770      	bx	lr

00400222 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400222:	b932      	cbnz	r2, 400232 <spi_set_clock_polarity+0x10>
  400224:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400228:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40022a:	f023 0301 	bic.w	r3, r3, #1
  40022e:	6303      	str	r3, [r0, #48]	; 0x30
  400230:	4770      	bx	lr
  400232:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400236:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400238:	f043 0301 	orr.w	r3, r3, #1
  40023c:	6303      	str	r3, [r0, #48]	; 0x30
  40023e:	4770      	bx	lr

00400240 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400240:	b932      	cbnz	r2, 400250 <spi_set_clock_phase+0x10>
  400242:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400246:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400248:	f023 0302 	bic.w	r3, r3, #2
  40024c:	6303      	str	r3, [r0, #48]	; 0x30
  40024e:	4770      	bx	lr
  400250:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400254:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400256:	f043 0302 	orr.w	r3, r3, #2
  40025a:	6303      	str	r3, [r0, #48]	; 0x30
  40025c:	4770      	bx	lr

0040025e <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40025e:	2a04      	cmp	r2, #4
  400260:	d003      	beq.n	40026a <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400262:	b16a      	cbz	r2, 400280 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400264:	2a08      	cmp	r2, #8
  400266:	d016      	beq.n	400296 <spi_configure_cs_behavior+0x38>
  400268:	4770      	bx	lr
  40026a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40026e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400270:	f023 0308 	bic.w	r3, r3, #8
  400274:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400276:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400278:	f043 0304 	orr.w	r3, r3, #4
  40027c:	6303      	str	r3, [r0, #48]	; 0x30
  40027e:	4770      	bx	lr
  400280:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400284:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400286:	f023 0308 	bic.w	r3, r3, #8
  40028a:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  40028c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40028e:	f023 0304 	bic.w	r3, r3, #4
  400292:	6303      	str	r3, [r0, #48]	; 0x30
  400294:	4770      	bx	lr
  400296:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40029a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40029c:	f043 0308 	orr.w	r3, r3, #8
  4002a0:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4002a2:	e7e1      	b.n	400268 <spi_configure_cs_behavior+0xa>

004002a4 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4002a4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4002a8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002aa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4002ae:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4002b0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002b2:	431a      	orrs	r2, r3
  4002b4:	630a      	str	r2, [r1, #48]	; 0x30
  4002b6:	4770      	bx	lr

004002b8 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4002b8:	1e43      	subs	r3, r0, #1
  4002ba:	4419      	add	r1, r3
  4002bc:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4002c0:	1e43      	subs	r3, r0, #1
  4002c2:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4002c4:	bf94      	ite	ls
  4002c6:	b200      	sxthls	r0, r0
		return -1;
  4002c8:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4002cc:	4770      	bx	lr

004002ce <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  4002ce:	b17a      	cbz	r2, 4002f0 <spi_set_baudrate_div+0x22>
{
  4002d0:	b410      	push	{r4}
  4002d2:	4614      	mov	r4, r2
  4002d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4002d8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002da:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4002de:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4002e0:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4002e2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4002e6:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4002e8:	2000      	movs	r0, #0
}
  4002ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  4002ee:	4770      	bx	lr
        return -1;
  4002f0:	f04f 30ff 	mov.w	r0, #4294967295
  4002f4:	4770      	bx	lr

004002f6 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4002f6:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4002f8:	0189      	lsls	r1, r1, #6
  4002fa:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4002fc:	2402      	movs	r4, #2
  4002fe:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  400300:	f04f 31ff 	mov.w	r1, #4294967295
  400304:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  400306:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  400308:	605a      	str	r2, [r3, #4]
}
  40030a:	f85d 4b04 	ldr.w	r4, [sp], #4
  40030e:	4770      	bx	lr

00400310 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  400310:	0189      	lsls	r1, r1, #6
  400312:	2305      	movs	r3, #5
  400314:	5043      	str	r3, [r0, r1]
  400316:	4770      	bx	lr

00400318 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  400318:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  40031c:	61ca      	str	r2, [r1, #28]
  40031e:	4770      	bx	lr

00400320 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400320:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  400324:	624a      	str	r2, [r1, #36]	; 0x24
  400326:	4770      	bx	lr

00400328 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  400328:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  40032c:	6a08      	ldr	r0, [r1, #32]
}
  40032e:	4770      	bx	lr

00400330 <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  400330:	b4f0      	push	{r4, r5, r6, r7}
  400332:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400334:	2402      	movs	r4, #2
  400336:	9401      	str	r4, [sp, #4]
  400338:	2408      	movs	r4, #8
  40033a:	9402      	str	r4, [sp, #8]
  40033c:	2420      	movs	r4, #32
  40033e:	9403      	str	r4, [sp, #12]
  400340:	2480      	movs	r4, #128	; 0x80
  400342:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400344:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400346:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400348:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  40034a:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  40034e:	d814      	bhi.n	40037a <tc_find_mck_divisor+0x4a>
  400350:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  400352:	42a0      	cmp	r0, r4
  400354:	d217      	bcs.n	400386 <tc_find_mck_divisor+0x56>
  400356:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400358:	af01      	add	r7, sp, #4
  40035a:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  40035e:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  400362:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400364:	4284      	cmp	r4, r0
  400366:	d30a      	bcc.n	40037e <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400368:	4286      	cmp	r6, r0
  40036a:	d90d      	bls.n	400388 <tc_find_mck_divisor+0x58>
			ul_index++) {
  40036c:	3501      	adds	r5, #1
	for (ul_index = 0;
  40036e:	2d05      	cmp	r5, #5
  400370:	d1f3      	bne.n	40035a <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  400372:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400374:	b006      	add	sp, #24
  400376:	bcf0      	pop	{r4, r5, r6, r7}
  400378:	4770      	bx	lr
			return 0;
  40037a:	2000      	movs	r0, #0
  40037c:	e7fa      	b.n	400374 <tc_find_mck_divisor+0x44>
  40037e:	2000      	movs	r0, #0
  400380:	e7f8      	b.n	400374 <tc_find_mck_divisor+0x44>
	return 1;
  400382:	2001      	movs	r0, #1
  400384:	e7f6      	b.n	400374 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400386:	2500      	movs	r5, #0
	if (p_uldiv) {
  400388:	b12a      	cbz	r2, 400396 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  40038a:	a906      	add	r1, sp, #24
  40038c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  400390:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400394:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400396:	2b00      	cmp	r3, #0
  400398:	d0f3      	beq.n	400382 <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  40039a:	601d      	str	r5, [r3, #0]
	return 1;
  40039c:	2001      	movs	r0, #1
  40039e:	e7e9      	b.n	400374 <tc_find_mck_divisor+0x44>

004003a0 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4003a0:	4b01      	ldr	r3, [pc, #4]	; (4003a8 <gfx_mono_set_framebuffer+0x8>)
  4003a2:	6018      	str	r0, [r3, #0]
  4003a4:	4770      	bx	lr
  4003a6:	bf00      	nop
  4003a8:	204009ec 	.word	0x204009ec

004003ac <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4003ac:	4b02      	ldr	r3, [pc, #8]	; (4003b8 <gfx_mono_framebuffer_put_byte+0xc>)
  4003ae:	681b      	ldr	r3, [r3, #0]
  4003b0:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4003b4:	5442      	strb	r2, [r0, r1]
  4003b6:	4770      	bx	lr
  4003b8:	204009ec 	.word	0x204009ec

004003bc <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  4003bc:	4b02      	ldr	r3, [pc, #8]	; (4003c8 <gfx_mono_framebuffer_get_byte+0xc>)
  4003be:	681b      	ldr	r3, [r3, #0]
  4003c0:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  4003c4:	5c40      	ldrb	r0, [r0, r1]
  4003c6:	4770      	bx	lr
  4003c8:	204009ec 	.word	0x204009ec

004003cc <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  4003cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  4003d0:	1884      	adds	r4, r0, r2
  4003d2:	2c80      	cmp	r4, #128	; 0x80
  4003d4:	dd02      	ble.n	4003dc <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4003d6:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  4003da:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4003dc:	b322      	cbz	r2, 400428 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4003de:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4003e0:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  4003e4:	2601      	movs	r6, #1
  4003e6:	fa06 f101 	lsl.w	r1, r6, r1
  4003ea:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  4003ec:	2b01      	cmp	r3, #1
  4003ee:	d01d      	beq.n	40042c <gfx_mono_generic_draw_horizontal_line+0x60>
  4003f0:	2b00      	cmp	r3, #0
  4003f2:	d035      	beq.n	400460 <gfx_mono_generic_draw_horizontal_line+0x94>
  4003f4:	2b02      	cmp	r3, #2
  4003f6:	d117      	bne.n	400428 <gfx_mono_generic_draw_horizontal_line+0x5c>
  4003f8:	3801      	subs	r0, #1
  4003fa:	b2c7      	uxtb	r7, r0
  4003fc:	19d4      	adds	r4, r2, r7
  4003fe:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400400:	f8df a090 	ldr.w	sl, [pc, #144]	; 400494 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400404:	f04f 0900 	mov.w	r9, #0
  400408:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400498 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40040c:	4621      	mov	r1, r4
  40040e:	4628      	mov	r0, r5
  400410:	47d0      	blx	sl
			temp ^= pixelmask;
  400412:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400416:	464b      	mov	r3, r9
  400418:	b2d2      	uxtb	r2, r2
  40041a:	4621      	mov	r1, r4
  40041c:	4628      	mov	r0, r5
  40041e:	47c0      	blx	r8
  400420:	3c01      	subs	r4, #1
  400422:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400424:	42bc      	cmp	r4, r7
  400426:	d1f1      	bne.n	40040c <gfx_mono_generic_draw_horizontal_line+0x40>
  400428:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40042c:	3801      	subs	r0, #1
  40042e:	b2c7      	uxtb	r7, r0
  400430:	19d4      	adds	r4, r2, r7
  400432:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400434:	f8df a05c 	ldr.w	sl, [pc, #92]	; 400494 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400438:	f04f 0900 	mov.w	r9, #0
  40043c:	f8df 8058 	ldr.w	r8, [pc, #88]	; 400498 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400440:	4621      	mov	r1, r4
  400442:	4628      	mov	r0, r5
  400444:	47d0      	blx	sl
			temp |= pixelmask;
  400446:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40044a:	464b      	mov	r3, r9
  40044c:	b2d2      	uxtb	r2, r2
  40044e:	4621      	mov	r1, r4
  400450:	4628      	mov	r0, r5
  400452:	47c0      	blx	r8
  400454:	3c01      	subs	r4, #1
  400456:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400458:	42bc      	cmp	r4, r7
  40045a:	d1f1      	bne.n	400440 <gfx_mono_generic_draw_horizontal_line+0x74>
  40045c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400460:	3801      	subs	r0, #1
  400462:	b2c7      	uxtb	r7, r0
  400464:	19d4      	adds	r4, r2, r7
  400466:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400468:	f8df 8028 	ldr.w	r8, [pc, #40]	; 400494 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  40046c:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  40046e:	f8df 9028 	ldr.w	r9, [pc, #40]	; 400498 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400472:	4621      	mov	r1, r4
  400474:	4628      	mov	r0, r5
  400476:	47c0      	blx	r8
			temp &= ~pixelmask;
  400478:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40047c:	2300      	movs	r3, #0
  40047e:	b2d2      	uxtb	r2, r2
  400480:	4621      	mov	r1, r4
  400482:	4628      	mov	r0, r5
  400484:	47c8      	blx	r9
  400486:	3c01      	subs	r4, #1
  400488:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40048a:	42bc      	cmp	r4, r7
  40048c:	d1f1      	bne.n	400472 <gfx_mono_generic_draw_horizontal_line+0xa6>
  40048e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400492:	bf00      	nop
  400494:	004006cd 	.word	0x004006cd
  400498:	004005c9 	.word	0x004005c9

0040049c <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  40049c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4004a0:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4004a4:	b18b      	cbz	r3, 4004ca <gfx_mono_generic_draw_filled_rect+0x2e>
  4004a6:	461c      	mov	r4, r3
  4004a8:	4690      	mov	r8, r2
  4004aa:	4606      	mov	r6, r0
  4004ac:	1e4d      	subs	r5, r1, #1
  4004ae:	b2ed      	uxtb	r5, r5
  4004b0:	442c      	add	r4, r5
  4004b2:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4004b4:	f8df 9018 	ldr.w	r9, [pc, #24]	; 4004d0 <gfx_mono_generic_draw_filled_rect+0x34>
  4004b8:	463b      	mov	r3, r7
  4004ba:	4642      	mov	r2, r8
  4004bc:	4621      	mov	r1, r4
  4004be:	4630      	mov	r0, r6
  4004c0:	47c8      	blx	r9
  4004c2:	3c01      	subs	r4, #1
  4004c4:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  4004c6:	42ac      	cmp	r4, r5
  4004c8:	d1f6      	bne.n	4004b8 <gfx_mono_generic_draw_filled_rect+0x1c>
  4004ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4004ce:	bf00      	nop
  4004d0:	004003cd 	.word	0x004003cd

004004d4 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4004d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4004d8:	b083      	sub	sp, #12
  4004da:	4604      	mov	r4, r0
  4004dc:	4688      	mov	r8, r1
  4004de:	4691      	mov	r9, r2
  4004e0:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4004e2:	7a5b      	ldrb	r3, [r3, #9]
  4004e4:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4004e8:	2100      	movs	r1, #0
  4004ea:	9100      	str	r1, [sp, #0]
  4004ec:	4649      	mov	r1, r9
  4004ee:	4640      	mov	r0, r8
  4004f0:	4d21      	ldr	r5, [pc, #132]	; (400578 <gfx_mono_draw_char+0xa4>)
  4004f2:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  4004f4:	f89b 3000 	ldrb.w	r3, [fp]
  4004f8:	b113      	cbz	r3, 400500 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  4004fa:	b003      	add	sp, #12
  4004fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400500:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400504:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  400506:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  40050a:	bf18      	it	ne
  40050c:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  40050e:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  400512:	f89b 700a 	ldrb.w	r7, [fp, #10]
  400516:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400518:	fb17 f70a 	smulbb	r7, r7, sl
  40051c:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400520:	f8db 3004 	ldr.w	r3, [fp, #4]
  400524:	fa13 f787 	uxtah	r7, r3, r7
  400528:	e01f      	b.n	40056a <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  40052a:	0064      	lsls	r4, r4, #1
  40052c:	b2e4      	uxtb	r4, r4
  40052e:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400530:	b2eb      	uxtb	r3, r5
  400532:	429e      	cmp	r6, r3
  400534:	d910      	bls.n	400558 <gfx_mono_draw_char+0x84>
  400536:	b2eb      	uxtb	r3, r5
  400538:	eb08 0003 	add.w	r0, r8, r3
  40053c:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40053e:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400542:	bf08      	it	eq
  400544:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400548:	f014 0f80 	tst.w	r4, #128	; 0x80
  40054c:	d0ed      	beq.n	40052a <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40054e:	2201      	movs	r2, #1
  400550:	4649      	mov	r1, r9
  400552:	4b0a      	ldr	r3, [pc, #40]	; (40057c <gfx_mono_draw_char+0xa8>)
  400554:	4798      	blx	r3
  400556:	e7e8      	b.n	40052a <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400558:	f109 0901 	add.w	r9, r9, #1
  40055c:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  400560:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400564:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400568:	d0c7      	beq.n	4004fa <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  40056a:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40056e:	2e00      	cmp	r6, #0
  400570:	d0f2      	beq.n	400558 <gfx_mono_draw_char+0x84>
  400572:	2500      	movs	r5, #0
  400574:	462c      	mov	r4, r5
  400576:	e7de      	b.n	400536 <gfx_mono_draw_char+0x62>
  400578:	0040049d 	.word	0x0040049d
  40057c:	00400669 	.word	0x00400669

00400580 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  400580:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400584:	4604      	mov	r4, r0
  400586:	4690      	mov	r8, r2
  400588:	461d      	mov	r5, r3
  40058a:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  40058c:	4f0d      	ldr	r7, [pc, #52]	; (4005c4 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  40058e:	460e      	mov	r6, r1
  400590:	e008      	b.n	4005a4 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  400592:	7a6a      	ldrb	r2, [r5, #9]
  400594:	3201      	adds	r2, #1
  400596:	4442      	add	r2, r8
  400598:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  40059c:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  40059e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4005a2:	b16b      	cbz	r3, 4005c0 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4005a4:	7820      	ldrb	r0, [r4, #0]
  4005a6:	280a      	cmp	r0, #10
  4005a8:	d0f3      	beq.n	400592 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4005aa:	280d      	cmp	r0, #13
  4005ac:	d0f7      	beq.n	40059e <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4005ae:	462b      	mov	r3, r5
  4005b0:	4642      	mov	r2, r8
  4005b2:	4649      	mov	r1, r9
  4005b4:	47b8      	blx	r7
			x += font->width;
  4005b6:	7a2b      	ldrb	r3, [r5, #8]
  4005b8:	4499      	add	r9, r3
  4005ba:	fa5f f989 	uxtb.w	r9, r9
  4005be:	e7ee      	b.n	40059e <gfx_mono_draw_string+0x1e>
}
  4005c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4005c4:	004004d5 	.word	0x004004d5

004005c8 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  4005c8:	b570      	push	{r4, r5, r6, lr}
  4005ca:	4604      	mov	r4, r0
  4005cc:	460d      	mov	r5, r1
  4005ce:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  4005d0:	b91b      	cbnz	r3, 4005da <gfx_mono_ssd1306_put_byte+0x12>
  4005d2:	4b0d      	ldr	r3, [pc, #52]	; (400608 <gfx_mono_ssd1306_put_byte+0x40>)
  4005d4:	4798      	blx	r3
  4005d6:	42b0      	cmp	r0, r6
  4005d8:	d015      	beq.n	400606 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4005da:	4632      	mov	r2, r6
  4005dc:	4629      	mov	r1, r5
  4005de:	4620      	mov	r0, r4
  4005e0:	4b0a      	ldr	r3, [pc, #40]	; (40060c <gfx_mono_ssd1306_put_byte+0x44>)
  4005e2:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4005e4:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4005e8:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4005ec:	4c08      	ldr	r4, [pc, #32]	; (400610 <gfx_mono_ssd1306_put_byte+0x48>)
  4005ee:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  4005f0:	f3c5 1002 	ubfx	r0, r5, #4, #3
  4005f4:	f040 0010 	orr.w	r0, r0, #16
  4005f8:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  4005fa:	f005 000f 	and.w	r0, r5, #15
  4005fe:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400600:	4630      	mov	r0, r6
  400602:	4b04      	ldr	r3, [pc, #16]	; (400614 <gfx_mono_ssd1306_put_byte+0x4c>)
  400604:	4798      	blx	r3
  400606:	bd70      	pop	{r4, r5, r6, pc}
  400608:	004003bd 	.word	0x004003bd
  40060c:	004003ad 	.word	0x004003ad
  400610:	004006d9 	.word	0x004006d9
  400614:	004008f9 	.word	0x004008f9

00400618 <gfx_mono_ssd1306_init>:
{
  400618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  40061c:	480d      	ldr	r0, [pc, #52]	; (400654 <gfx_mono_ssd1306_init+0x3c>)
  40061e:	4b0e      	ldr	r3, [pc, #56]	; (400658 <gfx_mono_ssd1306_init+0x40>)
  400620:	4798      	blx	r3
	ssd1306_init();
  400622:	4b0e      	ldr	r3, [pc, #56]	; (40065c <gfx_mono_ssd1306_init+0x44>)
  400624:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  400626:	2040      	movs	r0, #64	; 0x40
  400628:	4b0d      	ldr	r3, [pc, #52]	; (400660 <gfx_mono_ssd1306_init+0x48>)
  40062a:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  40062c:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40062e:	f04f 0801 	mov.w	r8, #1
  400632:	462f      	mov	r7, r5
  400634:	4e0b      	ldr	r6, [pc, #44]	; (400664 <gfx_mono_ssd1306_init+0x4c>)
{
  400636:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400638:	4643      	mov	r3, r8
  40063a:	463a      	mov	r2, r7
  40063c:	b2e1      	uxtb	r1, r4
  40063e:	4628      	mov	r0, r5
  400640:	47b0      	blx	r6
  400642:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400644:	2c80      	cmp	r4, #128	; 0x80
  400646:	d1f7      	bne.n	400638 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400648:	3501      	adds	r5, #1
  40064a:	b2ed      	uxtb	r5, r5
  40064c:	2d04      	cmp	r5, #4
  40064e:	d1f2      	bne.n	400636 <gfx_mono_ssd1306_init+0x1e>
  400650:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400654:	204009f0 	.word	0x204009f0
  400658:	004003a1 	.word	0x004003a1
  40065c:	00400719 	.word	0x00400719
  400660:	004006d9 	.word	0x004006d9
  400664:	004005c9 	.word	0x004005c9

00400668 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400668:	09c3      	lsrs	r3, r0, #7
  40066a:	d12a      	bne.n	4006c2 <gfx_mono_ssd1306_draw_pixel+0x5a>
  40066c:	291f      	cmp	r1, #31
  40066e:	d828      	bhi.n	4006c2 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  400670:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400674:	4614      	mov	r4, r2
  400676:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400678:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  40067a:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  40067e:	2201      	movs	r2, #1
  400680:	fa02 f701 	lsl.w	r7, r2, r1
  400684:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  400688:	4601      	mov	r1, r0
  40068a:	4630      	mov	r0, r6
  40068c:	4b0d      	ldr	r3, [pc, #52]	; (4006c4 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  40068e:	4798      	blx	r3
  400690:	4602      	mov	r2, r0
	switch (color) {
  400692:	2c01      	cmp	r4, #1
  400694:	d009      	beq.n	4006aa <gfx_mono_ssd1306_draw_pixel+0x42>
  400696:	b164      	cbz	r4, 4006b2 <gfx_mono_ssd1306_draw_pixel+0x4a>
  400698:	2c02      	cmp	r4, #2
  40069a:	d00e      	beq.n	4006ba <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  40069c:	2300      	movs	r3, #0
  40069e:	4629      	mov	r1, r5
  4006a0:	4630      	mov	r0, r6
  4006a2:	4c09      	ldr	r4, [pc, #36]	; (4006c8 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4006a4:	47a0      	blx	r4
  4006a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4006aa:	ea48 0200 	orr.w	r2, r8, r0
  4006ae:	b2d2      	uxtb	r2, r2
		break;
  4006b0:	e7f4      	b.n	40069c <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4006b2:	ea20 0207 	bic.w	r2, r0, r7
  4006b6:	b2d2      	uxtb	r2, r2
		break;
  4006b8:	e7f0      	b.n	40069c <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4006ba:	ea88 0200 	eor.w	r2, r8, r0
  4006be:	b2d2      	uxtb	r2, r2
		break;
  4006c0:	e7ec      	b.n	40069c <gfx_mono_ssd1306_draw_pixel+0x34>
  4006c2:	4770      	bx	lr
  4006c4:	004003bd 	.word	0x004003bd
  4006c8:	004005c9 	.word	0x004005c9

004006cc <gfx_mono_ssd1306_get_byte>:
{
  4006cc:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  4006ce:	4b01      	ldr	r3, [pc, #4]	; (4006d4 <gfx_mono_ssd1306_get_byte+0x8>)
  4006d0:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  4006d2:	bd08      	pop	{r3, pc}
  4006d4:	004003bd 	.word	0x004003bd

004006d8 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4006d8:	b538      	push	{r3, r4, r5, lr}
  4006da:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4006dc:	2208      	movs	r2, #8
  4006de:	4b09      	ldr	r3, [pc, #36]	; (400704 <ssd1306_write_command+0x2c>)
  4006e0:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4006e2:	4c09      	ldr	r4, [pc, #36]	; (400708 <ssd1306_write_command+0x30>)
  4006e4:	2101      	movs	r1, #1
  4006e6:	4620      	mov	r0, r4
  4006e8:	4b08      	ldr	r3, [pc, #32]	; (40070c <ssd1306_write_command+0x34>)
  4006ea:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  4006ec:	2301      	movs	r3, #1
  4006ee:	461a      	mov	r2, r3
  4006f0:	4629      	mov	r1, r5
  4006f2:	4620      	mov	r0, r4
  4006f4:	4c06      	ldr	r4, [pc, #24]	; (400710 <ssd1306_write_command+0x38>)
  4006f6:	47a0      	blx	r4
	delay_us(10);
  4006f8:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4006fc:	4b05      	ldr	r3, [pc, #20]	; (400714 <ssd1306_write_command+0x3c>)
  4006fe:	4798      	blx	r3
  400700:	bd38      	pop	{r3, r4, r5, pc}
  400702:	bf00      	nop
  400704:	400e1000 	.word	0x400e1000
  400708:	40008000 	.word	0x40008000
  40070c:	004001d9 	.word	0x004001d9
  400710:	004001ef 	.word	0x004001ef
  400714:	20400001 	.word	0x20400001

00400718 <ssd1306_init>:
{
  400718:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40071c:	4d66      	ldr	r5, [pc, #408]	; (4008b8 <ssd1306_init+0x1a0>)
  40071e:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  400722:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400724:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400728:	4b64      	ldr	r3, [pc, #400]	; (4008bc <ssd1306_init+0x1a4>)
  40072a:	2708      	movs	r7, #8
  40072c:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40072e:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400732:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400734:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400738:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  40073a:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40073c:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400740:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400742:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400746:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400748:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  40074a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40074e:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400750:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400752:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400756:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400758:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40075a:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40075e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400760:	f022 0208 	bic.w	r2, r2, #8
  400764:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400766:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400768:	f022 0208 	bic.w	r2, r2, #8
  40076c:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  40076e:	601f      	str	r7, [r3, #0]
  400770:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400772:	631f      	str	r7, [r3, #48]	; 0x30
  400774:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400776:	f8df 817c 	ldr.w	r8, [pc, #380]	; 4008f4 <ssd1306_init+0x1dc>
  40077a:	2300      	movs	r3, #0
  40077c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400780:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400784:	4640      	mov	r0, r8
  400786:	4c4e      	ldr	r4, [pc, #312]	; (4008c0 <ssd1306_init+0x1a8>)
  400788:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40078a:	2300      	movs	r3, #0
  40078c:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400790:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400794:	4640      	mov	r0, r8
  400796:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400798:	2300      	movs	r3, #0
  40079a:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  40079e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007a2:	4640      	mov	r0, r8
  4007a4:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4007a6:	2300      	movs	r3, #0
  4007a8:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4007ac:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007b0:	4640      	mov	r0, r8
  4007b2:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4007b4:	2300      	movs	r3, #0
  4007b6:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4007ba:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007be:	4640      	mov	r0, r8
  4007c0:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4007c2:	2300      	movs	r3, #0
  4007c4:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4007c8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4007cc:	4640      	mov	r0, r8
  4007ce:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4007d0:	4c3c      	ldr	r4, [pc, #240]	; (4008c4 <ssd1306_init+0x1ac>)
  4007d2:	f04f 0902 	mov.w	r9, #2
  4007d6:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4007da:	f04f 0880 	mov.w	r8, #128	; 0x80
  4007de:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4007e2:	6863      	ldr	r3, [r4, #4]
  4007e4:	f043 0301 	orr.w	r3, r3, #1
  4007e8:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  4007ea:	463a      	mov	r2, r7
  4007ec:	2101      	movs	r1, #1
  4007ee:	4620      	mov	r0, r4
  4007f0:	4b35      	ldr	r3, [pc, #212]	; (4008c8 <ssd1306_init+0x1b0>)
  4007f2:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  4007f4:	2200      	movs	r2, #0
  4007f6:	2101      	movs	r1, #1
  4007f8:	4620      	mov	r0, r4
  4007fa:	4b34      	ldr	r3, [pc, #208]	; (4008cc <ssd1306_init+0x1b4>)
  4007fc:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  4007fe:	2200      	movs	r2, #0
  400800:	2101      	movs	r1, #1
  400802:	4620      	mov	r0, r4
  400804:	4b32      	ldr	r3, [pc, #200]	; (4008d0 <ssd1306_init+0x1b8>)
  400806:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400808:	6863      	ldr	r3, [r4, #4]
  40080a:	f023 0302 	bic.w	r3, r3, #2
  40080e:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400810:	2200      	movs	r2, #0
  400812:	2101      	movs	r1, #1
  400814:	4620      	mov	r0, r4
  400816:	4b2f      	ldr	r3, [pc, #188]	; (4008d4 <ssd1306_init+0x1bc>)
  400818:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  40081a:	6863      	ldr	r3, [r4, #4]
  40081c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400820:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400822:	6863      	ldr	r3, [r4, #4]
  400824:	f043 0310 	orr.w	r3, r3, #16
  400828:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  40082a:	492b      	ldr	r1, [pc, #172]	; (4008d8 <ssd1306_init+0x1c0>)
  40082c:	482b      	ldr	r0, [pc, #172]	; (4008dc <ssd1306_init+0x1c4>)
  40082e:	4b2c      	ldr	r3, [pc, #176]	; (4008e0 <ssd1306_init+0x1c8>)
  400830:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400832:	b2c2      	uxtb	r2, r0
  400834:	2101      	movs	r1, #1
  400836:	4620      	mov	r0, r4
  400838:	4b2a      	ldr	r3, [pc, #168]	; (4008e4 <ssd1306_init+0x1cc>)
  40083a:	4798      	blx	r3
		spi_enable_clock(SPI0);
  40083c:	4620      	mov	r0, r4
  40083e:	4b2a      	ldr	r3, [pc, #168]	; (4008e8 <ssd1306_init+0x1d0>)
  400840:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400842:	2301      	movs	r3, #1
  400844:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400846:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400848:	f640 30b8 	movw	r0, #3000	; 0xbb8
  40084c:	4c27      	ldr	r4, [pc, #156]	; (4008ec <ssd1306_init+0x1d4>)
  40084e:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400850:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400852:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400856:	47a0      	blx	r4
  400858:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  40085a:	20a8      	movs	r0, #168	; 0xa8
  40085c:	4c24      	ldr	r4, [pc, #144]	; (4008f0 <ssd1306_init+0x1d8>)
  40085e:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400860:	201f      	movs	r0, #31
  400862:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400864:	20d3      	movs	r0, #211	; 0xd3
  400866:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400868:	2000      	movs	r0, #0
  40086a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  40086c:	2040      	movs	r0, #64	; 0x40
  40086e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400870:	20a1      	movs	r0, #161	; 0xa1
  400872:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400874:	20c8      	movs	r0, #200	; 0xc8
  400876:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400878:	20da      	movs	r0, #218	; 0xda
  40087a:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  40087c:	4648      	mov	r0, r9
  40087e:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400880:	2081      	movs	r0, #129	; 0x81
  400882:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400884:	208f      	movs	r0, #143	; 0x8f
  400886:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400888:	20a4      	movs	r0, #164	; 0xa4
  40088a:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  40088c:	20a6      	movs	r0, #166	; 0xa6
  40088e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400890:	20d5      	movs	r0, #213	; 0xd5
  400892:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400894:	4640      	mov	r0, r8
  400896:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400898:	208d      	movs	r0, #141	; 0x8d
  40089a:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  40089c:	2014      	movs	r0, #20
  40089e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  4008a0:	20db      	movs	r0, #219	; 0xdb
  4008a2:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  4008a4:	2040      	movs	r0, #64	; 0x40
  4008a6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  4008a8:	20d9      	movs	r0, #217	; 0xd9
  4008aa:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  4008ac:	20f1      	movs	r0, #241	; 0xf1
  4008ae:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  4008b0:	20af      	movs	r0, #175	; 0xaf
  4008b2:	47a0      	blx	r4
  4008b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4008b8:	400e1200 	.word	0x400e1200
  4008bc:	400e1000 	.word	0x400e1000
  4008c0:	00400be1 	.word	0x00400be1
  4008c4:	40008000 	.word	0x40008000
  4008c8:	0040025f 	.word	0x0040025f
  4008cc:	00400223 	.word	0x00400223
  4008d0:	00400241 	.word	0x00400241
  4008d4:	004002a5 	.word	0x004002a5
  4008d8:	08f0d180 	.word	0x08f0d180
  4008dc:	000f4240 	.word	0x000f4240
  4008e0:	004002b9 	.word	0x004002b9
  4008e4:	004002cf 	.word	0x004002cf
  4008e8:	004001ad 	.word	0x004001ad
  4008ec:	20400001 	.word	0x20400001
  4008f0:	004006d9 	.word	0x004006d9
  4008f4:	400e1400 	.word	0x400e1400

004008f8 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  4008f8:	b538      	push	{r3, r4, r5, lr}
  4008fa:	4605      	mov	r5, r0
  4008fc:	2208      	movs	r2, #8
  4008fe:	4b09      	ldr	r3, [pc, #36]	; (400924 <ssd1306_write_data+0x2c>)
  400900:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400902:	4c09      	ldr	r4, [pc, #36]	; (400928 <ssd1306_write_data+0x30>)
  400904:	2101      	movs	r1, #1
  400906:	4620      	mov	r0, r4
  400908:	4b08      	ldr	r3, [pc, #32]	; (40092c <ssd1306_write_data+0x34>)
  40090a:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  40090c:	2301      	movs	r3, #1
  40090e:	461a      	mov	r2, r3
  400910:	4629      	mov	r1, r5
  400912:	4620      	mov	r0, r4
  400914:	4c06      	ldr	r4, [pc, #24]	; (400930 <ssd1306_write_data+0x38>)
  400916:	47a0      	blx	r4
	delay_us(10);
  400918:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  40091c:	4b05      	ldr	r3, [pc, #20]	; (400934 <ssd1306_write_data+0x3c>)
  40091e:	4798      	blx	r3
  400920:	bd38      	pop	{r3, r4, r5, pc}
  400922:	bf00      	nop
  400924:	400e1000 	.word	0x400e1000
  400928:	40008000 	.word	0x40008000
  40092c:	004001d9 	.word	0x004001d9
  400930:	004001ef 	.word	0x004001ef
  400934:	20400001 	.word	0x20400001

00400938 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400938:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40093a:	4810      	ldr	r0, [pc, #64]	; (40097c <sysclk_init+0x44>)
  40093c:	4b10      	ldr	r3, [pc, #64]	; (400980 <sysclk_init+0x48>)
  40093e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400940:	213e      	movs	r1, #62	; 0x3e
  400942:	2000      	movs	r0, #0
  400944:	4b0f      	ldr	r3, [pc, #60]	; (400984 <sysclk_init+0x4c>)
  400946:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400948:	4c0f      	ldr	r4, [pc, #60]	; (400988 <sysclk_init+0x50>)
  40094a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40094c:	2800      	cmp	r0, #0
  40094e:	d0fc      	beq.n	40094a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400950:	4b0e      	ldr	r3, [pc, #56]	; (40098c <sysclk_init+0x54>)
  400952:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400954:	4a0e      	ldr	r2, [pc, #56]	; (400990 <sysclk_init+0x58>)
  400956:	4b0f      	ldr	r3, [pc, #60]	; (400994 <sysclk_init+0x5c>)
  400958:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  40095a:	4c0f      	ldr	r4, [pc, #60]	; (400998 <sysclk_init+0x60>)
  40095c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40095e:	2800      	cmp	r0, #0
  400960:	d0fc      	beq.n	40095c <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400962:	2002      	movs	r0, #2
  400964:	4b0d      	ldr	r3, [pc, #52]	; (40099c <sysclk_init+0x64>)
  400966:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400968:	2000      	movs	r0, #0
  40096a:	4b0d      	ldr	r3, [pc, #52]	; (4009a0 <sysclk_init+0x68>)
  40096c:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40096e:	4b0d      	ldr	r3, [pc, #52]	; (4009a4 <sysclk_init+0x6c>)
  400970:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400972:	4802      	ldr	r0, [pc, #8]	; (40097c <sysclk_init+0x44>)
  400974:	4b02      	ldr	r3, [pc, #8]	; (400980 <sysclk_init+0x48>)
  400976:	4798      	blx	r3
  400978:	bd10      	pop	{r4, pc}
  40097a:	bf00      	nop
  40097c:	11e1a300 	.word	0x11e1a300
  400980:	004013f1 	.word	0x004013f1
  400984:	00400e7d 	.word	0x00400e7d
  400988:	00400ed1 	.word	0x00400ed1
  40098c:	00400ee1 	.word	0x00400ee1
  400990:	20183f01 	.word	0x20183f01
  400994:	400e0600 	.word	0x400e0600
  400998:	00400ef1 	.word	0x00400ef1
  40099c:	00400de1 	.word	0x00400de1
  4009a0:	00400e19 	.word	0x00400e19
  4009a4:	004012e5 	.word	0x004012e5

004009a8 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  4009a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  4009aa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4009ae:	4b48      	ldr	r3, [pc, #288]	; (400ad0 <board_init+0x128>)
  4009b0:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  4009b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009b6:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  4009ba:	4b46      	ldr	r3, [pc, #280]	; (400ad4 <board_init+0x12c>)
  4009bc:	2200      	movs	r2, #0
  4009be:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  4009c2:	695a      	ldr	r2, [r3, #20]
  4009c4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  4009c8:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  4009ca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009ce:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  4009d2:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  4009d6:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  4009da:	f007 0007 	and.w	r0, r7, #7
  4009de:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  4009e0:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  4009e4:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  4009e8:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  4009ec:	f3bf 8f4f 	dsb	sy
  4009f0:	f04f 34ff 	mov.w	r4, #4294967295
  4009f4:	fa04 fc00 	lsl.w	ip, r4, r0
  4009f8:	fa06 f000 	lsl.w	r0, r6, r0
  4009fc:	fa04 f40e 	lsl.w	r4, r4, lr
  400a00:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400a04:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400a06:	463a      	mov	r2, r7
  400a08:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400a0a:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400a0e:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400a12:	3a01      	subs	r2, #1
  400a14:	4423      	add	r3, r4
  400a16:	f1b2 3fff 	cmp.w	r2, #4294967295
  400a1a:	d1f6      	bne.n	400a0a <board_init+0x62>
        } while(sets--);
  400a1c:	3e01      	subs	r6, #1
  400a1e:	4460      	add	r0, ip
  400a20:	f1b6 3fff 	cmp.w	r6, #4294967295
  400a24:	d1ef      	bne.n	400a06 <board_init+0x5e>
  400a26:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400a2a:	4b2a      	ldr	r3, [pc, #168]	; (400ad4 <board_init+0x12c>)
  400a2c:	695a      	ldr	r2, [r3, #20]
  400a2e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400a32:	615a      	str	r2, [r3, #20]
  400a34:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a38:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a3c:	4a26      	ldr	r2, [pc, #152]	; (400ad8 <board_init+0x130>)
  400a3e:	4927      	ldr	r1, [pc, #156]	; (400adc <board_init+0x134>)
  400a40:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400a42:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400a46:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400a48:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a4c:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400a50:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400a54:	f022 0201 	bic.w	r2, r2, #1
  400a58:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400a5c:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400a60:	f022 0201 	bic.w	r2, r2, #1
  400a64:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400a68:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400a6c:	f3bf 8f6f 	isb	sy
  400a70:	200a      	movs	r0, #10
  400a72:	4c1b      	ldr	r4, [pc, #108]	; (400ae0 <board_init+0x138>)
  400a74:	47a0      	blx	r4
  400a76:	200b      	movs	r0, #11
  400a78:	47a0      	blx	r4
  400a7a:	200c      	movs	r0, #12
  400a7c:	47a0      	blx	r4
  400a7e:	2010      	movs	r0, #16
  400a80:	47a0      	blx	r4
  400a82:	2011      	movs	r0, #17
  400a84:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400a86:	4b17      	ldr	r3, [pc, #92]	; (400ae4 <board_init+0x13c>)
  400a88:	f44f 7280 	mov.w	r2, #256	; 0x100
  400a8c:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400a8e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400a92:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400a94:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400a98:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400a9c:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400a9e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400aa2:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400aa4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400aa8:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400aaa:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400aac:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400ab0:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400ab2:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400ab6:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400ab8:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400aba:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400abe:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400ac0:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400ac4:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400ac8:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400acc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400ace:	bf00      	nop
  400ad0:	400e1850 	.word	0x400e1850
  400ad4:	e000ed00 	.word	0xe000ed00
  400ad8:	400e0c00 	.word	0x400e0c00
  400adc:	5a00080c 	.word	0x5a00080c
  400ae0:	00400f01 	.word	0x00400f01
  400ae4:	400e1200 	.word	0x400e1200

00400ae8 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400ae8:	6301      	str	r1, [r0, #48]	; 0x30
  400aea:	4770      	bx	lr

00400aec <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400aec:	6341      	str	r1, [r0, #52]	; 0x34
  400aee:	4770      	bx	lr

00400af0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400af0:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400af2:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400af6:	d03a      	beq.n	400b6e <pio_set_peripheral+0x7e>
  400af8:	d813      	bhi.n	400b22 <pio_set_peripheral+0x32>
  400afa:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400afe:	d025      	beq.n	400b4c <pio_set_peripheral+0x5c>
  400b00:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400b04:	d10a      	bne.n	400b1c <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b06:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400b08:	4313      	orrs	r3, r2
  400b0a:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400b0c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400b0e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400b10:	400b      	ands	r3, r1
  400b12:	ea23 0302 	bic.w	r3, r3, r2
  400b16:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400b18:	6042      	str	r2, [r0, #4]
  400b1a:	4770      	bx	lr
	switch (ul_type) {
  400b1c:	2900      	cmp	r1, #0
  400b1e:	d1fb      	bne.n	400b18 <pio_set_peripheral+0x28>
  400b20:	4770      	bx	lr
  400b22:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400b26:	d021      	beq.n	400b6c <pio_set_peripheral+0x7c>
  400b28:	d809      	bhi.n	400b3e <pio_set_peripheral+0x4e>
  400b2a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400b2e:	d1f3      	bne.n	400b18 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b30:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400b32:	4313      	orrs	r3, r2
  400b34:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b36:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400b38:	4313      	orrs	r3, r2
  400b3a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400b3c:	e7ec      	b.n	400b18 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400b3e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b42:	d013      	beq.n	400b6c <pio_set_peripheral+0x7c>
  400b44:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400b48:	d010      	beq.n	400b6c <pio_set_peripheral+0x7c>
  400b4a:	e7e5      	b.n	400b18 <pio_set_peripheral+0x28>
{
  400b4c:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b4e:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400b50:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400b52:	43d3      	mvns	r3, r2
  400b54:	4021      	ands	r1, r4
  400b56:	461c      	mov	r4, r3
  400b58:	4019      	ands	r1, r3
  400b5a:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b5c:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400b5e:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400b60:	400b      	ands	r3, r1
  400b62:	4023      	ands	r3, r4
  400b64:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400b66:	6042      	str	r2, [r0, #4]
}
  400b68:	f85d 4b04 	ldr.w	r4, [sp], #4
  400b6c:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400b6e:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400b70:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400b72:	400b      	ands	r3, r1
  400b74:	ea23 0302 	bic.w	r3, r3, r2
  400b78:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400b7a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400b7c:	4313      	orrs	r3, r2
  400b7e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400b80:	e7ca      	b.n	400b18 <pio_set_peripheral+0x28>

00400b82 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400b82:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400b84:	f012 0f01 	tst.w	r2, #1
  400b88:	d10d      	bne.n	400ba6 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400b8a:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400b8c:	f012 0f0a 	tst.w	r2, #10
  400b90:	d00b      	beq.n	400baa <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400b92:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400b94:	f012 0f02 	tst.w	r2, #2
  400b98:	d109      	bne.n	400bae <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400b9a:	f012 0f08 	tst.w	r2, #8
  400b9e:	d008      	beq.n	400bb2 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400ba0:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400ba4:	e005      	b.n	400bb2 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400ba6:	6641      	str	r1, [r0, #100]	; 0x64
  400ba8:	e7f0      	b.n	400b8c <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400baa:	6241      	str	r1, [r0, #36]	; 0x24
  400bac:	e7f2      	b.n	400b94 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400bae:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400bb2:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400bb4:	6001      	str	r1, [r0, #0]
  400bb6:	4770      	bx	lr

00400bb8 <pio_set_output>:
{
  400bb8:	b410      	push	{r4}
  400bba:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400bbc:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400bbe:	b94c      	cbnz	r4, 400bd4 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400bc0:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400bc2:	b14b      	cbz	r3, 400bd8 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400bc4:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400bc6:	b94a      	cbnz	r2, 400bdc <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400bc8:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400bca:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400bcc:	6001      	str	r1, [r0, #0]
}
  400bce:	f85d 4b04 	ldr.w	r4, [sp], #4
  400bd2:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400bd4:	6641      	str	r1, [r0, #100]	; 0x64
  400bd6:	e7f4      	b.n	400bc2 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400bd8:	6541      	str	r1, [r0, #84]	; 0x54
  400bda:	e7f4      	b.n	400bc6 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400bdc:	6301      	str	r1, [r0, #48]	; 0x30
  400bde:	e7f4      	b.n	400bca <pio_set_output+0x12>

00400be0 <pio_configure>:
{
  400be0:	b570      	push	{r4, r5, r6, lr}
  400be2:	b082      	sub	sp, #8
  400be4:	4605      	mov	r5, r0
  400be6:	4616      	mov	r6, r2
  400be8:	461c      	mov	r4, r3
	switch (ul_type) {
  400bea:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400bee:	d014      	beq.n	400c1a <pio_configure+0x3a>
  400bf0:	d90a      	bls.n	400c08 <pio_configure+0x28>
  400bf2:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400bf6:	d024      	beq.n	400c42 <pio_configure+0x62>
  400bf8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400bfc:	d021      	beq.n	400c42 <pio_configure+0x62>
  400bfe:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400c02:	d017      	beq.n	400c34 <pio_configure+0x54>
		return 0;
  400c04:	2000      	movs	r0, #0
  400c06:	e01a      	b.n	400c3e <pio_configure+0x5e>
	switch (ul_type) {
  400c08:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c0c:	d005      	beq.n	400c1a <pio_configure+0x3a>
  400c0e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c12:	d002      	beq.n	400c1a <pio_configure+0x3a>
  400c14:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c18:	d1f4      	bne.n	400c04 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400c1a:	4632      	mov	r2, r6
  400c1c:	4628      	mov	r0, r5
  400c1e:	4b11      	ldr	r3, [pc, #68]	; (400c64 <pio_configure+0x84>)
  400c20:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400c22:	f014 0f01 	tst.w	r4, #1
  400c26:	d102      	bne.n	400c2e <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400c28:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400c2a:	2001      	movs	r0, #1
  400c2c:	e007      	b.n	400c3e <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400c2e:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400c30:	2001      	movs	r0, #1
  400c32:	e004      	b.n	400c3e <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400c34:	461a      	mov	r2, r3
  400c36:	4631      	mov	r1, r6
  400c38:	4b0b      	ldr	r3, [pc, #44]	; (400c68 <pio_configure+0x88>)
  400c3a:	4798      	blx	r3
	return 1;
  400c3c:	2001      	movs	r0, #1
}
  400c3e:	b002      	add	sp, #8
  400c40:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400c42:	f004 0301 	and.w	r3, r4, #1
  400c46:	9300      	str	r3, [sp, #0]
  400c48:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400c4c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c50:	bf14      	ite	ne
  400c52:	2200      	movne	r2, #0
  400c54:	2201      	moveq	r2, #1
  400c56:	4631      	mov	r1, r6
  400c58:	4628      	mov	r0, r5
  400c5a:	4c04      	ldr	r4, [pc, #16]	; (400c6c <pio_configure+0x8c>)
  400c5c:	47a0      	blx	r4
	return 1;
  400c5e:	2001      	movs	r0, #1
		break;
  400c60:	e7ed      	b.n	400c3e <pio_configure+0x5e>
  400c62:	bf00      	nop
  400c64:	00400af1 	.word	0x00400af1
  400c68:	00400b83 	.word	0x00400b83
  400c6c:	00400bb9 	.word	0x00400bb9

00400c70 <pio_get_output_data_status>:
	if ((p_pio->PIO_ODSR & ul_mask) == 0) {
  400c70:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400c72:	420b      	tst	r3, r1
}
  400c74:	bf14      	ite	ne
  400c76:	2001      	movne	r0, #1
  400c78:	2000      	moveq	r0, #0
  400c7a:	4770      	bx	lr

00400c7c <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400c7c:	f012 0f10 	tst.w	r2, #16
  400c80:	d012      	beq.n	400ca8 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400c82:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400c86:	f012 0f20 	tst.w	r2, #32
  400c8a:	d007      	beq.n	400c9c <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400c8c:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400c90:	f012 0f40 	tst.w	r2, #64	; 0x40
  400c94:	d005      	beq.n	400ca2 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400c96:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400c9a:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400c9c:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400ca0:	e7f6      	b.n	400c90 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400ca2:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400ca6:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400ca8:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400cac:	4770      	bx	lr

00400cae <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400cae:	6401      	str	r1, [r0, #64]	; 0x40
  400cb0:	4770      	bx	lr

00400cb2 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400cb2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400cb4:	4770      	bx	lr

00400cb6 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400cb6:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400cb8:	4770      	bx	lr
	...

00400cbc <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400cbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400cc0:	4604      	mov	r4, r0
  400cc2:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400cc4:	4b0e      	ldr	r3, [pc, #56]	; (400d00 <pio_handler_process+0x44>)
  400cc6:	4798      	blx	r3
  400cc8:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400cca:	4620      	mov	r0, r4
  400ccc:	4b0d      	ldr	r3, [pc, #52]	; (400d04 <pio_handler_process+0x48>)
  400cce:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400cd0:	4005      	ands	r5, r0
  400cd2:	d013      	beq.n	400cfc <pio_handler_process+0x40>
  400cd4:	4c0c      	ldr	r4, [pc, #48]	; (400d08 <pio_handler_process+0x4c>)
  400cd6:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400cda:	e003      	b.n	400ce4 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400cdc:	42b4      	cmp	r4, r6
  400cde:	d00d      	beq.n	400cfc <pio_handler_process+0x40>
  400ce0:	3410      	adds	r4, #16
		while (status != 0) {
  400ce2:	b15d      	cbz	r5, 400cfc <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400ce4:	6820      	ldr	r0, [r4, #0]
  400ce6:	4540      	cmp	r0, r8
  400ce8:	d1f8      	bne.n	400cdc <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400cea:	6861      	ldr	r1, [r4, #4]
  400cec:	4229      	tst	r1, r5
  400cee:	d0f5      	beq.n	400cdc <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400cf0:	68e3      	ldr	r3, [r4, #12]
  400cf2:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400cf4:	6863      	ldr	r3, [r4, #4]
  400cf6:	ea25 0503 	bic.w	r5, r5, r3
  400cfa:	e7ef      	b.n	400cdc <pio_handler_process+0x20>
  400cfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400d00:	00400cb3 	.word	0x00400cb3
  400d04:	00400cb7 	.word	0x00400cb7
  400d08:	20400bf0 	.word	0x20400bf0

00400d0c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400d0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400d0e:	4c18      	ldr	r4, [pc, #96]	; (400d70 <pio_handler_set+0x64>)
  400d10:	6826      	ldr	r6, [r4, #0]
  400d12:	2e06      	cmp	r6, #6
  400d14:	d82a      	bhi.n	400d6c <pio_handler_set+0x60>
  400d16:	f04f 0c00 	mov.w	ip, #0
  400d1a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400d1c:	4f15      	ldr	r7, [pc, #84]	; (400d74 <pio_handler_set+0x68>)
  400d1e:	e004      	b.n	400d2a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400d20:	3401      	adds	r4, #1
  400d22:	b2e4      	uxtb	r4, r4
  400d24:	46a4      	mov	ip, r4
  400d26:	42a6      	cmp	r6, r4
  400d28:	d309      	bcc.n	400d3e <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400d2a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400d2c:	0125      	lsls	r5, r4, #4
  400d2e:	597d      	ldr	r5, [r7, r5]
  400d30:	428d      	cmp	r5, r1
  400d32:	d1f5      	bne.n	400d20 <pio_handler_set+0x14>
  400d34:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400d38:	686d      	ldr	r5, [r5, #4]
  400d3a:	4295      	cmp	r5, r2
  400d3c:	d1f0      	bne.n	400d20 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400d3e:	4d0d      	ldr	r5, [pc, #52]	; (400d74 <pio_handler_set+0x68>)
  400d40:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400d44:	eb05 040e 	add.w	r4, r5, lr
  400d48:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400d4c:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400d4e:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400d50:	9906      	ldr	r1, [sp, #24]
  400d52:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400d54:	3601      	adds	r6, #1
  400d56:	4566      	cmp	r6, ip
  400d58:	d005      	beq.n	400d66 <pio_handler_set+0x5a>
  400d5a:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400d5c:	461a      	mov	r2, r3
  400d5e:	4b06      	ldr	r3, [pc, #24]	; (400d78 <pio_handler_set+0x6c>)
  400d60:	4798      	blx	r3

	return 0;
  400d62:	2000      	movs	r0, #0
  400d64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400d66:	4902      	ldr	r1, [pc, #8]	; (400d70 <pio_handler_set+0x64>)
  400d68:	600e      	str	r6, [r1, #0]
  400d6a:	e7f6      	b.n	400d5a <pio_handler_set+0x4e>
		return 1;
  400d6c:	2001      	movs	r0, #1
}
  400d6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400d70:	20400c60 	.word	0x20400c60
  400d74:	20400bf0 	.word	0x20400bf0
  400d78:	00400c7d 	.word	0x00400c7d

00400d7c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400d7c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400d7e:	210a      	movs	r1, #10
  400d80:	4801      	ldr	r0, [pc, #4]	; (400d88 <PIOA_Handler+0xc>)
  400d82:	4b02      	ldr	r3, [pc, #8]	; (400d8c <PIOA_Handler+0x10>)
  400d84:	4798      	blx	r3
  400d86:	bd08      	pop	{r3, pc}
  400d88:	400e0e00 	.word	0x400e0e00
  400d8c:	00400cbd 	.word	0x00400cbd

00400d90 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400d90:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400d92:	210b      	movs	r1, #11
  400d94:	4801      	ldr	r0, [pc, #4]	; (400d9c <PIOB_Handler+0xc>)
  400d96:	4b02      	ldr	r3, [pc, #8]	; (400da0 <PIOB_Handler+0x10>)
  400d98:	4798      	blx	r3
  400d9a:	bd08      	pop	{r3, pc}
  400d9c:	400e1000 	.word	0x400e1000
  400da0:	00400cbd 	.word	0x00400cbd

00400da4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400da4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400da6:	210c      	movs	r1, #12
  400da8:	4801      	ldr	r0, [pc, #4]	; (400db0 <PIOC_Handler+0xc>)
  400daa:	4b02      	ldr	r3, [pc, #8]	; (400db4 <PIOC_Handler+0x10>)
  400dac:	4798      	blx	r3
  400dae:	bd08      	pop	{r3, pc}
  400db0:	400e1200 	.word	0x400e1200
  400db4:	00400cbd 	.word	0x00400cbd

00400db8 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400db8:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400dba:	2110      	movs	r1, #16
  400dbc:	4801      	ldr	r0, [pc, #4]	; (400dc4 <PIOD_Handler+0xc>)
  400dbe:	4b02      	ldr	r3, [pc, #8]	; (400dc8 <PIOD_Handler+0x10>)
  400dc0:	4798      	blx	r3
  400dc2:	bd08      	pop	{r3, pc}
  400dc4:	400e1400 	.word	0x400e1400
  400dc8:	00400cbd 	.word	0x00400cbd

00400dcc <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400dcc:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400dce:	2111      	movs	r1, #17
  400dd0:	4801      	ldr	r0, [pc, #4]	; (400dd8 <PIOE_Handler+0xc>)
  400dd2:	4b02      	ldr	r3, [pc, #8]	; (400ddc <PIOE_Handler+0x10>)
  400dd4:	4798      	blx	r3
  400dd6:	bd08      	pop	{r3, pc}
  400dd8:	400e1600 	.word	0x400e1600
  400ddc:	00400cbd 	.word	0x00400cbd

00400de0 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400de0:	2803      	cmp	r0, #3
  400de2:	d011      	beq.n	400e08 <pmc_mck_set_division+0x28>
  400de4:	2804      	cmp	r0, #4
  400de6:	d012      	beq.n	400e0e <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400de8:	2802      	cmp	r0, #2
  400dea:	bf0c      	ite	eq
  400dec:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400df0:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400df2:	4a08      	ldr	r2, [pc, #32]	; (400e14 <pmc_mck_set_division+0x34>)
  400df4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400df6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400dfa:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400dfc:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400dfe:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e00:	f013 0f08 	tst.w	r3, #8
  400e04:	d0fb      	beq.n	400dfe <pmc_mck_set_division+0x1e>
}
  400e06:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400e08:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400e0c:	e7f1      	b.n	400df2 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400e0e:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400e12:	e7ee      	b.n	400df2 <pmc_mck_set_division+0x12>
  400e14:	400e0600 	.word	0x400e0600

00400e18 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400e18:	4a17      	ldr	r2, [pc, #92]	; (400e78 <pmc_switch_mck_to_pllack+0x60>)
  400e1a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e1c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400e20:	4318      	orrs	r0, r3
  400e22:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e24:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e26:	f013 0f08 	tst.w	r3, #8
  400e2a:	d10a      	bne.n	400e42 <pmc_switch_mck_to_pllack+0x2a>
  400e2c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400e30:	4911      	ldr	r1, [pc, #68]	; (400e78 <pmc_switch_mck_to_pllack+0x60>)
  400e32:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e34:	f012 0f08 	tst.w	r2, #8
  400e38:	d103      	bne.n	400e42 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e3a:	3b01      	subs	r3, #1
  400e3c:	d1f9      	bne.n	400e32 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400e3e:	2001      	movs	r0, #1
  400e40:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400e42:	4a0d      	ldr	r2, [pc, #52]	; (400e78 <pmc_switch_mck_to_pllack+0x60>)
  400e44:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400e46:	f023 0303 	bic.w	r3, r3, #3
  400e4a:	f043 0302 	orr.w	r3, r3, #2
  400e4e:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e50:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e52:	f013 0f08 	tst.w	r3, #8
  400e56:	d10a      	bne.n	400e6e <pmc_switch_mck_to_pllack+0x56>
  400e58:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400e5c:	4906      	ldr	r1, [pc, #24]	; (400e78 <pmc_switch_mck_to_pllack+0x60>)
  400e5e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e60:	f012 0f08 	tst.w	r2, #8
  400e64:	d105      	bne.n	400e72 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e66:	3b01      	subs	r3, #1
  400e68:	d1f9      	bne.n	400e5e <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400e6a:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400e6c:	4770      	bx	lr
	return 0;
  400e6e:	2000      	movs	r0, #0
  400e70:	4770      	bx	lr
  400e72:	2000      	movs	r0, #0
  400e74:	4770      	bx	lr
  400e76:	bf00      	nop
  400e78:	400e0600 	.word	0x400e0600

00400e7c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400e7c:	b9a0      	cbnz	r0, 400ea8 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400e7e:	480e      	ldr	r0, [pc, #56]	; (400eb8 <pmc_switch_mainck_to_xtal+0x3c>)
  400e80:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400e82:	0209      	lsls	r1, r1, #8
  400e84:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400e86:	4a0d      	ldr	r2, [pc, #52]	; (400ebc <pmc_switch_mainck_to_xtal+0x40>)
  400e88:	401a      	ands	r2, r3
  400e8a:	4b0d      	ldr	r3, [pc, #52]	; (400ec0 <pmc_switch_mainck_to_xtal+0x44>)
  400e8c:	4313      	orrs	r3, r2
  400e8e:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400e90:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400e92:	4602      	mov	r2, r0
  400e94:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e96:	f013 0f01 	tst.w	r3, #1
  400e9a:	d0fb      	beq.n	400e94 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400e9c:	4a06      	ldr	r2, [pc, #24]	; (400eb8 <pmc_switch_mainck_to_xtal+0x3c>)
  400e9e:	6a11      	ldr	r1, [r2, #32]
  400ea0:	4b08      	ldr	r3, [pc, #32]	; (400ec4 <pmc_switch_mainck_to_xtal+0x48>)
  400ea2:	430b      	orrs	r3, r1
  400ea4:	6213      	str	r3, [r2, #32]
  400ea6:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400ea8:	4903      	ldr	r1, [pc, #12]	; (400eb8 <pmc_switch_mainck_to_xtal+0x3c>)
  400eaa:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400eac:	4a06      	ldr	r2, [pc, #24]	; (400ec8 <pmc_switch_mainck_to_xtal+0x4c>)
  400eae:	401a      	ands	r2, r3
  400eb0:	4b06      	ldr	r3, [pc, #24]	; (400ecc <pmc_switch_mainck_to_xtal+0x50>)
  400eb2:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400eb4:	620b      	str	r3, [r1, #32]
  400eb6:	4770      	bx	lr
  400eb8:	400e0600 	.word	0x400e0600
  400ebc:	ffc8fffc 	.word	0xffc8fffc
  400ec0:	00370001 	.word	0x00370001
  400ec4:	01370000 	.word	0x01370000
  400ec8:	fec8fffc 	.word	0xfec8fffc
  400ecc:	01370002 	.word	0x01370002

00400ed0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400ed0:	4b02      	ldr	r3, [pc, #8]	; (400edc <pmc_osc_is_ready_mainck+0xc>)
  400ed2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400ed4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400ed8:	4770      	bx	lr
  400eda:	bf00      	nop
  400edc:	400e0600 	.word	0x400e0600

00400ee0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400ee0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400ee4:	4b01      	ldr	r3, [pc, #4]	; (400eec <pmc_disable_pllack+0xc>)
  400ee6:	629a      	str	r2, [r3, #40]	; 0x28
  400ee8:	4770      	bx	lr
  400eea:	bf00      	nop
  400eec:	400e0600 	.word	0x400e0600

00400ef0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400ef0:	4b02      	ldr	r3, [pc, #8]	; (400efc <pmc_is_locked_pllack+0xc>)
  400ef2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400ef4:	f000 0002 	and.w	r0, r0, #2
  400ef8:	4770      	bx	lr
  400efa:	bf00      	nop
  400efc:	400e0600 	.word	0x400e0600

00400f00 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400f00:	283f      	cmp	r0, #63	; 0x3f
  400f02:	d81e      	bhi.n	400f42 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400f04:	281f      	cmp	r0, #31
  400f06:	d80c      	bhi.n	400f22 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400f08:	4b11      	ldr	r3, [pc, #68]	; (400f50 <pmc_enable_periph_clk+0x50>)
  400f0a:	699a      	ldr	r2, [r3, #24]
  400f0c:	2301      	movs	r3, #1
  400f0e:	4083      	lsls	r3, r0
  400f10:	4393      	bics	r3, r2
  400f12:	d018      	beq.n	400f46 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400f14:	2301      	movs	r3, #1
  400f16:	fa03 f000 	lsl.w	r0, r3, r0
  400f1a:	4b0d      	ldr	r3, [pc, #52]	; (400f50 <pmc_enable_periph_clk+0x50>)
  400f1c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400f1e:	2000      	movs	r0, #0
  400f20:	4770      	bx	lr
		ul_id -= 32;
  400f22:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400f24:	4b0a      	ldr	r3, [pc, #40]	; (400f50 <pmc_enable_periph_clk+0x50>)
  400f26:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400f2a:	2301      	movs	r3, #1
  400f2c:	4083      	lsls	r3, r0
  400f2e:	4393      	bics	r3, r2
  400f30:	d00b      	beq.n	400f4a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400f32:	2301      	movs	r3, #1
  400f34:	fa03 f000 	lsl.w	r0, r3, r0
  400f38:	4b05      	ldr	r3, [pc, #20]	; (400f50 <pmc_enable_periph_clk+0x50>)
  400f3a:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400f3e:	2000      	movs	r0, #0
  400f40:	4770      	bx	lr
		return 1;
  400f42:	2001      	movs	r0, #1
  400f44:	4770      	bx	lr
	return 0;
  400f46:	2000      	movs	r0, #0
  400f48:	4770      	bx	lr
  400f4a:	2000      	movs	r0, #0
}
  400f4c:	4770      	bx	lr
  400f4e:	bf00      	nop
  400f50:	400e0600 	.word	0x400e0600

00400f54 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  400f54:	4770      	bx	lr
	...

00400f58 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  400f58:	4a10      	ldr	r2, [pc, #64]	; (400f9c <pmc_enable_waitmode+0x44>)
  400f5a:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400f5c:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400f60:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  400f64:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  400f66:	6a11      	ldr	r1, [r2, #32]
  400f68:	4b0d      	ldr	r3, [pc, #52]	; (400fa0 <pmc_enable_waitmode+0x48>)
  400f6a:	430b      	orrs	r3, r1
  400f6c:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f6e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f70:	f013 0f08 	tst.w	r3, #8
  400f74:	d0fb      	beq.n	400f6e <pmc_enable_waitmode+0x16>
  400f76:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  400f7a:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  400f7c:	3b01      	subs	r3, #1
  400f7e:	d1fc      	bne.n	400f7a <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  400f80:	4a06      	ldr	r2, [pc, #24]	; (400f9c <pmc_enable_waitmode+0x44>)
  400f82:	6a13      	ldr	r3, [r2, #32]
  400f84:	f013 0f08 	tst.w	r3, #8
  400f88:	d0fb      	beq.n	400f82 <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  400f8a:	4a04      	ldr	r2, [pc, #16]	; (400f9c <pmc_enable_waitmode+0x44>)
  400f8c:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400f8e:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400f92:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  400f96:	6713      	str	r3, [r2, #112]	; 0x70
  400f98:	4770      	bx	lr
  400f9a:	bf00      	nop
  400f9c:	400e0600 	.word	0x400e0600
  400fa0:	00370004 	.word	0x00370004

00400fa4 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  400fa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  400fa8:	1e43      	subs	r3, r0, #1
  400faa:	2b04      	cmp	r3, #4
  400fac:	f200 8107 	bhi.w	4011be <pmc_sleep+0x21a>
  400fb0:	e8df f013 	tbh	[pc, r3, lsl #1]
  400fb4:	00050005 	.word	0x00050005
  400fb8:	00150015 	.word	0x00150015
  400fbc:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  400fbe:	4a81      	ldr	r2, [pc, #516]	; (4011c4 <pmc_sleep+0x220>)
  400fc0:	6913      	ldr	r3, [r2, #16]
  400fc2:	f023 0304 	bic.w	r3, r3, #4
  400fc6:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  400fc8:	2201      	movs	r2, #1
  400fca:	4b7f      	ldr	r3, [pc, #508]	; (4011c8 <pmc_sleep+0x224>)
  400fcc:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  400fce:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  400fd2:	b662      	cpsie	i
  __ASM volatile ("dsb");
  400fd4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  400fd8:	bf30      	wfi
  400fda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400fde:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  400fe0:	2803      	cmp	r0, #3
  400fe2:	bf0c      	ite	eq
  400fe4:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  400fe6:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  400fea:	4b78      	ldr	r3, [pc, #480]	; (4011cc <pmc_sleep+0x228>)
  400fec:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  400fee:	b672      	cpsid	i
  __ASM volatile ("dmb");
  400ff0:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  400ff4:	2200      	movs	r2, #0
  400ff6:	4b74      	ldr	r3, [pc, #464]	; (4011c8 <pmc_sleep+0x224>)
  400ff8:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  400ffa:	2201      	movs	r2, #1
  400ffc:	4b74      	ldr	r3, [pc, #464]	; (4011d0 <pmc_sleep+0x22c>)
  400ffe:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  401000:	4b74      	ldr	r3, [pc, #464]	; (4011d4 <pmc_sleep+0x230>)
  401002:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  401004:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  401006:	4a74      	ldr	r2, [pc, #464]	; (4011d8 <pmc_sleep+0x234>)
  401008:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  40100c:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  40100e:	4a73      	ldr	r2, [pc, #460]	; (4011dc <pmc_sleep+0x238>)
  401010:	433a      	orrs	r2, r7
  401012:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  401014:	f005 0903 	and.w	r9, r5, #3
  401018:	f1b9 0f01 	cmp.w	r9, #1
  40101c:	f240 8089 	bls.w	401132 <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  401020:	f025 0103 	bic.w	r1, r5, #3
  401024:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  401028:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40102a:	461a      	mov	r2, r3
  40102c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40102e:	f013 0f08 	tst.w	r3, #8
  401032:	d0fb      	beq.n	40102c <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401034:	f011 0f70 	tst.w	r1, #112	; 0x70
  401038:	d008      	beq.n	40104c <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  40103a:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  40103e:	4b65      	ldr	r3, [pc, #404]	; (4011d4 <pmc_sleep+0x230>)
  401040:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401042:	461a      	mov	r2, r3
  401044:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401046:	f013 0f08 	tst.w	r3, #8
  40104a:	d0fb      	beq.n	401044 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  40104c:	4b64      	ldr	r3, [pc, #400]	; (4011e0 <pmc_sleep+0x23c>)
  40104e:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  401050:	4a60      	ldr	r2, [pc, #384]	; (4011d4 <pmc_sleep+0x230>)
  401052:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401054:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  401058:	d0fb      	beq.n	401052 <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  40105a:	4a5e      	ldr	r2, [pc, #376]	; (4011d4 <pmc_sleep+0x230>)
  40105c:	6a11      	ldr	r1, [r2, #32]
  40105e:	4b61      	ldr	r3, [pc, #388]	; (4011e4 <pmc_sleep+0x240>)
  401060:	400b      	ands	r3, r1
  401062:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401066:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401068:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40106a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40106e:	d0fb      	beq.n	401068 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  401070:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401074:	4a58      	ldr	r2, [pc, #352]	; (4011d8 <pmc_sleep+0x234>)
  401076:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  401078:	2c04      	cmp	r4, #4
  40107a:	d05c      	beq.n	401136 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  40107c:	4c52      	ldr	r4, [pc, #328]	; (4011c8 <pmc_sleep+0x224>)
  40107e:	2301      	movs	r3, #1
  401080:	7023      	strb	r3, [r4, #0]
  401082:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401086:	b662      	cpsie	i

		pmc_enable_waitmode();
  401088:	4b57      	ldr	r3, [pc, #348]	; (4011e8 <pmc_sleep+0x244>)
  40108a:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  40108c:	b672      	cpsid	i
  40108e:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  401092:	2300      	movs	r3, #0
  401094:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  401096:	f017 0f02 	tst.w	r7, #2
  40109a:	d055      	beq.n	401148 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40109c:	4a4d      	ldr	r2, [pc, #308]	; (4011d4 <pmc_sleep+0x230>)
  40109e:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  4010a0:	4952      	ldr	r1, [pc, #328]	; (4011ec <pmc_sleep+0x248>)
  4010a2:	4019      	ands	r1, r3
  4010a4:	4b52      	ldr	r3, [pc, #328]	; (4011f0 <pmc_sleep+0x24c>)
  4010a6:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010a8:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4010aa:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  4010ac:	4b51      	ldr	r3, [pc, #324]	; (4011f4 <pmc_sleep+0x250>)
  4010ae:	400b      	ands	r3, r1
  4010b0:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4010b4:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  4010b6:	4b50      	ldr	r3, [pc, #320]	; (4011f8 <pmc_sleep+0x254>)
  4010b8:	4033      	ands	r3, r6
  4010ba:	2b00      	cmp	r3, #0
  4010bc:	d06e      	beq.n	40119c <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  4010be:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  4010c2:	4b44      	ldr	r3, [pc, #272]	; (4011d4 <pmc_sleep+0x230>)
  4010c4:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  4010c6:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  4010c8:	f1b9 0f02 	cmp.w	r9, #2
  4010cc:	d104      	bne.n	4010d8 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  4010ce:	4a41      	ldr	r2, [pc, #260]	; (4011d4 <pmc_sleep+0x230>)
  4010d0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010d2:	f013 0f02 	tst.w	r3, #2
  4010d6:	d0fb      	beq.n	4010d0 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  4010d8:	4a3e      	ldr	r2, [pc, #248]	; (4011d4 <pmc_sleep+0x230>)
  4010da:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4010dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  4010e0:	f005 0070 	and.w	r0, r5, #112	; 0x70
  4010e4:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4010e6:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010e8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010ea:	f013 0f08 	tst.w	r3, #8
  4010ee:	d0fb      	beq.n	4010e8 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  4010f0:	4b39      	ldr	r3, [pc, #228]	; (4011d8 <pmc_sleep+0x234>)
  4010f2:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  4010f6:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  4010fa:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4010fc:	461a      	mov	r2, r3
  4010fe:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401100:	f013 0f08 	tst.w	r3, #8
  401104:	d0fb      	beq.n	4010fe <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  401106:	4a33      	ldr	r2, [pc, #204]	; (4011d4 <pmc_sleep+0x230>)
  401108:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40110a:	420b      	tst	r3, r1
  40110c:	d0fc      	beq.n	401108 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  40110e:	2200      	movs	r2, #0
  401110:	4b2f      	ldr	r3, [pc, #188]	; (4011d0 <pmc_sleep+0x22c>)
  401112:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401114:	4b39      	ldr	r3, [pc, #228]	; (4011fc <pmc_sleep+0x258>)
  401116:	681b      	ldr	r3, [r3, #0]
  401118:	b11b      	cbz	r3, 401122 <pmc_sleep+0x17e>
			callback_clocks_restored();
  40111a:	4798      	blx	r3
			callback_clocks_restored = NULL;
  40111c:	2200      	movs	r2, #0
  40111e:	4b37      	ldr	r3, [pc, #220]	; (4011fc <pmc_sleep+0x258>)
  401120:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  401122:	2201      	movs	r2, #1
  401124:	4b28      	ldr	r3, [pc, #160]	; (4011c8 <pmc_sleep+0x224>)
  401126:	701a      	strb	r2, [r3, #0]
  401128:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40112c:	b662      	cpsie	i
  40112e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  401132:	4629      	mov	r1, r5
  401134:	e77e      	b.n	401034 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401136:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  40113a:	6a11      	ldr	r1, [r2, #32]
  40113c:	4b30      	ldr	r3, [pc, #192]	; (401200 <pmc_sleep+0x25c>)
  40113e:	400b      	ands	r3, r1
  401140:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401144:	6213      	str	r3, [r2, #32]
  401146:	e799      	b.n	40107c <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  401148:	f017 0f01 	tst.w	r7, #1
  40114c:	d0b3      	beq.n	4010b6 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  40114e:	4b21      	ldr	r3, [pc, #132]	; (4011d4 <pmc_sleep+0x230>)
  401150:	6a1b      	ldr	r3, [r3, #32]
  401152:	f013 0f01 	tst.w	r3, #1
  401156:	d10b      	bne.n	401170 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401158:	491e      	ldr	r1, [pc, #120]	; (4011d4 <pmc_sleep+0x230>)
  40115a:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  40115c:	4a29      	ldr	r2, [pc, #164]	; (401204 <pmc_sleep+0x260>)
  40115e:	401a      	ands	r2, r3
  401160:	4b29      	ldr	r3, [pc, #164]	; (401208 <pmc_sleep+0x264>)
  401162:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401164:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401166:	460a      	mov	r2, r1
  401168:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40116a:	f013 0f01 	tst.w	r3, #1
  40116e:	d0fb      	beq.n	401168 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  401170:	4b18      	ldr	r3, [pc, #96]	; (4011d4 <pmc_sleep+0x230>)
  401172:	6a1b      	ldr	r3, [r3, #32]
  401174:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401178:	d108      	bne.n	40118c <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  40117a:	4a16      	ldr	r2, [pc, #88]	; (4011d4 <pmc_sleep+0x230>)
  40117c:	6a11      	ldr	r1, [r2, #32]
  40117e:	4b23      	ldr	r3, [pc, #140]	; (40120c <pmc_sleep+0x268>)
  401180:	430b      	orrs	r3, r1
  401182:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401184:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401186:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40118a:	d0fb      	beq.n	401184 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40118c:	4a11      	ldr	r2, [pc, #68]	; (4011d4 <pmc_sleep+0x230>)
  40118e:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  401190:	4b18      	ldr	r3, [pc, #96]	; (4011f4 <pmc_sleep+0x250>)
  401192:	400b      	ands	r3, r1
  401194:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401198:	6213      	str	r3, [r2, #32]
  40119a:	e78c      	b.n	4010b6 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  40119c:	2100      	movs	r1, #0
  40119e:	e793      	b.n	4010c8 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  4011a0:	4a08      	ldr	r2, [pc, #32]	; (4011c4 <pmc_sleep+0x220>)
  4011a2:	6913      	ldr	r3, [r2, #16]
  4011a4:	f043 0304 	orr.w	r3, r3, #4
  4011a8:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  4011aa:	4a19      	ldr	r2, [pc, #100]	; (401210 <pmc_sleep+0x26c>)
  4011ac:	4b19      	ldr	r3, [pc, #100]	; (401214 <pmc_sleep+0x270>)
  4011ae:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  4011b0:	2201      	movs	r2, #1
  4011b2:	4b05      	ldr	r3, [pc, #20]	; (4011c8 <pmc_sleep+0x224>)
  4011b4:	701a      	strb	r2, [r3, #0]
  4011b6:	f3bf 8f5f 	dmb	sy
  4011ba:	b662      	cpsie	i
  __ASM volatile ("wfi");
  4011bc:	bf30      	wfi
  4011be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4011c2:	bf00      	nop
  4011c4:	e000ed00 	.word	0xe000ed00
  4011c8:	20400018 	.word	0x20400018
  4011cc:	00400f55 	.word	0x00400f55
  4011d0:	20400c64 	.word	0x20400c64
  4011d4:	400e0600 	.word	0x400e0600
  4011d8:	400e0c00 	.word	0x400e0c00
  4011dc:	00370008 	.word	0x00370008
  4011e0:	00400ee1 	.word	0x00400ee1
  4011e4:	fec8ffff 	.word	0xfec8ffff
  4011e8:	00400f59 	.word	0x00400f59
  4011ec:	fec8fffc 	.word	0xfec8fffc
  4011f0:	01370002 	.word	0x01370002
  4011f4:	ffc8ff87 	.word	0xffc8ff87
  4011f8:	07ff0000 	.word	0x07ff0000
  4011fc:	20400c68 	.word	0x20400c68
  401200:	ffc8fffe 	.word	0xffc8fffe
  401204:	ffc8fffc 	.word	0xffc8fffc
  401208:	00370001 	.word	0x00370001
  40120c:	01370000 	.word	0x01370000
  401210:	a5000004 	.word	0xa5000004
  401214:	400e1810 	.word	0x400e1810

00401218 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401218:	e7fe      	b.n	401218 <Dummy_Handler>
	...

0040121c <Reset_Handler>:
{
  40121c:	b500      	push	{lr}
  40121e:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401220:	4b25      	ldr	r3, [pc, #148]	; (4012b8 <Reset_Handler+0x9c>)
  401222:	4a26      	ldr	r2, [pc, #152]	; (4012bc <Reset_Handler+0xa0>)
  401224:	429a      	cmp	r2, r3
  401226:	d010      	beq.n	40124a <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401228:	4b25      	ldr	r3, [pc, #148]	; (4012c0 <Reset_Handler+0xa4>)
  40122a:	4a23      	ldr	r2, [pc, #140]	; (4012b8 <Reset_Handler+0x9c>)
  40122c:	429a      	cmp	r2, r3
  40122e:	d20c      	bcs.n	40124a <Reset_Handler+0x2e>
  401230:	3b01      	subs	r3, #1
  401232:	1a9b      	subs	r3, r3, r2
  401234:	f023 0303 	bic.w	r3, r3, #3
  401238:	3304      	adds	r3, #4
  40123a:	4413      	add	r3, r2
  40123c:	491f      	ldr	r1, [pc, #124]	; (4012bc <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  40123e:	f851 0b04 	ldr.w	r0, [r1], #4
  401242:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401246:	429a      	cmp	r2, r3
  401248:	d1f9      	bne.n	40123e <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  40124a:	4b1e      	ldr	r3, [pc, #120]	; (4012c4 <Reset_Handler+0xa8>)
  40124c:	4a1e      	ldr	r2, [pc, #120]	; (4012c8 <Reset_Handler+0xac>)
  40124e:	429a      	cmp	r2, r3
  401250:	d20a      	bcs.n	401268 <Reset_Handler+0x4c>
  401252:	3b01      	subs	r3, #1
  401254:	1a9b      	subs	r3, r3, r2
  401256:	f023 0303 	bic.w	r3, r3, #3
  40125a:	3304      	adds	r3, #4
  40125c:	4413      	add	r3, r2
                *pDest++ = 0;
  40125e:	2100      	movs	r1, #0
  401260:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401264:	4293      	cmp	r3, r2
  401266:	d1fb      	bne.n	401260 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401268:	4a18      	ldr	r2, [pc, #96]	; (4012cc <Reset_Handler+0xb0>)
  40126a:	4b19      	ldr	r3, [pc, #100]	; (4012d0 <Reset_Handler+0xb4>)
  40126c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  401270:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  401272:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401276:	fab3 f383 	clz	r3, r3
  40127a:	095b      	lsrs	r3, r3, #5
  40127c:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40127e:	b672      	cpsid	i
  __ASM volatile ("dmb");
  401280:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401284:	2200      	movs	r2, #0
  401286:	4b13      	ldr	r3, [pc, #76]	; (4012d4 <Reset_Handler+0xb8>)
  401288:	701a      	strb	r2, [r3, #0]
	return flags;
  40128a:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  40128c:	4a12      	ldr	r2, [pc, #72]	; (4012d8 <Reset_Handler+0xbc>)
  40128e:	6813      	ldr	r3, [r2, #0]
  401290:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401294:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401296:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40129a:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40129e:	b129      	cbz	r1, 4012ac <Reset_Handler+0x90>
		cpu_irq_enable();
  4012a0:	2201      	movs	r2, #1
  4012a2:	4b0c      	ldr	r3, [pc, #48]	; (4012d4 <Reset_Handler+0xb8>)
  4012a4:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  4012a6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4012aa:	b662      	cpsie	i
        __libc_init_array();
  4012ac:	4b0b      	ldr	r3, [pc, #44]	; (4012dc <Reset_Handler+0xc0>)
  4012ae:	4798      	blx	r3
        main();
  4012b0:	4b0b      	ldr	r3, [pc, #44]	; (4012e0 <Reset_Handler+0xc4>)
  4012b2:	4798      	blx	r3
  4012b4:	e7fe      	b.n	4012b4 <Reset_Handler+0x98>
  4012b6:	bf00      	nop
  4012b8:	20400000 	.word	0x20400000
  4012bc:	00406e3c 	.word	0x00406e3c
  4012c0:	204009d0 	.word	0x204009d0
  4012c4:	20400cd0 	.word	0x20400cd0
  4012c8:	204009d0 	.word	0x204009d0
  4012cc:	e000ed00 	.word	0xe000ed00
  4012d0:	00400000 	.word	0x00400000
  4012d4:	20400018 	.word	0x20400018
  4012d8:	e000ed88 	.word	0xe000ed88
  4012dc:	00401841 	.word	0x00401841
  4012e0:	00401705 	.word	0x00401705

004012e4 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4012e4:	4b3b      	ldr	r3, [pc, #236]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  4012e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4012e8:	f003 0303 	and.w	r3, r3, #3
  4012ec:	2b01      	cmp	r3, #1
  4012ee:	d01d      	beq.n	40132c <SystemCoreClockUpdate+0x48>
  4012f0:	b183      	cbz	r3, 401314 <SystemCoreClockUpdate+0x30>
  4012f2:	2b02      	cmp	r3, #2
  4012f4:	d036      	beq.n	401364 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4012f6:	4b37      	ldr	r3, [pc, #220]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  4012f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4012fa:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4012fe:	2b70      	cmp	r3, #112	; 0x70
  401300:	d05f      	beq.n	4013c2 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401302:	4b34      	ldr	r3, [pc, #208]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  401304:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401306:	4934      	ldr	r1, [pc, #208]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  401308:	f3c2 1202 	ubfx	r2, r2, #4, #3
  40130c:	680b      	ldr	r3, [r1, #0]
  40130e:	40d3      	lsrs	r3, r2
  401310:	600b      	str	r3, [r1, #0]
  401312:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401314:	4b31      	ldr	r3, [pc, #196]	; (4013dc <SystemCoreClockUpdate+0xf8>)
  401316:	695b      	ldr	r3, [r3, #20]
  401318:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40131c:	bf14      	ite	ne
  40131e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401322:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401326:	4b2c      	ldr	r3, [pc, #176]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  401328:	601a      	str	r2, [r3, #0]
  40132a:	e7e4      	b.n	4012f6 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  40132c:	4b29      	ldr	r3, [pc, #164]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  40132e:	6a1b      	ldr	r3, [r3, #32]
  401330:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401334:	d003      	beq.n	40133e <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401336:	4a2a      	ldr	r2, [pc, #168]	; (4013e0 <SystemCoreClockUpdate+0xfc>)
  401338:	4b27      	ldr	r3, [pc, #156]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  40133a:	601a      	str	r2, [r3, #0]
  40133c:	e7db      	b.n	4012f6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40133e:	4a29      	ldr	r2, [pc, #164]	; (4013e4 <SystemCoreClockUpdate+0x100>)
  401340:	4b25      	ldr	r3, [pc, #148]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  401342:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401344:	4b23      	ldr	r3, [pc, #140]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  401346:	6a1b      	ldr	r3, [r3, #32]
  401348:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40134c:	2b10      	cmp	r3, #16
  40134e:	d005      	beq.n	40135c <SystemCoreClockUpdate+0x78>
  401350:	2b20      	cmp	r3, #32
  401352:	d1d0      	bne.n	4012f6 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401354:	4a22      	ldr	r2, [pc, #136]	; (4013e0 <SystemCoreClockUpdate+0xfc>)
  401356:	4b20      	ldr	r3, [pc, #128]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  401358:	601a      	str	r2, [r3, #0]
          break;
  40135a:	e7cc      	b.n	4012f6 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  40135c:	4a22      	ldr	r2, [pc, #136]	; (4013e8 <SystemCoreClockUpdate+0x104>)
  40135e:	4b1e      	ldr	r3, [pc, #120]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  401360:	601a      	str	r2, [r3, #0]
          break;
  401362:	e7c8      	b.n	4012f6 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401364:	4b1b      	ldr	r3, [pc, #108]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  401366:	6a1b      	ldr	r3, [r3, #32]
  401368:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40136c:	d016      	beq.n	40139c <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  40136e:	4a1c      	ldr	r2, [pc, #112]	; (4013e0 <SystemCoreClockUpdate+0xfc>)
  401370:	4b19      	ldr	r3, [pc, #100]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  401372:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401374:	4b17      	ldr	r3, [pc, #92]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  401376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401378:	f003 0303 	and.w	r3, r3, #3
  40137c:	2b02      	cmp	r3, #2
  40137e:	d1ba      	bne.n	4012f6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401380:	4a14      	ldr	r2, [pc, #80]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  401382:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401384:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401386:	4814      	ldr	r0, [pc, #80]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401388:	f3c1 410a 	ubfx	r1, r1, #16, #11
  40138c:	6803      	ldr	r3, [r0, #0]
  40138e:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401392:	b2d2      	uxtb	r2, r2
  401394:	fbb3 f3f2 	udiv	r3, r3, r2
  401398:	6003      	str	r3, [r0, #0]
  40139a:	e7ac      	b.n	4012f6 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40139c:	4a11      	ldr	r2, [pc, #68]	; (4013e4 <SystemCoreClockUpdate+0x100>)
  40139e:	4b0e      	ldr	r3, [pc, #56]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  4013a0:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4013a2:	4b0c      	ldr	r3, [pc, #48]	; (4013d4 <SystemCoreClockUpdate+0xf0>)
  4013a4:	6a1b      	ldr	r3, [r3, #32]
  4013a6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4013aa:	2b10      	cmp	r3, #16
  4013ac:	d005      	beq.n	4013ba <SystemCoreClockUpdate+0xd6>
  4013ae:	2b20      	cmp	r3, #32
  4013b0:	d1e0      	bne.n	401374 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  4013b2:	4a0b      	ldr	r2, [pc, #44]	; (4013e0 <SystemCoreClockUpdate+0xfc>)
  4013b4:	4b08      	ldr	r3, [pc, #32]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  4013b6:	601a      	str	r2, [r3, #0]
          break;
  4013b8:	e7dc      	b.n	401374 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  4013ba:	4a0b      	ldr	r2, [pc, #44]	; (4013e8 <SystemCoreClockUpdate+0x104>)
  4013bc:	4b06      	ldr	r3, [pc, #24]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  4013be:	601a      	str	r2, [r3, #0]
          break;
  4013c0:	e7d8      	b.n	401374 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  4013c2:	4a05      	ldr	r2, [pc, #20]	; (4013d8 <SystemCoreClockUpdate+0xf4>)
  4013c4:	6813      	ldr	r3, [r2, #0]
  4013c6:	4909      	ldr	r1, [pc, #36]	; (4013ec <SystemCoreClockUpdate+0x108>)
  4013c8:	fba1 1303 	umull	r1, r3, r1, r3
  4013cc:	085b      	lsrs	r3, r3, #1
  4013ce:	6013      	str	r3, [r2, #0]
  4013d0:	4770      	bx	lr
  4013d2:	bf00      	nop
  4013d4:	400e0600 	.word	0x400e0600
  4013d8:	2040001c 	.word	0x2040001c
  4013dc:	400e1810 	.word	0x400e1810
  4013e0:	00b71b00 	.word	0x00b71b00
  4013e4:	003d0900 	.word	0x003d0900
  4013e8:	007a1200 	.word	0x007a1200
  4013ec:	aaaaaaab 	.word	0xaaaaaaab

004013f0 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4013f0:	4b16      	ldr	r3, [pc, #88]	; (40144c <system_init_flash+0x5c>)
  4013f2:	4298      	cmp	r0, r3
  4013f4:	d913      	bls.n	40141e <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4013f6:	4b16      	ldr	r3, [pc, #88]	; (401450 <system_init_flash+0x60>)
  4013f8:	4298      	cmp	r0, r3
  4013fa:	d915      	bls.n	401428 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4013fc:	4b15      	ldr	r3, [pc, #84]	; (401454 <system_init_flash+0x64>)
  4013fe:	4298      	cmp	r0, r3
  401400:	d916      	bls.n	401430 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401402:	4b15      	ldr	r3, [pc, #84]	; (401458 <system_init_flash+0x68>)
  401404:	4298      	cmp	r0, r3
  401406:	d917      	bls.n	401438 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401408:	4b14      	ldr	r3, [pc, #80]	; (40145c <system_init_flash+0x6c>)
  40140a:	4298      	cmp	r0, r3
  40140c:	d918      	bls.n	401440 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40140e:	4b14      	ldr	r3, [pc, #80]	; (401460 <system_init_flash+0x70>)
  401410:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401412:	bf94      	ite	ls
  401414:	4a13      	ldrls	r2, [pc, #76]	; (401464 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401416:	4a14      	ldrhi	r2, [pc, #80]	; (401468 <system_init_flash+0x78>)
  401418:	4b14      	ldr	r3, [pc, #80]	; (40146c <system_init_flash+0x7c>)
  40141a:	601a      	str	r2, [r3, #0]
  40141c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40141e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401422:	4b12      	ldr	r3, [pc, #72]	; (40146c <system_init_flash+0x7c>)
  401424:	601a      	str	r2, [r3, #0]
  401426:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401428:	4a11      	ldr	r2, [pc, #68]	; (401470 <system_init_flash+0x80>)
  40142a:	4b10      	ldr	r3, [pc, #64]	; (40146c <system_init_flash+0x7c>)
  40142c:	601a      	str	r2, [r3, #0]
  40142e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  401430:	4a10      	ldr	r2, [pc, #64]	; (401474 <system_init_flash+0x84>)
  401432:	4b0e      	ldr	r3, [pc, #56]	; (40146c <system_init_flash+0x7c>)
  401434:	601a      	str	r2, [r3, #0]
  401436:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401438:	4a0f      	ldr	r2, [pc, #60]	; (401478 <system_init_flash+0x88>)
  40143a:	4b0c      	ldr	r3, [pc, #48]	; (40146c <system_init_flash+0x7c>)
  40143c:	601a      	str	r2, [r3, #0]
  40143e:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  401440:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401444:	4b09      	ldr	r3, [pc, #36]	; (40146c <system_init_flash+0x7c>)
  401446:	601a      	str	r2, [r3, #0]
  401448:	4770      	bx	lr
  40144a:	bf00      	nop
  40144c:	015ef3bf 	.word	0x015ef3bf
  401450:	02bde77f 	.word	0x02bde77f
  401454:	041cdb3f 	.word	0x041cdb3f
  401458:	057bceff 	.word	0x057bceff
  40145c:	06dac2bf 	.word	0x06dac2bf
  401460:	0839b67f 	.word	0x0839b67f
  401464:	04000500 	.word	0x04000500
  401468:	04000600 	.word	0x04000600
  40146c:	400e0c00 	.word	0x400e0c00
  401470:	04000100 	.word	0x04000100
  401474:	04000200 	.word	0x04000200
  401478:	04000300 	.word	0x04000300

0040147c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  40147c:	4b0a      	ldr	r3, [pc, #40]	; (4014a8 <_sbrk+0x2c>)
  40147e:	681b      	ldr	r3, [r3, #0]
  401480:	b153      	cbz	r3, 401498 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  401482:	4b09      	ldr	r3, [pc, #36]	; (4014a8 <_sbrk+0x2c>)
  401484:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401486:	181a      	adds	r2, r3, r0
  401488:	4908      	ldr	r1, [pc, #32]	; (4014ac <_sbrk+0x30>)
  40148a:	4291      	cmp	r1, r2
  40148c:	db08      	blt.n	4014a0 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40148e:	4610      	mov	r0, r2
  401490:	4a05      	ldr	r2, [pc, #20]	; (4014a8 <_sbrk+0x2c>)
  401492:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401494:	4618      	mov	r0, r3
  401496:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401498:	4a05      	ldr	r2, [pc, #20]	; (4014b0 <_sbrk+0x34>)
  40149a:	4b03      	ldr	r3, [pc, #12]	; (4014a8 <_sbrk+0x2c>)
  40149c:	601a      	str	r2, [r3, #0]
  40149e:	e7f0      	b.n	401482 <_sbrk+0x6>
		return (caddr_t) -1;	
  4014a0:	f04f 30ff 	mov.w	r0, #4294967295
}
  4014a4:	4770      	bx	lr
  4014a6:	bf00      	nop
  4014a8:	20400c6c 	.word	0x20400c6c
  4014ac:	2045fffc 	.word	0x2045fffc
  4014b0:	20402ed0 	.word	0x20402ed0

004014b4 <but1_callback>:
// CALL BACKS
/// -------------------------------///

void but1_callback(void)
{
	but_flag1 = 1;
  4014b4:	2201      	movs	r2, #1
  4014b6:	4b01      	ldr	r3, [pc, #4]	; (4014bc <but1_callback+0x8>)
  4014b8:	701a      	strb	r2, [r3, #0]
  4014ba:	4770      	bx	lr
  4014bc:	20400c70 	.word	0x20400c70

004014c0 <but2_callback>:
}

void but2_callback(void)
{
	but_flag2 = !but_flag2;
  4014c0:	4a03      	ldr	r2, [pc, #12]	; (4014d0 <but2_callback+0x10>)
  4014c2:	7813      	ldrb	r3, [r2, #0]
  4014c4:	fab3 f383 	clz	r3, r3
  4014c8:	095b      	lsrs	r3, r3, #5
  4014ca:	7013      	strb	r3, [r2, #0]
  4014cc:	4770      	bx	lr
  4014ce:	bf00      	nop
  4014d0:	20400020 	.word	0x20400020

004014d4 <but3_callback>:
}

void but3_callback(void)
{
	but_flag3 = 1;
  4014d4:	2201      	movs	r2, #1
  4014d6:	4b01      	ldr	r3, [pc, #4]	; (4014dc <but3_callback+0x8>)
  4014d8:	701a      	strb	r2, [r3, #0]
  4014da:	4770      	bx	lr
  4014dc:	20400c71 	.word	0x20400c71

004014e0 <LEDs_init>:
}

void LEDs_init(void)
{
  4014e0:	b538      	push	{r3, r4, r5, lr}
	pmc_enable_periph_clk(LED1_PIO_ID);
  4014e2:	200a      	movs	r0, #10
  4014e4:	4d0d      	ldr	r5, [pc, #52]	; (40151c <LEDs_init+0x3c>)
  4014e6:	47a8      	blx	r5
	pio_configure(LED1_PIO, PIO_OUTPUT_0, LED1_IDX_MASK, PIO_DEFAULT);
  4014e8:	2300      	movs	r3, #0
  4014ea:	2201      	movs	r2, #1
  4014ec:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  4014f0:	480b      	ldr	r0, [pc, #44]	; (401520 <LEDs_init+0x40>)
  4014f2:	4c0c      	ldr	r4, [pc, #48]	; (401524 <LEDs_init+0x44>)
  4014f4:	47a0      	blx	r4

	pmc_enable_periph_clk(LED2_PIO_ID);
  4014f6:	200c      	movs	r0, #12
  4014f8:	47a8      	blx	r5
	pio_configure(LED2_PIO, PIO_OUTPUT_0, LED2_IDX_MASK, PIO_DEFAULT);
  4014fa:	2300      	movs	r3, #0
  4014fc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  401500:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  401504:	4808      	ldr	r0, [pc, #32]	; (401528 <LEDs_init+0x48>)
  401506:	47a0      	blx	r4

	pmc_enable_periph_clk(LED3_PIO_ID);
  401508:	200b      	movs	r0, #11
  40150a:	47a8      	blx	r5
	pio_configure(LED3_PIO, PIO_OUTPUT_0, LED3_IDX_MASK, PIO_DEFAULT);
  40150c:	2300      	movs	r3, #0
  40150e:	2204      	movs	r2, #4
  401510:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  401514:	4805      	ldr	r0, [pc, #20]	; (40152c <LEDs_init+0x4c>)
  401516:	47a0      	blx	r4
  401518:	bd38      	pop	{r3, r4, r5, pc}
  40151a:	bf00      	nop
  40151c:	00400f01 	.word	0x00400f01
  401520:	400e0e00 	.word	0x400e0e00
  401524:	00400be1 	.word	0x00400be1
  401528:	400e1200 	.word	0x400e1200
  40152c:	400e1000 	.word	0x400e1000

00401530 <BUTs_init>:
};

void BUTs_init(void)
{
  401530:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  401534:	b082      	sub	sp, #8
	pmc_enable_periph_clk(BUT1_PIO_ID);
  401536:	2010      	movs	r0, #16
  401538:	4f2d      	ldr	r7, [pc, #180]	; (4015f0 <BUTs_init+0xc0>)
  40153a:	47b8      	blx	r7
	pio_configure(BUT1_PIO, PIO_INPUT, BUT1_IDX_MASK, PIO_PULLUP);
  40153c:	4c2d      	ldr	r4, [pc, #180]	; (4015f4 <BUTs_init+0xc4>)
  40153e:	2301      	movs	r3, #1
  401540:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401544:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401548:	4620      	mov	r0, r4
  40154a:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 401610 <BUTs_init+0xe0>
  40154e:	47c8      	blx	r9
	pio_handler_set(BUT1_PIO, BUT1_PIO_ID, BUT1_IDX_MASK, PIO_IT_RISE_EDGE, but1_callback);
  401550:	4b29      	ldr	r3, [pc, #164]	; (4015f8 <BUTs_init+0xc8>)
  401552:	9300      	str	r3, [sp, #0]
  401554:	2370      	movs	r3, #112	; 0x70
  401556:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40155a:	2110      	movs	r1, #16
  40155c:	4620      	mov	r0, r4
  40155e:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 401614 <BUTs_init+0xe4>
  401562:	47c0      	blx	r8
	pio_enable_interrupt(BUT1_PIO, BUT1_IDX_MASK);
  401564:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401568:	4620      	mov	r0, r4
  40156a:	4e24      	ldr	r6, [pc, #144]	; (4015fc <BUTs_init+0xcc>)
  40156c:	47b0      	blx	r6
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40156e:	4c24      	ldr	r4, [pc, #144]	; (401600 <BUTs_init+0xd0>)
  401570:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  401574:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401576:	2580      	movs	r5, #128	; 0x80
  401578:	f884 5310 	strb.w	r5, [r4, #784]	; 0x310
	NVIC_EnableIRQ(BUT1_PIO_ID);
	NVIC_SetPriority(BUT1_PIO_ID, 4); // Prioridade 4

	pmc_enable_periph_clk(BUT2_PIO_ID);
  40157c:	200c      	movs	r0, #12
  40157e:	47b8      	blx	r7
	pio_configure(BUT2_PIO, PIO_INPUT, BUT2_IDX_MASK, PIO_PULLUP);
  401580:	f8df a094 	ldr.w	sl, [pc, #148]	; 401618 <BUTs_init+0xe8>
  401584:	2301      	movs	r3, #1
  401586:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  40158a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40158e:	4650      	mov	r0, sl
  401590:	47c8      	blx	r9
	pio_handler_set(BUT2_PIO, BUT2_PIO_ID, BUT2_IDX_MASK, PIO_IT_FALL_EDGE, but2_callback);
  401592:	4b1c      	ldr	r3, [pc, #112]	; (401604 <BUTs_init+0xd4>)
  401594:	9300      	str	r3, [sp, #0]
  401596:	2350      	movs	r3, #80	; 0x50
  401598:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  40159c:	210c      	movs	r1, #12
  40159e:	4650      	mov	r0, sl
  4015a0:	47c0      	blx	r8
	pio_enable_interrupt(BUT2_PIO, BUT2_IDX_MASK);
  4015a2:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4015a6:	4650      	mov	r0, sl
  4015a8:	47b0      	blx	r6
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4015aa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4015ae:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4015b0:	f884 530c 	strb.w	r5, [r4, #780]	; 0x30c
	NVIC_EnableIRQ(BUT2_PIO_ID);
	NVIC_SetPriority(BUT2_PIO_ID, 4); // Prioridade 4

	pmc_enable_periph_clk(BUT3_PIO_ID);
  4015b4:	200a      	movs	r0, #10
  4015b6:	47b8      	blx	r7
	pio_configure(BUT3_PIO, PIO_INPUT, BUT3_IDX_MASK, PIO_PULLUP);
  4015b8:	4f13      	ldr	r7, [pc, #76]	; (401608 <BUTs_init+0xd8>)
  4015ba:	2301      	movs	r3, #1
  4015bc:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4015c0:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  4015c4:	4638      	mov	r0, r7
  4015c6:	47c8      	blx	r9
	pio_handler_set(BUT3_PIO, BUT3_PIO_ID, BUT3_IDX_MASK, PIO_IT_RISE_EDGE, but3_callback);
  4015c8:	4b10      	ldr	r3, [pc, #64]	; (40160c <BUTs_init+0xdc>)
  4015ca:	9300      	str	r3, [sp, #0]
  4015cc:	2370      	movs	r3, #112	; 0x70
  4015ce:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4015d2:	210a      	movs	r1, #10
  4015d4:	4638      	mov	r0, r7
  4015d6:	47c0      	blx	r8
	pio_enable_interrupt(BUT3_PIO, BUT3_IDX_MASK);
  4015d8:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  4015dc:	4638      	mov	r0, r7
  4015de:	47b0      	blx	r6
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4015e0:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4015e4:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4015e6:	f884 530a 	strb.w	r5, [r4, #778]	; 0x30a
	NVIC_EnableIRQ(BUT3_PIO_ID);
	NVIC_SetPriority(BUT3_PIO_ID, 4); // Prioridade 4
}
  4015ea:	b002      	add	sp, #8
  4015ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4015f0:	00400f01 	.word	0x00400f01
  4015f4:	400e1400 	.word	0x400e1400
  4015f8:	004014b5 	.word	0x004014b5
  4015fc:	00400caf 	.word	0x00400caf
  401600:	e000e100 	.word	0xe000e100
  401604:	004014c1 	.word	0x004014c1
  401608:	400e0e00 	.word	0x400e0e00
  40160c:	004014d5 	.word	0x004014d5
  401610:	00400be1 	.word	0x00400be1
  401614:	00400d0d 	.word	0x00400d0d
  401618:	400e1200 	.word	0x400e1200

0040161c <TC0_Handler>:

void TC0_Handler(void)
{
  40161c:	b500      	push	{lr}
  40161e:	b083      	sub	sp, #12
	volatile uint32_t ul_dummy;

	/****************************************************************
	* Devemos indicar ao TC que a interrupção foi satisfeita.
	******************************************************************/
	ul_dummy = tc_get_status(TC0, 0);
  401620:	2100      	movs	r1, #0
  401622:	4805      	ldr	r0, [pc, #20]	; (401638 <TC0_Handler+0x1c>)
  401624:	4b05      	ldr	r3, [pc, #20]	; (40163c <TC0_Handler+0x20>)
  401626:	4798      	blx	r3
  401628:	9001      	str	r0, [sp, #4]

	/* Avoid compiler warning */
	UNUSED(ul_dummy);
  40162a:	9b01      	ldr	r3, [sp, #4]

	flag_tc0 = 1;
  40162c:	2201      	movs	r2, #1
  40162e:	4b04      	ldr	r3, [pc, #16]	; (401640 <TC0_Handler+0x24>)
  401630:	701a      	strb	r2, [r3, #0]
}
  401632:	b003      	add	sp, #12
  401634:	f85d fb04 	ldr.w	pc, [sp], #4
  401638:	4000c000 	.word	0x4000c000
  40163c:	00400329 	.word	0x00400329
  401640:	20400c72 	.word	0x20400c72

00401644 <TC_init>:

void TC_init(Tc *TC, int ID_TC, int TC_CHANNEL, int freq)
{
  401644:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401648:	b085      	sub	sp, #20
  40164a:	4606      	mov	r6, r0
  40164c:	460c      	mov	r4, r1
  40164e:	4617      	mov	r7, r2
  401650:	4698      	mov	r8, r3
	o uC possui 3 TCs, cada TC possui 3 canais
	TC0 : ID_TC0, ID_TC1, ID_TC2
	TC1 : ID_TC3, ID_TC4, ID_TC5
	TC2 : ID_TC6, ID_TC7, ID_TC8
	*/
	pmc_enable_periph_clk(ID_TC);
  401652:	4608      	mov	r0, r1
  401654:	4b18      	ldr	r3, [pc, #96]	; (4016b8 <TC_init+0x74>)
  401656:	4798      	blx	r3

	/** Configura o TC para operar em  4Mhz e interrupçcão no RC compare */
	tc_find_mck_divisor(freq, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  401658:	4d18      	ldr	r5, [pc, #96]	; (4016bc <TC_init+0x78>)
  40165a:	9500      	str	r5, [sp, #0]
  40165c:	ab02      	add	r3, sp, #8
  40165e:	aa03      	add	r2, sp, #12
  401660:	4629      	mov	r1, r5
  401662:	4640      	mov	r0, r8
  401664:	f8df 906c 	ldr.w	r9, [pc, #108]	; 4016d4 <TC_init+0x90>
  401668:	47c8      	blx	r9
	tc_init(TC, TC_CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  40166a:	9a02      	ldr	r2, [sp, #8]
  40166c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  401670:	4639      	mov	r1, r7
  401672:	4630      	mov	r0, r6
  401674:	4b12      	ldr	r3, [pc, #72]	; (4016c0 <TC_init+0x7c>)
  401676:	4798      	blx	r3
	tc_write_rc(TC, TC_CHANNEL, (ul_sysclk / ul_div) / freq);
  401678:	9a03      	ldr	r2, [sp, #12]
  40167a:	fbb5 f2f2 	udiv	r2, r5, r2
  40167e:	fbb2 f2f8 	udiv	r2, r2, r8
  401682:	4639      	mov	r1, r7
  401684:	4630      	mov	r0, r6
  401686:	4b0f      	ldr	r3, [pc, #60]	; (4016c4 <TC_init+0x80>)
  401688:	4798      	blx	r3
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40168a:	b263      	sxtb	r3, r4
  40168c:	095b      	lsrs	r3, r3, #5
  40168e:	f004 041f 	and.w	r4, r4, #31
  401692:	2201      	movs	r2, #1
  401694:	fa02 f404 	lsl.w	r4, r2, r4
  401698:	4a0b      	ldr	r2, [pc, #44]	; (4016c8 <TC_init+0x84>)
  40169a:	f842 4023 	str.w	r4, [r2, r3, lsl #2]

	/* Configura e ativa interrupçcão no TC canal 0 */
	/* Interrupção no C */
	NVIC_EnableIRQ((IRQn_Type)ID_TC);
	tc_enable_interrupt(TC, TC_CHANNEL, TC_IER_CPCS);
  40169e:	2210      	movs	r2, #16
  4016a0:	4639      	mov	r1, r7
  4016a2:	4630      	mov	r0, r6
  4016a4:	4b09      	ldr	r3, [pc, #36]	; (4016cc <TC_init+0x88>)
  4016a6:	4798      	blx	r3

	/* Inicializa o canal 0 do TC */
	tc_start(TC, TC_CHANNEL);
  4016a8:	4639      	mov	r1, r7
  4016aa:	4630      	mov	r0, r6
  4016ac:	4b08      	ldr	r3, [pc, #32]	; (4016d0 <TC_init+0x8c>)
  4016ae:	4798      	blx	r3
}
  4016b0:	b005      	add	sp, #20
  4016b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4016b6:	bf00      	nop
  4016b8:	00400f01 	.word	0x00400f01
  4016bc:	11e1a300 	.word	0x11e1a300
  4016c0:	004002f7 	.word	0x004002f7
  4016c4:	00400319 	.word	0x00400319
  4016c8:	e000e100 	.word	0xe000e100
  4016cc:	00400321 	.word	0x00400321
  4016d0:	00400311 	.word	0x00400311
  4016d4:	00400331 	.word	0x00400331

004016d8 <pin_toggle>:

void pin_toggle(Pio *pio, uint32_t mask)
{
  4016d8:	b538      	push	{r3, r4, r5, lr}
  4016da:	4604      	mov	r4, r0
  4016dc:	460d      	mov	r5, r1
	if (pio_get_output_data_status(pio, mask))
  4016de:	4b06      	ldr	r3, [pc, #24]	; (4016f8 <pin_toggle+0x20>)
  4016e0:	4798      	blx	r3
  4016e2:	b920      	cbnz	r0, 4016ee <pin_toggle+0x16>
		pio_clear(pio, mask);
	else
		pio_set(pio, mask);
  4016e4:	4629      	mov	r1, r5
  4016e6:	4620      	mov	r0, r4
  4016e8:	4b04      	ldr	r3, [pc, #16]	; (4016fc <pin_toggle+0x24>)
  4016ea:	4798      	blx	r3
  4016ec:	bd38      	pop	{r3, r4, r5, pc}
		pio_clear(pio, mask);
  4016ee:	4629      	mov	r1, r5
  4016f0:	4620      	mov	r0, r4
  4016f2:	4b03      	ldr	r3, [pc, #12]	; (401700 <pin_toggle+0x28>)
  4016f4:	4798      	blx	r3
  4016f6:	bd38      	pop	{r3, r4, r5, pc}
  4016f8:	00400c71 	.word	0x00400c71
  4016fc:	00400ae9 	.word	0x00400ae9
  401700:	00400aed 	.word	0x00400aed

00401704 <main>:
}

int main(void)
{
  401704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  401708:	f5ad 7d00 	sub.w	sp, sp, #512	; 0x200
	board_init();
  40170c:	4b39      	ldr	r3, [pc, #228]	; (4017f4 <main+0xf0>)
  40170e:	4798      	blx	r3
	sysclk_init();
  401710:	4b39      	ldr	r3, [pc, #228]	; (4017f8 <main+0xf4>)
  401712:	4798      	blx	r3
	delay_init();
	LEDs_init();
  401714:	4b39      	ldr	r3, [pc, #228]	; (4017fc <main+0xf8>)
  401716:	4798      	blx	r3
	BUTs_init();
  401718:	4b39      	ldr	r3, [pc, #228]	; (401800 <main+0xfc>)
  40171a:	4798      	blx	r3

	WDT->WDT_MR = WDT_MR_WDDIS;
  40171c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  401720:	4b38      	ldr	r3, [pc, #224]	; (401804 <main+0x100>)
  401722:	605a      	str	r2, [r3, #4]
	// Init OLED
	gfx_mono_ssd1306_init();
  401724:	4b38      	ldr	r3, [pc, #224]	; (401808 <main+0x104>)
  401726:	4798      	blx	r3

	// Escreve na tela um circulo e um texto
	//gfx_mono_draw_filled_circle(20, 16, 16, GFX_PIXEL_SET, GFX_WHOLE);

	but_flag1 = 0;
  401728:	2200      	movs	r2, #0
  40172a:	4b38      	ldr	r3, [pc, #224]	; (40180c <main+0x108>)
  40172c:	701a      	strb	r2, [r3, #0]
	but_flag2 = 1;
  40172e:	2101      	movs	r1, #1
  401730:	4b37      	ldr	r3, [pc, #220]	; (401810 <main+0x10c>)
  401732:	7019      	strb	r1, [r3, #0]
	but_flag3 = 0;
  401734:	4b37      	ldr	r3, [pc, #220]	; (401814 <main+0x110>)
  401736:	701a      	strb	r2, [r3, #0]

	char Buffer[512];

	int i = 5;
	TC_init(TC0, ID_TC0, 0, i);
  401738:	2305      	movs	r3, #5
  40173a:	2117      	movs	r1, #23
  40173c:	4836      	ldr	r0, [pc, #216]	; (401818 <main+0x114>)
  40173e:	4c37      	ldr	r4, [pc, #220]	; (40181c <main+0x118>)
  401740:	47a0      	blx	r4
	sprintf(Buffer, "%2d Hz", i);
  401742:	2205      	movs	r2, #5
  401744:	4936      	ldr	r1, [pc, #216]	; (401820 <main+0x11c>)
  401746:	4668      	mov	r0, sp
  401748:	4b36      	ldr	r3, [pc, #216]	; (401824 <main+0x120>)
  40174a:	4798      	blx	r3
	gfx_mono_draw_string(Buffer, 50, 16, &sysfont);
  40174c:	4b36      	ldr	r3, [pc, #216]	; (401828 <main+0x124>)
  40174e:	2210      	movs	r2, #16
  401750:	2132      	movs	r1, #50	; 0x32
  401752:	4668      	mov	r0, sp
  401754:	4c35      	ldr	r4, [pc, #212]	; (40182c <main+0x128>)
  401756:	47a0      	blx	r4
	int i = 5;
  401758:	2405      	movs	r4, #5
	/* Insert application code here, after the board has been initialized. */
	while (1)
	{
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  40175a:	4e35      	ldr	r6, [pc, #212]	; (401830 <main+0x12c>)
		if (but_flag1)
  40175c:	4d2b      	ldr	r5, [pc, #172]	; (40180c <main+0x108>)
			but_flag3 = 0;
		}

		if (flag_tc0 && but_flag2)
		{
			pin_toggle(LED2_PIO, LED2_IDX_MASK);
  40175e:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 40183c <main+0x138>
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401762:	2002      	movs	r0, #2
  401764:	47b0      	blx	r6
		if (but_flag1)
  401766:	782b      	ldrb	r3, [r5, #0]
  401768:	b99b      	cbnz	r3, 401792 <main+0x8e>
		if (but_flag3)
  40176a:	4b2a      	ldr	r3, [pc, #168]	; (401814 <main+0x110>)
  40176c:	781b      	ldrb	r3, [r3, #0]
  40176e:	bb43      	cbnz	r3, 4017c2 <main+0xbe>
		if (flag_tc0 && but_flag2)
  401770:	4b30      	ldr	r3, [pc, #192]	; (401834 <main+0x130>)
  401772:	781b      	ldrb	r3, [r3, #0]
  401774:	2b00      	cmp	r3, #0
  401776:	d0f4      	beq.n	401762 <main+0x5e>
  401778:	4b25      	ldr	r3, [pc, #148]	; (401810 <main+0x10c>)
  40177a:	781b      	ldrb	r3, [r3, #0]
  40177c:	2b00      	cmp	r3, #0
  40177e:	d0f0      	beq.n	401762 <main+0x5e>
			pin_toggle(LED2_PIO, LED2_IDX_MASK);
  401780:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401784:	4640      	mov	r0, r8
  401786:	4b2c      	ldr	r3, [pc, #176]	; (401838 <main+0x134>)
  401788:	4798      	blx	r3
			flag_tc0 = 0;
  40178a:	2200      	movs	r2, #0
  40178c:	4b29      	ldr	r3, [pc, #164]	; (401834 <main+0x130>)
  40178e:	701a      	strb	r2, [r3, #0]
  401790:	e7e7      	b.n	401762 <main+0x5e>
			sprintf(Buffer, "%2d Hz", i);
  401792:	4622      	mov	r2, r4
  401794:	4922      	ldr	r1, [pc, #136]	; (401820 <main+0x11c>)
  401796:	4668      	mov	r0, sp
  401798:	4b22      	ldr	r3, [pc, #136]	; (401824 <main+0x120>)
  40179a:	4798      	blx	r3
			gfx_mono_draw_string(Buffer, 50, 16, &sysfont);
  40179c:	4b22      	ldr	r3, [pc, #136]	; (401828 <main+0x124>)
  40179e:	2210      	movs	r2, #16
  4017a0:	2132      	movs	r1, #50	; 0x32
  4017a2:	4668      	mov	r0, sp
  4017a4:	4f21      	ldr	r7, [pc, #132]	; (40182c <main+0x128>)
  4017a6:	47b8      	blx	r7
			i++;
  4017a8:	3401      	adds	r4, #1
  4017aa:	2c0f      	cmp	r4, #15
  4017ac:	bfa8      	it	ge
  4017ae:	240f      	movge	r4, #15
			TC_init(TC0, ID_TC0, 0, i);
  4017b0:	4623      	mov	r3, r4
  4017b2:	2200      	movs	r2, #0
  4017b4:	2117      	movs	r1, #23
  4017b6:	4818      	ldr	r0, [pc, #96]	; (401818 <main+0x114>)
  4017b8:	4f18      	ldr	r7, [pc, #96]	; (40181c <main+0x118>)
  4017ba:	47b8      	blx	r7
			but_flag1 = 0;
  4017bc:	2300      	movs	r3, #0
  4017be:	702b      	strb	r3, [r5, #0]
  4017c0:	e7d3      	b.n	40176a <main+0x66>
			sprintf(Buffer, "%2d Hz", i);
  4017c2:	4622      	mov	r2, r4
  4017c4:	4916      	ldr	r1, [pc, #88]	; (401820 <main+0x11c>)
  4017c6:	4668      	mov	r0, sp
  4017c8:	4b16      	ldr	r3, [pc, #88]	; (401824 <main+0x120>)
  4017ca:	4798      	blx	r3
			gfx_mono_draw_string(Buffer, 50, 16, &sysfont);
  4017cc:	4b16      	ldr	r3, [pc, #88]	; (401828 <main+0x124>)
  4017ce:	2210      	movs	r2, #16
  4017d0:	2132      	movs	r1, #50	; 0x32
  4017d2:	4668      	mov	r0, sp
  4017d4:	4f15      	ldr	r7, [pc, #84]	; (40182c <main+0x128>)
  4017d6:	47b8      	blx	r7
			i--;
  4017d8:	3c01      	subs	r4, #1
  4017da:	2c01      	cmp	r4, #1
  4017dc:	bfb8      	it	lt
  4017de:	2401      	movlt	r4, #1
			TC_init(TC0, ID_TC0, 0, i);
  4017e0:	4623      	mov	r3, r4
  4017e2:	2200      	movs	r2, #0
  4017e4:	2117      	movs	r1, #23
  4017e6:	480c      	ldr	r0, [pc, #48]	; (401818 <main+0x114>)
  4017e8:	4f0c      	ldr	r7, [pc, #48]	; (40181c <main+0x118>)
  4017ea:	47b8      	blx	r7
			but_flag3 = 0;
  4017ec:	2200      	movs	r2, #0
  4017ee:	4b09      	ldr	r3, [pc, #36]	; (401814 <main+0x110>)
  4017f0:	701a      	strb	r2, [r3, #0]
  4017f2:	e7bd      	b.n	401770 <main+0x6c>
  4017f4:	004009a9 	.word	0x004009a9
  4017f8:	00400939 	.word	0x00400939
  4017fc:	004014e1 	.word	0x004014e1
  401800:	00401531 	.word	0x00401531
  401804:	400e1850 	.word	0x400e1850
  401808:	00400619 	.word	0x00400619
  40180c:	20400c70 	.word	0x20400c70
  401810:	20400020 	.word	0x20400020
  401814:	20400c71 	.word	0x20400c71
  401818:	4000c000 	.word	0x4000c000
  40181c:	00401645 	.word	0x00401645
  401820:	00406b7c 	.word	0x00406b7c
  401824:	0040192d 	.word	0x0040192d
  401828:	2040000c 	.word	0x2040000c
  40182c:	00400581 	.word	0x00400581
  401830:	00400fa5 	.word	0x00400fa5
  401834:	20400c72 	.word	0x20400c72
  401838:	004016d9 	.word	0x004016d9
  40183c:	400e1200 	.word	0x400e1200

00401840 <__libc_init_array>:
  401840:	b570      	push	{r4, r5, r6, lr}
  401842:	4e0f      	ldr	r6, [pc, #60]	; (401880 <__libc_init_array+0x40>)
  401844:	4d0f      	ldr	r5, [pc, #60]	; (401884 <__libc_init_array+0x44>)
  401846:	1b76      	subs	r6, r6, r5
  401848:	10b6      	asrs	r6, r6, #2
  40184a:	bf18      	it	ne
  40184c:	2400      	movne	r4, #0
  40184e:	d005      	beq.n	40185c <__libc_init_array+0x1c>
  401850:	3401      	adds	r4, #1
  401852:	f855 3b04 	ldr.w	r3, [r5], #4
  401856:	4798      	blx	r3
  401858:	42a6      	cmp	r6, r4
  40185a:	d1f9      	bne.n	401850 <__libc_init_array+0x10>
  40185c:	4e0a      	ldr	r6, [pc, #40]	; (401888 <__libc_init_array+0x48>)
  40185e:	4d0b      	ldr	r5, [pc, #44]	; (40188c <__libc_init_array+0x4c>)
  401860:	1b76      	subs	r6, r6, r5
  401862:	f005 fad5 	bl	406e10 <_init>
  401866:	10b6      	asrs	r6, r6, #2
  401868:	bf18      	it	ne
  40186a:	2400      	movne	r4, #0
  40186c:	d006      	beq.n	40187c <__libc_init_array+0x3c>
  40186e:	3401      	adds	r4, #1
  401870:	f855 3b04 	ldr.w	r3, [r5], #4
  401874:	4798      	blx	r3
  401876:	42a6      	cmp	r6, r4
  401878:	d1f9      	bne.n	40186e <__libc_init_array+0x2e>
  40187a:	bd70      	pop	{r4, r5, r6, pc}
  40187c:	bd70      	pop	{r4, r5, r6, pc}
  40187e:	bf00      	nop
  401880:	00406e1c 	.word	0x00406e1c
  401884:	00406e1c 	.word	0x00406e1c
  401888:	00406e24 	.word	0x00406e24
  40188c:	00406e1c 	.word	0x00406e1c

00401890 <memset>:
  401890:	b470      	push	{r4, r5, r6}
  401892:	0786      	lsls	r6, r0, #30
  401894:	d046      	beq.n	401924 <memset+0x94>
  401896:	1e54      	subs	r4, r2, #1
  401898:	2a00      	cmp	r2, #0
  40189a:	d041      	beq.n	401920 <memset+0x90>
  40189c:	b2ca      	uxtb	r2, r1
  40189e:	4603      	mov	r3, r0
  4018a0:	e002      	b.n	4018a8 <memset+0x18>
  4018a2:	f114 34ff 	adds.w	r4, r4, #4294967295
  4018a6:	d33b      	bcc.n	401920 <memset+0x90>
  4018a8:	f803 2b01 	strb.w	r2, [r3], #1
  4018ac:	079d      	lsls	r5, r3, #30
  4018ae:	d1f8      	bne.n	4018a2 <memset+0x12>
  4018b0:	2c03      	cmp	r4, #3
  4018b2:	d92e      	bls.n	401912 <memset+0x82>
  4018b4:	b2cd      	uxtb	r5, r1
  4018b6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  4018ba:	2c0f      	cmp	r4, #15
  4018bc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  4018c0:	d919      	bls.n	4018f6 <memset+0x66>
  4018c2:	f103 0210 	add.w	r2, r3, #16
  4018c6:	4626      	mov	r6, r4
  4018c8:	3e10      	subs	r6, #16
  4018ca:	2e0f      	cmp	r6, #15
  4018cc:	f842 5c10 	str.w	r5, [r2, #-16]
  4018d0:	f842 5c0c 	str.w	r5, [r2, #-12]
  4018d4:	f842 5c08 	str.w	r5, [r2, #-8]
  4018d8:	f842 5c04 	str.w	r5, [r2, #-4]
  4018dc:	f102 0210 	add.w	r2, r2, #16
  4018e0:	d8f2      	bhi.n	4018c8 <memset+0x38>
  4018e2:	f1a4 0210 	sub.w	r2, r4, #16
  4018e6:	f022 020f 	bic.w	r2, r2, #15
  4018ea:	f004 040f 	and.w	r4, r4, #15
  4018ee:	3210      	adds	r2, #16
  4018f0:	2c03      	cmp	r4, #3
  4018f2:	4413      	add	r3, r2
  4018f4:	d90d      	bls.n	401912 <memset+0x82>
  4018f6:	461e      	mov	r6, r3
  4018f8:	4622      	mov	r2, r4
  4018fa:	3a04      	subs	r2, #4
  4018fc:	2a03      	cmp	r2, #3
  4018fe:	f846 5b04 	str.w	r5, [r6], #4
  401902:	d8fa      	bhi.n	4018fa <memset+0x6a>
  401904:	1f22      	subs	r2, r4, #4
  401906:	f022 0203 	bic.w	r2, r2, #3
  40190a:	3204      	adds	r2, #4
  40190c:	4413      	add	r3, r2
  40190e:	f004 0403 	and.w	r4, r4, #3
  401912:	b12c      	cbz	r4, 401920 <memset+0x90>
  401914:	b2c9      	uxtb	r1, r1
  401916:	441c      	add	r4, r3
  401918:	f803 1b01 	strb.w	r1, [r3], #1
  40191c:	429c      	cmp	r4, r3
  40191e:	d1fb      	bne.n	401918 <memset+0x88>
  401920:	bc70      	pop	{r4, r5, r6}
  401922:	4770      	bx	lr
  401924:	4614      	mov	r4, r2
  401926:	4603      	mov	r3, r0
  401928:	e7c2      	b.n	4018b0 <memset+0x20>
  40192a:	bf00      	nop

0040192c <sprintf>:
  40192c:	b40e      	push	{r1, r2, r3}
  40192e:	b5f0      	push	{r4, r5, r6, r7, lr}
  401930:	b09c      	sub	sp, #112	; 0x70
  401932:	ab21      	add	r3, sp, #132	; 0x84
  401934:	490f      	ldr	r1, [pc, #60]	; (401974 <sprintf+0x48>)
  401936:	f853 2b04 	ldr.w	r2, [r3], #4
  40193a:	9301      	str	r3, [sp, #4]
  40193c:	4605      	mov	r5, r0
  40193e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401942:	6808      	ldr	r0, [r1, #0]
  401944:	9502      	str	r5, [sp, #8]
  401946:	f44f 7702 	mov.w	r7, #520	; 0x208
  40194a:	f64f 76ff 	movw	r6, #65535	; 0xffff
  40194e:	a902      	add	r1, sp, #8
  401950:	9506      	str	r5, [sp, #24]
  401952:	f8ad 7014 	strh.w	r7, [sp, #20]
  401956:	9404      	str	r4, [sp, #16]
  401958:	9407      	str	r4, [sp, #28]
  40195a:	f8ad 6016 	strh.w	r6, [sp, #22]
  40195e:	f000 f80b 	bl	401978 <_svfprintf_r>
  401962:	9b02      	ldr	r3, [sp, #8]
  401964:	2200      	movs	r2, #0
  401966:	701a      	strb	r2, [r3, #0]
  401968:	b01c      	add	sp, #112	; 0x70
  40196a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  40196e:	b003      	add	sp, #12
  401970:	4770      	bx	lr
  401972:	bf00      	nop
  401974:	20400024 	.word	0x20400024

00401978 <_svfprintf_r>:
  401978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40197c:	b0c3      	sub	sp, #268	; 0x10c
  40197e:	460c      	mov	r4, r1
  401980:	910b      	str	r1, [sp, #44]	; 0x2c
  401982:	4692      	mov	sl, r2
  401984:	930f      	str	r3, [sp, #60]	; 0x3c
  401986:	900c      	str	r0, [sp, #48]	; 0x30
  401988:	f002 fa0e 	bl	403da8 <_localeconv_r>
  40198c:	6803      	ldr	r3, [r0, #0]
  40198e:	931a      	str	r3, [sp, #104]	; 0x68
  401990:	4618      	mov	r0, r3
  401992:	f003 f8d5 	bl	404b40 <strlen>
  401996:	89a3      	ldrh	r3, [r4, #12]
  401998:	9019      	str	r0, [sp, #100]	; 0x64
  40199a:	0619      	lsls	r1, r3, #24
  40199c:	d503      	bpl.n	4019a6 <_svfprintf_r+0x2e>
  40199e:	6923      	ldr	r3, [r4, #16]
  4019a0:	2b00      	cmp	r3, #0
  4019a2:	f001 8003 	beq.w	4029ac <_svfprintf_r+0x1034>
  4019a6:	2300      	movs	r3, #0
  4019a8:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4019ac:	9313      	str	r3, [sp, #76]	; 0x4c
  4019ae:	9315      	str	r3, [sp, #84]	; 0x54
  4019b0:	9314      	str	r3, [sp, #80]	; 0x50
  4019b2:	9327      	str	r3, [sp, #156]	; 0x9c
  4019b4:	9326      	str	r3, [sp, #152]	; 0x98
  4019b6:	9318      	str	r3, [sp, #96]	; 0x60
  4019b8:	931b      	str	r3, [sp, #108]	; 0x6c
  4019ba:	9309      	str	r3, [sp, #36]	; 0x24
  4019bc:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4019c0:	46c8      	mov	r8, r9
  4019c2:	9316      	str	r3, [sp, #88]	; 0x58
  4019c4:	9317      	str	r3, [sp, #92]	; 0x5c
  4019c6:	f89a 3000 	ldrb.w	r3, [sl]
  4019ca:	4654      	mov	r4, sl
  4019cc:	b1e3      	cbz	r3, 401a08 <_svfprintf_r+0x90>
  4019ce:	2b25      	cmp	r3, #37	; 0x25
  4019d0:	d102      	bne.n	4019d8 <_svfprintf_r+0x60>
  4019d2:	e019      	b.n	401a08 <_svfprintf_r+0x90>
  4019d4:	2b25      	cmp	r3, #37	; 0x25
  4019d6:	d003      	beq.n	4019e0 <_svfprintf_r+0x68>
  4019d8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4019dc:	2b00      	cmp	r3, #0
  4019de:	d1f9      	bne.n	4019d4 <_svfprintf_r+0x5c>
  4019e0:	eba4 050a 	sub.w	r5, r4, sl
  4019e4:	b185      	cbz	r5, 401a08 <_svfprintf_r+0x90>
  4019e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4019e8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4019ea:	f8c8 a000 	str.w	sl, [r8]
  4019ee:	3301      	adds	r3, #1
  4019f0:	442a      	add	r2, r5
  4019f2:	2b07      	cmp	r3, #7
  4019f4:	f8c8 5004 	str.w	r5, [r8, #4]
  4019f8:	9227      	str	r2, [sp, #156]	; 0x9c
  4019fa:	9326      	str	r3, [sp, #152]	; 0x98
  4019fc:	dc7f      	bgt.n	401afe <_svfprintf_r+0x186>
  4019fe:	f108 0808 	add.w	r8, r8, #8
  401a02:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401a04:	442b      	add	r3, r5
  401a06:	9309      	str	r3, [sp, #36]	; 0x24
  401a08:	7823      	ldrb	r3, [r4, #0]
  401a0a:	2b00      	cmp	r3, #0
  401a0c:	d07f      	beq.n	401b0e <_svfprintf_r+0x196>
  401a0e:	2300      	movs	r3, #0
  401a10:	461a      	mov	r2, r3
  401a12:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401a16:	4619      	mov	r1, r3
  401a18:	930d      	str	r3, [sp, #52]	; 0x34
  401a1a:	469b      	mov	fp, r3
  401a1c:	f04f 30ff 	mov.w	r0, #4294967295
  401a20:	7863      	ldrb	r3, [r4, #1]
  401a22:	900a      	str	r0, [sp, #40]	; 0x28
  401a24:	f104 0a01 	add.w	sl, r4, #1
  401a28:	f10a 0a01 	add.w	sl, sl, #1
  401a2c:	f1a3 0020 	sub.w	r0, r3, #32
  401a30:	2858      	cmp	r0, #88	; 0x58
  401a32:	f200 83c1 	bhi.w	4021b8 <_svfprintf_r+0x840>
  401a36:	e8df f010 	tbh	[pc, r0, lsl #1]
  401a3a:	0238      	.short	0x0238
  401a3c:	03bf03bf 	.word	0x03bf03bf
  401a40:	03bf0240 	.word	0x03bf0240
  401a44:	03bf03bf 	.word	0x03bf03bf
  401a48:	03bf03bf 	.word	0x03bf03bf
  401a4c:	024503bf 	.word	0x024503bf
  401a50:	03bf0203 	.word	0x03bf0203
  401a54:	026b005d 	.word	0x026b005d
  401a58:	028603bf 	.word	0x028603bf
  401a5c:	039d039d 	.word	0x039d039d
  401a60:	039d039d 	.word	0x039d039d
  401a64:	039d039d 	.word	0x039d039d
  401a68:	039d039d 	.word	0x039d039d
  401a6c:	03bf039d 	.word	0x03bf039d
  401a70:	03bf03bf 	.word	0x03bf03bf
  401a74:	03bf03bf 	.word	0x03bf03bf
  401a78:	03bf03bf 	.word	0x03bf03bf
  401a7c:	03bf03bf 	.word	0x03bf03bf
  401a80:	033703bf 	.word	0x033703bf
  401a84:	03bf0357 	.word	0x03bf0357
  401a88:	03bf0357 	.word	0x03bf0357
  401a8c:	03bf03bf 	.word	0x03bf03bf
  401a90:	039803bf 	.word	0x039803bf
  401a94:	03bf03bf 	.word	0x03bf03bf
  401a98:	03bf03ad 	.word	0x03bf03ad
  401a9c:	03bf03bf 	.word	0x03bf03bf
  401aa0:	03bf03bf 	.word	0x03bf03bf
  401aa4:	03bf0259 	.word	0x03bf0259
  401aa8:	031e03bf 	.word	0x031e03bf
  401aac:	03bf03bf 	.word	0x03bf03bf
  401ab0:	03bf03bf 	.word	0x03bf03bf
  401ab4:	03bf03bf 	.word	0x03bf03bf
  401ab8:	03bf03bf 	.word	0x03bf03bf
  401abc:	03bf03bf 	.word	0x03bf03bf
  401ac0:	02db02c6 	.word	0x02db02c6
  401ac4:	03570357 	.word	0x03570357
  401ac8:	028b0357 	.word	0x028b0357
  401acc:	03bf02db 	.word	0x03bf02db
  401ad0:	029003bf 	.word	0x029003bf
  401ad4:	029d03bf 	.word	0x029d03bf
  401ad8:	02b401cc 	.word	0x02b401cc
  401adc:	03bf0208 	.word	0x03bf0208
  401ae0:	03bf01e1 	.word	0x03bf01e1
  401ae4:	03bf007e 	.word	0x03bf007e
  401ae8:	020d03bf 	.word	0x020d03bf
  401aec:	980d      	ldr	r0, [sp, #52]	; 0x34
  401aee:	930f      	str	r3, [sp, #60]	; 0x3c
  401af0:	4240      	negs	r0, r0
  401af2:	900d      	str	r0, [sp, #52]	; 0x34
  401af4:	f04b 0b04 	orr.w	fp, fp, #4
  401af8:	f89a 3000 	ldrb.w	r3, [sl]
  401afc:	e794      	b.n	401a28 <_svfprintf_r+0xb0>
  401afe:	aa25      	add	r2, sp, #148	; 0x94
  401b00:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401b02:	980c      	ldr	r0, [sp, #48]	; 0x30
  401b04:	f003 f88a 	bl	404c1c <__ssprint_r>
  401b08:	b940      	cbnz	r0, 401b1c <_svfprintf_r+0x1a4>
  401b0a:	46c8      	mov	r8, r9
  401b0c:	e779      	b.n	401a02 <_svfprintf_r+0x8a>
  401b0e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401b10:	b123      	cbz	r3, 401b1c <_svfprintf_r+0x1a4>
  401b12:	980c      	ldr	r0, [sp, #48]	; 0x30
  401b14:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401b16:	aa25      	add	r2, sp, #148	; 0x94
  401b18:	f003 f880 	bl	404c1c <__ssprint_r>
  401b1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401b1e:	899b      	ldrh	r3, [r3, #12]
  401b20:	f013 0f40 	tst.w	r3, #64	; 0x40
  401b24:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401b26:	bf18      	it	ne
  401b28:	f04f 33ff 	movne.w	r3, #4294967295
  401b2c:	9309      	str	r3, [sp, #36]	; 0x24
  401b2e:	9809      	ldr	r0, [sp, #36]	; 0x24
  401b30:	b043      	add	sp, #268	; 0x10c
  401b32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b36:	f01b 0f20 	tst.w	fp, #32
  401b3a:	9311      	str	r3, [sp, #68]	; 0x44
  401b3c:	f040 81dd 	bne.w	401efa <_svfprintf_r+0x582>
  401b40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401b42:	f01b 0f10 	tst.w	fp, #16
  401b46:	4613      	mov	r3, r2
  401b48:	f040 856e 	bne.w	402628 <_svfprintf_r+0xcb0>
  401b4c:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401b50:	f000 856a 	beq.w	402628 <_svfprintf_r+0xcb0>
  401b54:	8814      	ldrh	r4, [r2, #0]
  401b56:	3204      	adds	r2, #4
  401b58:	2500      	movs	r5, #0
  401b5a:	2301      	movs	r3, #1
  401b5c:	920f      	str	r2, [sp, #60]	; 0x3c
  401b5e:	2700      	movs	r7, #0
  401b60:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401b64:	990a      	ldr	r1, [sp, #40]	; 0x28
  401b66:	1c4a      	adds	r2, r1, #1
  401b68:	f000 8265 	beq.w	402036 <_svfprintf_r+0x6be>
  401b6c:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401b70:	9207      	str	r2, [sp, #28]
  401b72:	ea54 0205 	orrs.w	r2, r4, r5
  401b76:	f040 8264 	bne.w	402042 <_svfprintf_r+0x6ca>
  401b7a:	2900      	cmp	r1, #0
  401b7c:	f040 843c 	bne.w	4023f8 <_svfprintf_r+0xa80>
  401b80:	2b00      	cmp	r3, #0
  401b82:	f040 84d7 	bne.w	402534 <_svfprintf_r+0xbbc>
  401b86:	f01b 0301 	ands.w	r3, fp, #1
  401b8a:	930e      	str	r3, [sp, #56]	; 0x38
  401b8c:	f000 8604 	beq.w	402798 <_svfprintf_r+0xe20>
  401b90:	ae42      	add	r6, sp, #264	; 0x108
  401b92:	2330      	movs	r3, #48	; 0x30
  401b94:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401b98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401b9a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401b9c:	4293      	cmp	r3, r2
  401b9e:	bfb8      	it	lt
  401ba0:	4613      	movlt	r3, r2
  401ba2:	9308      	str	r3, [sp, #32]
  401ba4:	2300      	movs	r3, #0
  401ba6:	9312      	str	r3, [sp, #72]	; 0x48
  401ba8:	b117      	cbz	r7, 401bb0 <_svfprintf_r+0x238>
  401baa:	9b08      	ldr	r3, [sp, #32]
  401bac:	3301      	adds	r3, #1
  401bae:	9308      	str	r3, [sp, #32]
  401bb0:	9b07      	ldr	r3, [sp, #28]
  401bb2:	f013 0302 	ands.w	r3, r3, #2
  401bb6:	9310      	str	r3, [sp, #64]	; 0x40
  401bb8:	d002      	beq.n	401bc0 <_svfprintf_r+0x248>
  401bba:	9b08      	ldr	r3, [sp, #32]
  401bbc:	3302      	adds	r3, #2
  401bbe:	9308      	str	r3, [sp, #32]
  401bc0:	9b07      	ldr	r3, [sp, #28]
  401bc2:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401bc6:	f040 830e 	bne.w	4021e6 <_svfprintf_r+0x86e>
  401bca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401bcc:	9a08      	ldr	r2, [sp, #32]
  401bce:	eba3 0b02 	sub.w	fp, r3, r2
  401bd2:	f1bb 0f00 	cmp.w	fp, #0
  401bd6:	f340 8306 	ble.w	4021e6 <_svfprintf_r+0x86e>
  401bda:	f1bb 0f10 	cmp.w	fp, #16
  401bde:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401be0:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401be2:	dd29      	ble.n	401c38 <_svfprintf_r+0x2c0>
  401be4:	4643      	mov	r3, r8
  401be6:	4621      	mov	r1, r4
  401be8:	46a8      	mov	r8, r5
  401bea:	2710      	movs	r7, #16
  401bec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401bee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401bf0:	e006      	b.n	401c00 <_svfprintf_r+0x288>
  401bf2:	f1ab 0b10 	sub.w	fp, fp, #16
  401bf6:	f1bb 0f10 	cmp.w	fp, #16
  401bfa:	f103 0308 	add.w	r3, r3, #8
  401bfe:	dd18      	ble.n	401c32 <_svfprintf_r+0x2ba>
  401c00:	3201      	adds	r2, #1
  401c02:	48b7      	ldr	r0, [pc, #732]	; (401ee0 <_svfprintf_r+0x568>)
  401c04:	9226      	str	r2, [sp, #152]	; 0x98
  401c06:	3110      	adds	r1, #16
  401c08:	2a07      	cmp	r2, #7
  401c0a:	9127      	str	r1, [sp, #156]	; 0x9c
  401c0c:	e883 0081 	stmia.w	r3, {r0, r7}
  401c10:	ddef      	ble.n	401bf2 <_svfprintf_r+0x27a>
  401c12:	aa25      	add	r2, sp, #148	; 0x94
  401c14:	4629      	mov	r1, r5
  401c16:	4620      	mov	r0, r4
  401c18:	f003 f800 	bl	404c1c <__ssprint_r>
  401c1c:	2800      	cmp	r0, #0
  401c1e:	f47f af7d 	bne.w	401b1c <_svfprintf_r+0x1a4>
  401c22:	f1ab 0b10 	sub.w	fp, fp, #16
  401c26:	f1bb 0f10 	cmp.w	fp, #16
  401c2a:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401c2c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401c2e:	464b      	mov	r3, r9
  401c30:	dce6      	bgt.n	401c00 <_svfprintf_r+0x288>
  401c32:	4645      	mov	r5, r8
  401c34:	460c      	mov	r4, r1
  401c36:	4698      	mov	r8, r3
  401c38:	3201      	adds	r2, #1
  401c3a:	4ba9      	ldr	r3, [pc, #676]	; (401ee0 <_svfprintf_r+0x568>)
  401c3c:	9226      	str	r2, [sp, #152]	; 0x98
  401c3e:	445c      	add	r4, fp
  401c40:	2a07      	cmp	r2, #7
  401c42:	9427      	str	r4, [sp, #156]	; 0x9c
  401c44:	e888 0808 	stmia.w	r8, {r3, fp}
  401c48:	f300 8498 	bgt.w	40257c <_svfprintf_r+0xc04>
  401c4c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401c50:	f108 0808 	add.w	r8, r8, #8
  401c54:	b177      	cbz	r7, 401c74 <_svfprintf_r+0x2fc>
  401c56:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401c58:	3301      	adds	r3, #1
  401c5a:	3401      	adds	r4, #1
  401c5c:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  401c60:	2201      	movs	r2, #1
  401c62:	2b07      	cmp	r3, #7
  401c64:	9427      	str	r4, [sp, #156]	; 0x9c
  401c66:	9326      	str	r3, [sp, #152]	; 0x98
  401c68:	e888 0006 	stmia.w	r8, {r1, r2}
  401c6c:	f300 83db 	bgt.w	402426 <_svfprintf_r+0xaae>
  401c70:	f108 0808 	add.w	r8, r8, #8
  401c74:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401c76:	b16b      	cbz	r3, 401c94 <_svfprintf_r+0x31c>
  401c78:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401c7a:	3301      	adds	r3, #1
  401c7c:	3402      	adds	r4, #2
  401c7e:	a91e      	add	r1, sp, #120	; 0x78
  401c80:	2202      	movs	r2, #2
  401c82:	2b07      	cmp	r3, #7
  401c84:	9427      	str	r4, [sp, #156]	; 0x9c
  401c86:	9326      	str	r3, [sp, #152]	; 0x98
  401c88:	e888 0006 	stmia.w	r8, {r1, r2}
  401c8c:	f300 83d6 	bgt.w	40243c <_svfprintf_r+0xac4>
  401c90:	f108 0808 	add.w	r8, r8, #8
  401c94:	2d80      	cmp	r5, #128	; 0x80
  401c96:	f000 8315 	beq.w	4022c4 <_svfprintf_r+0x94c>
  401c9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401c9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401c9e:	1a9f      	subs	r7, r3, r2
  401ca0:	2f00      	cmp	r7, #0
  401ca2:	dd36      	ble.n	401d12 <_svfprintf_r+0x39a>
  401ca4:	2f10      	cmp	r7, #16
  401ca6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401ca8:	4d8e      	ldr	r5, [pc, #568]	; (401ee4 <_svfprintf_r+0x56c>)
  401caa:	dd27      	ble.n	401cfc <_svfprintf_r+0x384>
  401cac:	4642      	mov	r2, r8
  401cae:	4621      	mov	r1, r4
  401cb0:	46b0      	mov	r8, r6
  401cb2:	f04f 0b10 	mov.w	fp, #16
  401cb6:	462e      	mov	r6, r5
  401cb8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401cba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401cbc:	e004      	b.n	401cc8 <_svfprintf_r+0x350>
  401cbe:	3f10      	subs	r7, #16
  401cc0:	2f10      	cmp	r7, #16
  401cc2:	f102 0208 	add.w	r2, r2, #8
  401cc6:	dd15      	ble.n	401cf4 <_svfprintf_r+0x37c>
  401cc8:	3301      	adds	r3, #1
  401cca:	3110      	adds	r1, #16
  401ccc:	2b07      	cmp	r3, #7
  401cce:	9127      	str	r1, [sp, #156]	; 0x9c
  401cd0:	9326      	str	r3, [sp, #152]	; 0x98
  401cd2:	e882 0840 	stmia.w	r2, {r6, fp}
  401cd6:	ddf2      	ble.n	401cbe <_svfprintf_r+0x346>
  401cd8:	aa25      	add	r2, sp, #148	; 0x94
  401cda:	4629      	mov	r1, r5
  401cdc:	4620      	mov	r0, r4
  401cde:	f002 ff9d 	bl	404c1c <__ssprint_r>
  401ce2:	2800      	cmp	r0, #0
  401ce4:	f47f af1a 	bne.w	401b1c <_svfprintf_r+0x1a4>
  401ce8:	3f10      	subs	r7, #16
  401cea:	2f10      	cmp	r7, #16
  401cec:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401cee:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401cf0:	464a      	mov	r2, r9
  401cf2:	dce9      	bgt.n	401cc8 <_svfprintf_r+0x350>
  401cf4:	4635      	mov	r5, r6
  401cf6:	460c      	mov	r4, r1
  401cf8:	4646      	mov	r6, r8
  401cfa:	4690      	mov	r8, r2
  401cfc:	3301      	adds	r3, #1
  401cfe:	443c      	add	r4, r7
  401d00:	2b07      	cmp	r3, #7
  401d02:	9427      	str	r4, [sp, #156]	; 0x9c
  401d04:	9326      	str	r3, [sp, #152]	; 0x98
  401d06:	e888 00a0 	stmia.w	r8, {r5, r7}
  401d0a:	f300 8381 	bgt.w	402410 <_svfprintf_r+0xa98>
  401d0e:	f108 0808 	add.w	r8, r8, #8
  401d12:	9b07      	ldr	r3, [sp, #28]
  401d14:	05df      	lsls	r7, r3, #23
  401d16:	f100 8268 	bmi.w	4021ea <_svfprintf_r+0x872>
  401d1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d1c:	990e      	ldr	r1, [sp, #56]	; 0x38
  401d1e:	f8c8 6000 	str.w	r6, [r8]
  401d22:	3301      	adds	r3, #1
  401d24:	440c      	add	r4, r1
  401d26:	2b07      	cmp	r3, #7
  401d28:	9427      	str	r4, [sp, #156]	; 0x9c
  401d2a:	f8c8 1004 	str.w	r1, [r8, #4]
  401d2e:	9326      	str	r3, [sp, #152]	; 0x98
  401d30:	f300 834d 	bgt.w	4023ce <_svfprintf_r+0xa56>
  401d34:	f108 0808 	add.w	r8, r8, #8
  401d38:	9b07      	ldr	r3, [sp, #28]
  401d3a:	075b      	lsls	r3, r3, #29
  401d3c:	d53a      	bpl.n	401db4 <_svfprintf_r+0x43c>
  401d3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401d40:	9a08      	ldr	r2, [sp, #32]
  401d42:	1a9d      	subs	r5, r3, r2
  401d44:	2d00      	cmp	r5, #0
  401d46:	dd35      	ble.n	401db4 <_svfprintf_r+0x43c>
  401d48:	2d10      	cmp	r5, #16
  401d4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d4c:	dd20      	ble.n	401d90 <_svfprintf_r+0x418>
  401d4e:	2610      	movs	r6, #16
  401d50:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  401d52:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  401d56:	e004      	b.n	401d62 <_svfprintf_r+0x3ea>
  401d58:	3d10      	subs	r5, #16
  401d5a:	2d10      	cmp	r5, #16
  401d5c:	f108 0808 	add.w	r8, r8, #8
  401d60:	dd16      	ble.n	401d90 <_svfprintf_r+0x418>
  401d62:	3301      	adds	r3, #1
  401d64:	4a5e      	ldr	r2, [pc, #376]	; (401ee0 <_svfprintf_r+0x568>)
  401d66:	9326      	str	r3, [sp, #152]	; 0x98
  401d68:	3410      	adds	r4, #16
  401d6a:	2b07      	cmp	r3, #7
  401d6c:	9427      	str	r4, [sp, #156]	; 0x9c
  401d6e:	e888 0044 	stmia.w	r8, {r2, r6}
  401d72:	ddf1      	ble.n	401d58 <_svfprintf_r+0x3e0>
  401d74:	aa25      	add	r2, sp, #148	; 0x94
  401d76:	4659      	mov	r1, fp
  401d78:	4638      	mov	r0, r7
  401d7a:	f002 ff4f 	bl	404c1c <__ssprint_r>
  401d7e:	2800      	cmp	r0, #0
  401d80:	f47f aecc 	bne.w	401b1c <_svfprintf_r+0x1a4>
  401d84:	3d10      	subs	r5, #16
  401d86:	2d10      	cmp	r5, #16
  401d88:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401d8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401d8c:	46c8      	mov	r8, r9
  401d8e:	dce8      	bgt.n	401d62 <_svfprintf_r+0x3ea>
  401d90:	3301      	adds	r3, #1
  401d92:	4a53      	ldr	r2, [pc, #332]	; (401ee0 <_svfprintf_r+0x568>)
  401d94:	9326      	str	r3, [sp, #152]	; 0x98
  401d96:	442c      	add	r4, r5
  401d98:	2b07      	cmp	r3, #7
  401d9a:	9427      	str	r4, [sp, #156]	; 0x9c
  401d9c:	e888 0024 	stmia.w	r8, {r2, r5}
  401da0:	dd08      	ble.n	401db4 <_svfprintf_r+0x43c>
  401da2:	aa25      	add	r2, sp, #148	; 0x94
  401da4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401da6:	980c      	ldr	r0, [sp, #48]	; 0x30
  401da8:	f002 ff38 	bl	404c1c <__ssprint_r>
  401dac:	2800      	cmp	r0, #0
  401dae:	f47f aeb5 	bne.w	401b1c <_svfprintf_r+0x1a4>
  401db2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401db4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401db6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  401db8:	9908      	ldr	r1, [sp, #32]
  401dba:	428a      	cmp	r2, r1
  401dbc:	bfac      	ite	ge
  401dbe:	189b      	addge	r3, r3, r2
  401dc0:	185b      	addlt	r3, r3, r1
  401dc2:	9309      	str	r3, [sp, #36]	; 0x24
  401dc4:	2c00      	cmp	r4, #0
  401dc6:	f040 830d 	bne.w	4023e4 <_svfprintf_r+0xa6c>
  401dca:	2300      	movs	r3, #0
  401dcc:	9326      	str	r3, [sp, #152]	; 0x98
  401dce:	46c8      	mov	r8, r9
  401dd0:	e5f9      	b.n	4019c6 <_svfprintf_r+0x4e>
  401dd2:	9311      	str	r3, [sp, #68]	; 0x44
  401dd4:	f01b 0320 	ands.w	r3, fp, #32
  401dd8:	f040 81e3 	bne.w	4021a2 <_svfprintf_r+0x82a>
  401ddc:	f01b 0210 	ands.w	r2, fp, #16
  401de0:	f040 842e 	bne.w	402640 <_svfprintf_r+0xcc8>
  401de4:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  401de8:	f000 842a 	beq.w	402640 <_svfprintf_r+0xcc8>
  401dec:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401dee:	4613      	mov	r3, r2
  401df0:	460a      	mov	r2, r1
  401df2:	3204      	adds	r2, #4
  401df4:	880c      	ldrh	r4, [r1, #0]
  401df6:	920f      	str	r2, [sp, #60]	; 0x3c
  401df8:	2500      	movs	r5, #0
  401dfa:	e6b0      	b.n	401b5e <_svfprintf_r+0x1e6>
  401dfc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401dfe:	9311      	str	r3, [sp, #68]	; 0x44
  401e00:	6816      	ldr	r6, [r2, #0]
  401e02:	2400      	movs	r4, #0
  401e04:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  401e08:	1d15      	adds	r5, r2, #4
  401e0a:	2e00      	cmp	r6, #0
  401e0c:	f000 86a7 	beq.w	402b5e <_svfprintf_r+0x11e6>
  401e10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  401e12:	1c53      	adds	r3, r2, #1
  401e14:	f000 8609 	beq.w	402a2a <_svfprintf_r+0x10b2>
  401e18:	4621      	mov	r1, r4
  401e1a:	4630      	mov	r0, r6
  401e1c:	f002 fa88 	bl	404330 <memchr>
  401e20:	2800      	cmp	r0, #0
  401e22:	f000 86e1 	beq.w	402be8 <_svfprintf_r+0x1270>
  401e26:	1b83      	subs	r3, r0, r6
  401e28:	930e      	str	r3, [sp, #56]	; 0x38
  401e2a:	940a      	str	r4, [sp, #40]	; 0x28
  401e2c:	950f      	str	r5, [sp, #60]	; 0x3c
  401e2e:	f8cd b01c 	str.w	fp, [sp, #28]
  401e32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  401e36:	9308      	str	r3, [sp, #32]
  401e38:	9412      	str	r4, [sp, #72]	; 0x48
  401e3a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401e3e:	e6b3      	b.n	401ba8 <_svfprintf_r+0x230>
  401e40:	f89a 3000 	ldrb.w	r3, [sl]
  401e44:	2201      	movs	r2, #1
  401e46:	212b      	movs	r1, #43	; 0x2b
  401e48:	e5ee      	b.n	401a28 <_svfprintf_r+0xb0>
  401e4a:	f04b 0b20 	orr.w	fp, fp, #32
  401e4e:	f89a 3000 	ldrb.w	r3, [sl]
  401e52:	e5e9      	b.n	401a28 <_svfprintf_r+0xb0>
  401e54:	9311      	str	r3, [sp, #68]	; 0x44
  401e56:	2a00      	cmp	r2, #0
  401e58:	f040 8795 	bne.w	402d86 <_svfprintf_r+0x140e>
  401e5c:	4b22      	ldr	r3, [pc, #136]	; (401ee8 <_svfprintf_r+0x570>)
  401e5e:	9318      	str	r3, [sp, #96]	; 0x60
  401e60:	f01b 0f20 	tst.w	fp, #32
  401e64:	f040 8111 	bne.w	40208a <_svfprintf_r+0x712>
  401e68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401e6a:	f01b 0f10 	tst.w	fp, #16
  401e6e:	4613      	mov	r3, r2
  401e70:	f040 83e1 	bne.w	402636 <_svfprintf_r+0xcbe>
  401e74:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401e78:	f000 83dd 	beq.w	402636 <_svfprintf_r+0xcbe>
  401e7c:	3304      	adds	r3, #4
  401e7e:	8814      	ldrh	r4, [r2, #0]
  401e80:	930f      	str	r3, [sp, #60]	; 0x3c
  401e82:	2500      	movs	r5, #0
  401e84:	f01b 0f01 	tst.w	fp, #1
  401e88:	f000 810c 	beq.w	4020a4 <_svfprintf_r+0x72c>
  401e8c:	ea54 0305 	orrs.w	r3, r4, r5
  401e90:	f000 8108 	beq.w	4020a4 <_svfprintf_r+0x72c>
  401e94:	2330      	movs	r3, #48	; 0x30
  401e96:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  401e9a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  401e9e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  401ea2:	f04b 0b02 	orr.w	fp, fp, #2
  401ea6:	2302      	movs	r3, #2
  401ea8:	e659      	b.n	401b5e <_svfprintf_r+0x1e6>
  401eaa:	f89a 3000 	ldrb.w	r3, [sl]
  401eae:	2900      	cmp	r1, #0
  401eb0:	f47f adba 	bne.w	401a28 <_svfprintf_r+0xb0>
  401eb4:	2201      	movs	r2, #1
  401eb6:	2120      	movs	r1, #32
  401eb8:	e5b6      	b.n	401a28 <_svfprintf_r+0xb0>
  401eba:	f04b 0b01 	orr.w	fp, fp, #1
  401ebe:	f89a 3000 	ldrb.w	r3, [sl]
  401ec2:	e5b1      	b.n	401a28 <_svfprintf_r+0xb0>
  401ec4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  401ec6:	6823      	ldr	r3, [r4, #0]
  401ec8:	930d      	str	r3, [sp, #52]	; 0x34
  401eca:	4618      	mov	r0, r3
  401ecc:	2800      	cmp	r0, #0
  401ece:	4623      	mov	r3, r4
  401ed0:	f103 0304 	add.w	r3, r3, #4
  401ed4:	f6ff ae0a 	blt.w	401aec <_svfprintf_r+0x174>
  401ed8:	930f      	str	r3, [sp, #60]	; 0x3c
  401eda:	f89a 3000 	ldrb.w	r3, [sl]
  401ede:	e5a3      	b.n	401a28 <_svfprintf_r+0xb0>
  401ee0:	00406bcc 	.word	0x00406bcc
  401ee4:	00406bdc 	.word	0x00406bdc
  401ee8:	00406bac 	.word	0x00406bac
  401eec:	f04b 0b10 	orr.w	fp, fp, #16
  401ef0:	f01b 0f20 	tst.w	fp, #32
  401ef4:	9311      	str	r3, [sp, #68]	; 0x44
  401ef6:	f43f ae23 	beq.w	401b40 <_svfprintf_r+0x1c8>
  401efa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  401efc:	3507      	adds	r5, #7
  401efe:	f025 0307 	bic.w	r3, r5, #7
  401f02:	f103 0208 	add.w	r2, r3, #8
  401f06:	e9d3 4500 	ldrd	r4, r5, [r3]
  401f0a:	920f      	str	r2, [sp, #60]	; 0x3c
  401f0c:	2301      	movs	r3, #1
  401f0e:	e626      	b.n	401b5e <_svfprintf_r+0x1e6>
  401f10:	f89a 3000 	ldrb.w	r3, [sl]
  401f14:	2b2a      	cmp	r3, #42	; 0x2a
  401f16:	f10a 0401 	add.w	r4, sl, #1
  401f1a:	f000 8727 	beq.w	402d6c <_svfprintf_r+0x13f4>
  401f1e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401f22:	2809      	cmp	r0, #9
  401f24:	46a2      	mov	sl, r4
  401f26:	f200 86ad 	bhi.w	402c84 <_svfprintf_r+0x130c>
  401f2a:	2300      	movs	r3, #0
  401f2c:	461c      	mov	r4, r3
  401f2e:	f81a 3b01 	ldrb.w	r3, [sl], #1
  401f32:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  401f36:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  401f3a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  401f3e:	2809      	cmp	r0, #9
  401f40:	d9f5      	bls.n	401f2e <_svfprintf_r+0x5b6>
  401f42:	940a      	str	r4, [sp, #40]	; 0x28
  401f44:	e572      	b.n	401a2c <_svfprintf_r+0xb4>
  401f46:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  401f4a:	f89a 3000 	ldrb.w	r3, [sl]
  401f4e:	e56b      	b.n	401a28 <_svfprintf_r+0xb0>
  401f50:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  401f54:	f89a 3000 	ldrb.w	r3, [sl]
  401f58:	e566      	b.n	401a28 <_svfprintf_r+0xb0>
  401f5a:	f89a 3000 	ldrb.w	r3, [sl]
  401f5e:	2b6c      	cmp	r3, #108	; 0x6c
  401f60:	bf03      	ittte	eq
  401f62:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  401f66:	f04b 0b20 	orreq.w	fp, fp, #32
  401f6a:	f10a 0a01 	addeq.w	sl, sl, #1
  401f6e:	f04b 0b10 	orrne.w	fp, fp, #16
  401f72:	e559      	b.n	401a28 <_svfprintf_r+0xb0>
  401f74:	2a00      	cmp	r2, #0
  401f76:	f040 8711 	bne.w	402d9c <_svfprintf_r+0x1424>
  401f7a:	f01b 0f20 	tst.w	fp, #32
  401f7e:	f040 84f9 	bne.w	402974 <_svfprintf_r+0xffc>
  401f82:	f01b 0f10 	tst.w	fp, #16
  401f86:	f040 84ac 	bne.w	4028e2 <_svfprintf_r+0xf6a>
  401f8a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401f8e:	f000 84a8 	beq.w	4028e2 <_svfprintf_r+0xf6a>
  401f92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f94:	6813      	ldr	r3, [r2, #0]
  401f96:	3204      	adds	r2, #4
  401f98:	920f      	str	r2, [sp, #60]	; 0x3c
  401f9a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  401f9e:	801a      	strh	r2, [r3, #0]
  401fa0:	e511      	b.n	4019c6 <_svfprintf_r+0x4e>
  401fa2:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401fa4:	4bb3      	ldr	r3, [pc, #716]	; (402274 <_svfprintf_r+0x8fc>)
  401fa6:	680c      	ldr	r4, [r1, #0]
  401fa8:	9318      	str	r3, [sp, #96]	; 0x60
  401faa:	2230      	movs	r2, #48	; 0x30
  401fac:	2378      	movs	r3, #120	; 0x78
  401fae:	3104      	adds	r1, #4
  401fb0:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  401fb4:	9311      	str	r3, [sp, #68]	; 0x44
  401fb6:	f04b 0b02 	orr.w	fp, fp, #2
  401fba:	910f      	str	r1, [sp, #60]	; 0x3c
  401fbc:	2500      	movs	r5, #0
  401fbe:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  401fc2:	2302      	movs	r3, #2
  401fc4:	e5cb      	b.n	401b5e <_svfprintf_r+0x1e6>
  401fc6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401fc8:	9311      	str	r3, [sp, #68]	; 0x44
  401fca:	680a      	ldr	r2, [r1, #0]
  401fcc:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  401fd0:	2300      	movs	r3, #0
  401fd2:	460a      	mov	r2, r1
  401fd4:	461f      	mov	r7, r3
  401fd6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401fda:	3204      	adds	r2, #4
  401fdc:	2301      	movs	r3, #1
  401fde:	9308      	str	r3, [sp, #32]
  401fe0:	f8cd b01c 	str.w	fp, [sp, #28]
  401fe4:	970a      	str	r7, [sp, #40]	; 0x28
  401fe6:	9712      	str	r7, [sp, #72]	; 0x48
  401fe8:	920f      	str	r2, [sp, #60]	; 0x3c
  401fea:	930e      	str	r3, [sp, #56]	; 0x38
  401fec:	ae28      	add	r6, sp, #160	; 0xa0
  401fee:	e5df      	b.n	401bb0 <_svfprintf_r+0x238>
  401ff0:	9311      	str	r3, [sp, #68]	; 0x44
  401ff2:	2a00      	cmp	r2, #0
  401ff4:	f040 86ea 	bne.w	402dcc <_svfprintf_r+0x1454>
  401ff8:	f01b 0f20 	tst.w	fp, #32
  401ffc:	d15d      	bne.n	4020ba <_svfprintf_r+0x742>
  401ffe:	f01b 0f10 	tst.w	fp, #16
  402002:	f040 8308 	bne.w	402616 <_svfprintf_r+0xc9e>
  402006:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40200a:	f000 8304 	beq.w	402616 <_svfprintf_r+0xc9e>
  40200e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402010:	f9b1 4000 	ldrsh.w	r4, [r1]
  402014:	3104      	adds	r1, #4
  402016:	17e5      	asrs	r5, r4, #31
  402018:	4622      	mov	r2, r4
  40201a:	462b      	mov	r3, r5
  40201c:	910f      	str	r1, [sp, #60]	; 0x3c
  40201e:	2a00      	cmp	r2, #0
  402020:	f173 0300 	sbcs.w	r3, r3, #0
  402024:	db58      	blt.n	4020d8 <_svfprintf_r+0x760>
  402026:	990a      	ldr	r1, [sp, #40]	; 0x28
  402028:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40202c:	1c4a      	adds	r2, r1, #1
  40202e:	f04f 0301 	mov.w	r3, #1
  402032:	f47f ad9b 	bne.w	401b6c <_svfprintf_r+0x1f4>
  402036:	ea54 0205 	orrs.w	r2, r4, r5
  40203a:	f000 81df 	beq.w	4023fc <_svfprintf_r+0xa84>
  40203e:	f8cd b01c 	str.w	fp, [sp, #28]
  402042:	2b01      	cmp	r3, #1
  402044:	f000 827b 	beq.w	40253e <_svfprintf_r+0xbc6>
  402048:	2b02      	cmp	r3, #2
  40204a:	f040 8206 	bne.w	40245a <_svfprintf_r+0xae2>
  40204e:	9818      	ldr	r0, [sp, #96]	; 0x60
  402050:	464e      	mov	r6, r9
  402052:	0923      	lsrs	r3, r4, #4
  402054:	f004 010f 	and.w	r1, r4, #15
  402058:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  40205c:	092a      	lsrs	r2, r5, #4
  40205e:	461c      	mov	r4, r3
  402060:	4615      	mov	r5, r2
  402062:	5c43      	ldrb	r3, [r0, r1]
  402064:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402068:	ea54 0305 	orrs.w	r3, r4, r5
  40206c:	d1f1      	bne.n	402052 <_svfprintf_r+0x6da>
  40206e:	eba9 0306 	sub.w	r3, r9, r6
  402072:	930e      	str	r3, [sp, #56]	; 0x38
  402074:	e590      	b.n	401b98 <_svfprintf_r+0x220>
  402076:	9311      	str	r3, [sp, #68]	; 0x44
  402078:	2a00      	cmp	r2, #0
  40207a:	f040 86a3 	bne.w	402dc4 <_svfprintf_r+0x144c>
  40207e:	4b7e      	ldr	r3, [pc, #504]	; (402278 <_svfprintf_r+0x900>)
  402080:	9318      	str	r3, [sp, #96]	; 0x60
  402082:	f01b 0f20 	tst.w	fp, #32
  402086:	f43f aeef 	beq.w	401e68 <_svfprintf_r+0x4f0>
  40208a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40208c:	3507      	adds	r5, #7
  40208e:	f025 0307 	bic.w	r3, r5, #7
  402092:	f103 0208 	add.w	r2, r3, #8
  402096:	f01b 0f01 	tst.w	fp, #1
  40209a:	920f      	str	r2, [sp, #60]	; 0x3c
  40209c:	e9d3 4500 	ldrd	r4, r5, [r3]
  4020a0:	f47f aef4 	bne.w	401e8c <_svfprintf_r+0x514>
  4020a4:	2302      	movs	r3, #2
  4020a6:	e55a      	b.n	401b5e <_svfprintf_r+0x1e6>
  4020a8:	9311      	str	r3, [sp, #68]	; 0x44
  4020aa:	2a00      	cmp	r2, #0
  4020ac:	f040 8686 	bne.w	402dbc <_svfprintf_r+0x1444>
  4020b0:	f04b 0b10 	orr.w	fp, fp, #16
  4020b4:	f01b 0f20 	tst.w	fp, #32
  4020b8:	d0a1      	beq.n	401ffe <_svfprintf_r+0x686>
  4020ba:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4020bc:	3507      	adds	r5, #7
  4020be:	f025 0507 	bic.w	r5, r5, #7
  4020c2:	e9d5 2300 	ldrd	r2, r3, [r5]
  4020c6:	2a00      	cmp	r2, #0
  4020c8:	f105 0108 	add.w	r1, r5, #8
  4020cc:	461d      	mov	r5, r3
  4020ce:	f173 0300 	sbcs.w	r3, r3, #0
  4020d2:	910f      	str	r1, [sp, #60]	; 0x3c
  4020d4:	4614      	mov	r4, r2
  4020d6:	daa6      	bge.n	402026 <_svfprintf_r+0x6ae>
  4020d8:	272d      	movs	r7, #45	; 0x2d
  4020da:	4264      	negs	r4, r4
  4020dc:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4020e0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4020e4:	2301      	movs	r3, #1
  4020e6:	e53d      	b.n	401b64 <_svfprintf_r+0x1ec>
  4020e8:	9311      	str	r3, [sp, #68]	; 0x44
  4020ea:	2a00      	cmp	r2, #0
  4020ec:	f040 8662 	bne.w	402db4 <_svfprintf_r+0x143c>
  4020f0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4020f2:	3507      	adds	r5, #7
  4020f4:	f025 0307 	bic.w	r3, r5, #7
  4020f8:	f103 0208 	add.w	r2, r3, #8
  4020fc:	920f      	str	r2, [sp, #60]	; 0x3c
  4020fe:	681a      	ldr	r2, [r3, #0]
  402100:	9215      	str	r2, [sp, #84]	; 0x54
  402102:	685b      	ldr	r3, [r3, #4]
  402104:	9314      	str	r3, [sp, #80]	; 0x50
  402106:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402108:	9d15      	ldr	r5, [sp, #84]	; 0x54
  40210a:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40210e:	4628      	mov	r0, r5
  402110:	4621      	mov	r1, r4
  402112:	f04f 32ff 	mov.w	r2, #4294967295
  402116:	4b59      	ldr	r3, [pc, #356]	; (40227c <_svfprintf_r+0x904>)
  402118:	f003 fe46 	bl	405da8 <__aeabi_dcmpun>
  40211c:	2800      	cmp	r0, #0
  40211e:	f040 834a 	bne.w	4027b6 <_svfprintf_r+0xe3e>
  402122:	4628      	mov	r0, r5
  402124:	4621      	mov	r1, r4
  402126:	f04f 32ff 	mov.w	r2, #4294967295
  40212a:	4b54      	ldr	r3, [pc, #336]	; (40227c <_svfprintf_r+0x904>)
  40212c:	f003 fe1e 	bl	405d6c <__aeabi_dcmple>
  402130:	2800      	cmp	r0, #0
  402132:	f040 8340 	bne.w	4027b6 <_svfprintf_r+0xe3e>
  402136:	a815      	add	r0, sp, #84	; 0x54
  402138:	c80d      	ldmia	r0, {r0, r2, r3}
  40213a:	9914      	ldr	r1, [sp, #80]	; 0x50
  40213c:	f003 fe0c 	bl	405d58 <__aeabi_dcmplt>
  402140:	2800      	cmp	r0, #0
  402142:	f040 8530 	bne.w	402ba6 <_svfprintf_r+0x122e>
  402146:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40214a:	4e4d      	ldr	r6, [pc, #308]	; (402280 <_svfprintf_r+0x908>)
  40214c:	4b4d      	ldr	r3, [pc, #308]	; (402284 <_svfprintf_r+0x90c>)
  40214e:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402152:	9007      	str	r0, [sp, #28]
  402154:	9811      	ldr	r0, [sp, #68]	; 0x44
  402156:	2203      	movs	r2, #3
  402158:	2100      	movs	r1, #0
  40215a:	9208      	str	r2, [sp, #32]
  40215c:	910a      	str	r1, [sp, #40]	; 0x28
  40215e:	2847      	cmp	r0, #71	; 0x47
  402160:	bfd8      	it	le
  402162:	461e      	movle	r6, r3
  402164:	920e      	str	r2, [sp, #56]	; 0x38
  402166:	9112      	str	r1, [sp, #72]	; 0x48
  402168:	e51e      	b.n	401ba8 <_svfprintf_r+0x230>
  40216a:	f04b 0b08 	orr.w	fp, fp, #8
  40216e:	f89a 3000 	ldrb.w	r3, [sl]
  402172:	e459      	b.n	401a28 <_svfprintf_r+0xb0>
  402174:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402178:	2300      	movs	r3, #0
  40217a:	461c      	mov	r4, r3
  40217c:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402180:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402184:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402188:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40218c:	2809      	cmp	r0, #9
  40218e:	d9f5      	bls.n	40217c <_svfprintf_r+0x804>
  402190:	940d      	str	r4, [sp, #52]	; 0x34
  402192:	e44b      	b.n	401a2c <_svfprintf_r+0xb4>
  402194:	f04b 0b10 	orr.w	fp, fp, #16
  402198:	9311      	str	r3, [sp, #68]	; 0x44
  40219a:	f01b 0320 	ands.w	r3, fp, #32
  40219e:	f43f ae1d 	beq.w	401ddc <_svfprintf_r+0x464>
  4021a2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4021a4:	3507      	adds	r5, #7
  4021a6:	f025 0307 	bic.w	r3, r5, #7
  4021aa:	f103 0208 	add.w	r2, r3, #8
  4021ae:	e9d3 4500 	ldrd	r4, r5, [r3]
  4021b2:	920f      	str	r2, [sp, #60]	; 0x3c
  4021b4:	2300      	movs	r3, #0
  4021b6:	e4d2      	b.n	401b5e <_svfprintf_r+0x1e6>
  4021b8:	9311      	str	r3, [sp, #68]	; 0x44
  4021ba:	2a00      	cmp	r2, #0
  4021bc:	f040 85e7 	bne.w	402d8e <_svfprintf_r+0x1416>
  4021c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
  4021c2:	2a00      	cmp	r2, #0
  4021c4:	f43f aca3 	beq.w	401b0e <_svfprintf_r+0x196>
  4021c8:	2300      	movs	r3, #0
  4021ca:	2101      	movs	r1, #1
  4021cc:	461f      	mov	r7, r3
  4021ce:	9108      	str	r1, [sp, #32]
  4021d0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4021d4:	f8cd b01c 	str.w	fp, [sp, #28]
  4021d8:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4021dc:	930a      	str	r3, [sp, #40]	; 0x28
  4021de:	9312      	str	r3, [sp, #72]	; 0x48
  4021e0:	910e      	str	r1, [sp, #56]	; 0x38
  4021e2:	ae28      	add	r6, sp, #160	; 0xa0
  4021e4:	e4e4      	b.n	401bb0 <_svfprintf_r+0x238>
  4021e6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4021e8:	e534      	b.n	401c54 <_svfprintf_r+0x2dc>
  4021ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4021ec:	2b65      	cmp	r3, #101	; 0x65
  4021ee:	f340 80a7 	ble.w	402340 <_svfprintf_r+0x9c8>
  4021f2:	a815      	add	r0, sp, #84	; 0x54
  4021f4:	c80d      	ldmia	r0, {r0, r2, r3}
  4021f6:	9914      	ldr	r1, [sp, #80]	; 0x50
  4021f8:	f003 fda4 	bl	405d44 <__aeabi_dcmpeq>
  4021fc:	2800      	cmp	r0, #0
  4021fe:	f000 8150 	beq.w	4024a2 <_svfprintf_r+0xb2a>
  402202:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402204:	4a20      	ldr	r2, [pc, #128]	; (402288 <_svfprintf_r+0x910>)
  402206:	f8c8 2000 	str.w	r2, [r8]
  40220a:	3301      	adds	r3, #1
  40220c:	3401      	adds	r4, #1
  40220e:	2201      	movs	r2, #1
  402210:	2b07      	cmp	r3, #7
  402212:	9427      	str	r4, [sp, #156]	; 0x9c
  402214:	9326      	str	r3, [sp, #152]	; 0x98
  402216:	f8c8 2004 	str.w	r2, [r8, #4]
  40221a:	f300 836a 	bgt.w	4028f2 <_svfprintf_r+0xf7a>
  40221e:	f108 0808 	add.w	r8, r8, #8
  402222:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402224:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402226:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402228:	4293      	cmp	r3, r2
  40222a:	db03      	blt.n	402234 <_svfprintf_r+0x8bc>
  40222c:	9b07      	ldr	r3, [sp, #28]
  40222e:	07dd      	lsls	r5, r3, #31
  402230:	f57f ad82 	bpl.w	401d38 <_svfprintf_r+0x3c0>
  402234:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402236:	9919      	ldr	r1, [sp, #100]	; 0x64
  402238:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40223a:	f8c8 2000 	str.w	r2, [r8]
  40223e:	3301      	adds	r3, #1
  402240:	440c      	add	r4, r1
  402242:	2b07      	cmp	r3, #7
  402244:	f8c8 1004 	str.w	r1, [r8, #4]
  402248:	9427      	str	r4, [sp, #156]	; 0x9c
  40224a:	9326      	str	r3, [sp, #152]	; 0x98
  40224c:	f300 839e 	bgt.w	40298c <_svfprintf_r+0x1014>
  402250:	f108 0808 	add.w	r8, r8, #8
  402254:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402256:	1e5e      	subs	r6, r3, #1
  402258:	2e00      	cmp	r6, #0
  40225a:	f77f ad6d 	ble.w	401d38 <_svfprintf_r+0x3c0>
  40225e:	2e10      	cmp	r6, #16
  402260:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402262:	4d0a      	ldr	r5, [pc, #40]	; (40228c <_svfprintf_r+0x914>)
  402264:	f340 81f5 	ble.w	402652 <_svfprintf_r+0xcda>
  402268:	4622      	mov	r2, r4
  40226a:	2710      	movs	r7, #16
  40226c:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402270:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402272:	e013      	b.n	40229c <_svfprintf_r+0x924>
  402274:	00406bac 	.word	0x00406bac
  402278:	00406b98 	.word	0x00406b98
  40227c:	7fefffff 	.word	0x7fefffff
  402280:	00406b8c 	.word	0x00406b8c
  402284:	00406b88 	.word	0x00406b88
  402288:	00406bc8 	.word	0x00406bc8
  40228c:	00406bdc 	.word	0x00406bdc
  402290:	f108 0808 	add.w	r8, r8, #8
  402294:	3e10      	subs	r6, #16
  402296:	2e10      	cmp	r6, #16
  402298:	f340 81da 	ble.w	402650 <_svfprintf_r+0xcd8>
  40229c:	3301      	adds	r3, #1
  40229e:	3210      	adds	r2, #16
  4022a0:	2b07      	cmp	r3, #7
  4022a2:	9227      	str	r2, [sp, #156]	; 0x9c
  4022a4:	9326      	str	r3, [sp, #152]	; 0x98
  4022a6:	e888 00a0 	stmia.w	r8, {r5, r7}
  4022aa:	ddf1      	ble.n	402290 <_svfprintf_r+0x918>
  4022ac:	aa25      	add	r2, sp, #148	; 0x94
  4022ae:	4621      	mov	r1, r4
  4022b0:	4658      	mov	r0, fp
  4022b2:	f002 fcb3 	bl	404c1c <__ssprint_r>
  4022b6:	2800      	cmp	r0, #0
  4022b8:	f47f ac30 	bne.w	401b1c <_svfprintf_r+0x1a4>
  4022bc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4022be:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022c0:	46c8      	mov	r8, r9
  4022c2:	e7e7      	b.n	402294 <_svfprintf_r+0x91c>
  4022c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4022c6:	9a08      	ldr	r2, [sp, #32]
  4022c8:	1a9f      	subs	r7, r3, r2
  4022ca:	2f00      	cmp	r7, #0
  4022cc:	f77f ace5 	ble.w	401c9a <_svfprintf_r+0x322>
  4022d0:	2f10      	cmp	r7, #16
  4022d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022d4:	4db6      	ldr	r5, [pc, #728]	; (4025b0 <_svfprintf_r+0xc38>)
  4022d6:	dd27      	ble.n	402328 <_svfprintf_r+0x9b0>
  4022d8:	4642      	mov	r2, r8
  4022da:	4621      	mov	r1, r4
  4022dc:	46b0      	mov	r8, r6
  4022de:	f04f 0b10 	mov.w	fp, #16
  4022e2:	462e      	mov	r6, r5
  4022e4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4022e6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4022e8:	e004      	b.n	4022f4 <_svfprintf_r+0x97c>
  4022ea:	3f10      	subs	r7, #16
  4022ec:	2f10      	cmp	r7, #16
  4022ee:	f102 0208 	add.w	r2, r2, #8
  4022f2:	dd15      	ble.n	402320 <_svfprintf_r+0x9a8>
  4022f4:	3301      	adds	r3, #1
  4022f6:	3110      	adds	r1, #16
  4022f8:	2b07      	cmp	r3, #7
  4022fa:	9127      	str	r1, [sp, #156]	; 0x9c
  4022fc:	9326      	str	r3, [sp, #152]	; 0x98
  4022fe:	e882 0840 	stmia.w	r2, {r6, fp}
  402302:	ddf2      	ble.n	4022ea <_svfprintf_r+0x972>
  402304:	aa25      	add	r2, sp, #148	; 0x94
  402306:	4629      	mov	r1, r5
  402308:	4620      	mov	r0, r4
  40230a:	f002 fc87 	bl	404c1c <__ssprint_r>
  40230e:	2800      	cmp	r0, #0
  402310:	f47f ac04 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402314:	3f10      	subs	r7, #16
  402316:	2f10      	cmp	r7, #16
  402318:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40231a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40231c:	464a      	mov	r2, r9
  40231e:	dce9      	bgt.n	4022f4 <_svfprintf_r+0x97c>
  402320:	4635      	mov	r5, r6
  402322:	460c      	mov	r4, r1
  402324:	4646      	mov	r6, r8
  402326:	4690      	mov	r8, r2
  402328:	3301      	adds	r3, #1
  40232a:	443c      	add	r4, r7
  40232c:	2b07      	cmp	r3, #7
  40232e:	9427      	str	r4, [sp, #156]	; 0x9c
  402330:	9326      	str	r3, [sp, #152]	; 0x98
  402332:	e888 00a0 	stmia.w	r8, {r5, r7}
  402336:	f300 8232 	bgt.w	40279e <_svfprintf_r+0xe26>
  40233a:	f108 0808 	add.w	r8, r8, #8
  40233e:	e4ac      	b.n	401c9a <_svfprintf_r+0x322>
  402340:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402342:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402344:	2b01      	cmp	r3, #1
  402346:	f340 81fe 	ble.w	402746 <_svfprintf_r+0xdce>
  40234a:	3701      	adds	r7, #1
  40234c:	3401      	adds	r4, #1
  40234e:	2301      	movs	r3, #1
  402350:	2f07      	cmp	r7, #7
  402352:	9427      	str	r4, [sp, #156]	; 0x9c
  402354:	9726      	str	r7, [sp, #152]	; 0x98
  402356:	f8c8 6000 	str.w	r6, [r8]
  40235a:	f8c8 3004 	str.w	r3, [r8, #4]
  40235e:	f300 8203 	bgt.w	402768 <_svfprintf_r+0xdf0>
  402362:	f108 0808 	add.w	r8, r8, #8
  402366:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402368:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  40236a:	f8c8 3000 	str.w	r3, [r8]
  40236e:	3701      	adds	r7, #1
  402370:	4414      	add	r4, r2
  402372:	2f07      	cmp	r7, #7
  402374:	9427      	str	r4, [sp, #156]	; 0x9c
  402376:	9726      	str	r7, [sp, #152]	; 0x98
  402378:	f8c8 2004 	str.w	r2, [r8, #4]
  40237c:	f300 8200 	bgt.w	402780 <_svfprintf_r+0xe08>
  402380:	f108 0808 	add.w	r8, r8, #8
  402384:	a815      	add	r0, sp, #84	; 0x54
  402386:	c80d      	ldmia	r0, {r0, r2, r3}
  402388:	9914      	ldr	r1, [sp, #80]	; 0x50
  40238a:	f003 fcdb 	bl	405d44 <__aeabi_dcmpeq>
  40238e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402390:	2800      	cmp	r0, #0
  402392:	f040 8101 	bne.w	402598 <_svfprintf_r+0xc20>
  402396:	3b01      	subs	r3, #1
  402398:	3701      	adds	r7, #1
  40239a:	3601      	adds	r6, #1
  40239c:	441c      	add	r4, r3
  40239e:	2f07      	cmp	r7, #7
  4023a0:	9726      	str	r7, [sp, #152]	; 0x98
  4023a2:	9427      	str	r4, [sp, #156]	; 0x9c
  4023a4:	f8c8 6000 	str.w	r6, [r8]
  4023a8:	f8c8 3004 	str.w	r3, [r8, #4]
  4023ac:	f300 8127 	bgt.w	4025fe <_svfprintf_r+0xc86>
  4023b0:	f108 0808 	add.w	r8, r8, #8
  4023b4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  4023b6:	f8c8 2004 	str.w	r2, [r8, #4]
  4023ba:	3701      	adds	r7, #1
  4023bc:	4414      	add	r4, r2
  4023be:	ab21      	add	r3, sp, #132	; 0x84
  4023c0:	2f07      	cmp	r7, #7
  4023c2:	9427      	str	r4, [sp, #156]	; 0x9c
  4023c4:	9726      	str	r7, [sp, #152]	; 0x98
  4023c6:	f8c8 3000 	str.w	r3, [r8]
  4023ca:	f77f acb3 	ble.w	401d34 <_svfprintf_r+0x3bc>
  4023ce:	aa25      	add	r2, sp, #148	; 0x94
  4023d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4023d2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4023d4:	f002 fc22 	bl	404c1c <__ssprint_r>
  4023d8:	2800      	cmp	r0, #0
  4023da:	f47f ab9f 	bne.w	401b1c <_svfprintf_r+0x1a4>
  4023de:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4023e0:	46c8      	mov	r8, r9
  4023e2:	e4a9      	b.n	401d38 <_svfprintf_r+0x3c0>
  4023e4:	aa25      	add	r2, sp, #148	; 0x94
  4023e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4023e8:	980c      	ldr	r0, [sp, #48]	; 0x30
  4023ea:	f002 fc17 	bl	404c1c <__ssprint_r>
  4023ee:	2800      	cmp	r0, #0
  4023f0:	f43f aceb 	beq.w	401dca <_svfprintf_r+0x452>
  4023f4:	f7ff bb92 	b.w	401b1c <_svfprintf_r+0x1a4>
  4023f8:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4023fc:	2b01      	cmp	r3, #1
  4023fe:	f000 8134 	beq.w	40266a <_svfprintf_r+0xcf2>
  402402:	2b02      	cmp	r3, #2
  402404:	d125      	bne.n	402452 <_svfprintf_r+0xada>
  402406:	f8cd b01c 	str.w	fp, [sp, #28]
  40240a:	2400      	movs	r4, #0
  40240c:	2500      	movs	r5, #0
  40240e:	e61e      	b.n	40204e <_svfprintf_r+0x6d6>
  402410:	aa25      	add	r2, sp, #148	; 0x94
  402412:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402414:	980c      	ldr	r0, [sp, #48]	; 0x30
  402416:	f002 fc01 	bl	404c1c <__ssprint_r>
  40241a:	2800      	cmp	r0, #0
  40241c:	f47f ab7e 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402420:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402422:	46c8      	mov	r8, r9
  402424:	e475      	b.n	401d12 <_svfprintf_r+0x39a>
  402426:	aa25      	add	r2, sp, #148	; 0x94
  402428:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40242a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40242c:	f002 fbf6 	bl	404c1c <__ssprint_r>
  402430:	2800      	cmp	r0, #0
  402432:	f47f ab73 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402436:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402438:	46c8      	mov	r8, r9
  40243a:	e41b      	b.n	401c74 <_svfprintf_r+0x2fc>
  40243c:	aa25      	add	r2, sp, #148	; 0x94
  40243e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402440:	980c      	ldr	r0, [sp, #48]	; 0x30
  402442:	f002 fbeb 	bl	404c1c <__ssprint_r>
  402446:	2800      	cmp	r0, #0
  402448:	f47f ab68 	bne.w	401b1c <_svfprintf_r+0x1a4>
  40244c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40244e:	46c8      	mov	r8, r9
  402450:	e420      	b.n	401c94 <_svfprintf_r+0x31c>
  402452:	f8cd b01c 	str.w	fp, [sp, #28]
  402456:	2400      	movs	r4, #0
  402458:	2500      	movs	r5, #0
  40245a:	4649      	mov	r1, r9
  40245c:	e000      	b.n	402460 <_svfprintf_r+0xae8>
  40245e:	4631      	mov	r1, r6
  402460:	08e2      	lsrs	r2, r4, #3
  402462:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402466:	08e8      	lsrs	r0, r5, #3
  402468:	f004 0307 	and.w	r3, r4, #7
  40246c:	4605      	mov	r5, r0
  40246e:	4614      	mov	r4, r2
  402470:	3330      	adds	r3, #48	; 0x30
  402472:	ea54 0205 	orrs.w	r2, r4, r5
  402476:	f801 3c01 	strb.w	r3, [r1, #-1]
  40247a:	f101 36ff 	add.w	r6, r1, #4294967295
  40247e:	d1ee      	bne.n	40245e <_svfprintf_r+0xae6>
  402480:	9a07      	ldr	r2, [sp, #28]
  402482:	07d2      	lsls	r2, r2, #31
  402484:	f57f adf3 	bpl.w	40206e <_svfprintf_r+0x6f6>
  402488:	2b30      	cmp	r3, #48	; 0x30
  40248a:	f43f adf0 	beq.w	40206e <_svfprintf_r+0x6f6>
  40248e:	3902      	subs	r1, #2
  402490:	2330      	movs	r3, #48	; 0x30
  402492:	f806 3c01 	strb.w	r3, [r6, #-1]
  402496:	eba9 0301 	sub.w	r3, r9, r1
  40249a:	930e      	str	r3, [sp, #56]	; 0x38
  40249c:	460e      	mov	r6, r1
  40249e:	f7ff bb7b 	b.w	401b98 <_svfprintf_r+0x220>
  4024a2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  4024a4:	2900      	cmp	r1, #0
  4024a6:	f340 822e 	ble.w	402906 <_svfprintf_r+0xf8e>
  4024aa:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4024ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4024ae:	4293      	cmp	r3, r2
  4024b0:	bfa8      	it	ge
  4024b2:	4613      	movge	r3, r2
  4024b4:	2b00      	cmp	r3, #0
  4024b6:	461f      	mov	r7, r3
  4024b8:	dd0d      	ble.n	4024d6 <_svfprintf_r+0xb5e>
  4024ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024bc:	f8c8 6000 	str.w	r6, [r8]
  4024c0:	3301      	adds	r3, #1
  4024c2:	443c      	add	r4, r7
  4024c4:	2b07      	cmp	r3, #7
  4024c6:	9427      	str	r4, [sp, #156]	; 0x9c
  4024c8:	f8c8 7004 	str.w	r7, [r8, #4]
  4024cc:	9326      	str	r3, [sp, #152]	; 0x98
  4024ce:	f300 831f 	bgt.w	402b10 <_svfprintf_r+0x1198>
  4024d2:	f108 0808 	add.w	r8, r8, #8
  4024d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4024d8:	2f00      	cmp	r7, #0
  4024da:	bfa8      	it	ge
  4024dc:	1bdb      	subge	r3, r3, r7
  4024de:	2b00      	cmp	r3, #0
  4024e0:	461f      	mov	r7, r3
  4024e2:	f340 80d6 	ble.w	402692 <_svfprintf_r+0xd1a>
  4024e6:	2f10      	cmp	r7, #16
  4024e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024ea:	4d31      	ldr	r5, [pc, #196]	; (4025b0 <_svfprintf_r+0xc38>)
  4024ec:	f340 81ed 	ble.w	4028ca <_svfprintf_r+0xf52>
  4024f0:	4642      	mov	r2, r8
  4024f2:	4621      	mov	r1, r4
  4024f4:	46b0      	mov	r8, r6
  4024f6:	f04f 0b10 	mov.w	fp, #16
  4024fa:	462e      	mov	r6, r5
  4024fc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4024fe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402500:	e004      	b.n	40250c <_svfprintf_r+0xb94>
  402502:	3208      	adds	r2, #8
  402504:	3f10      	subs	r7, #16
  402506:	2f10      	cmp	r7, #16
  402508:	f340 81db 	ble.w	4028c2 <_svfprintf_r+0xf4a>
  40250c:	3301      	adds	r3, #1
  40250e:	3110      	adds	r1, #16
  402510:	2b07      	cmp	r3, #7
  402512:	9127      	str	r1, [sp, #156]	; 0x9c
  402514:	9326      	str	r3, [sp, #152]	; 0x98
  402516:	e882 0840 	stmia.w	r2, {r6, fp}
  40251a:	ddf2      	ble.n	402502 <_svfprintf_r+0xb8a>
  40251c:	aa25      	add	r2, sp, #148	; 0x94
  40251e:	4629      	mov	r1, r5
  402520:	4620      	mov	r0, r4
  402522:	f002 fb7b 	bl	404c1c <__ssprint_r>
  402526:	2800      	cmp	r0, #0
  402528:	f47f aaf8 	bne.w	401b1c <_svfprintf_r+0x1a4>
  40252c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40252e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402530:	464a      	mov	r2, r9
  402532:	e7e7      	b.n	402504 <_svfprintf_r+0xb8c>
  402534:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402536:	930e      	str	r3, [sp, #56]	; 0x38
  402538:	464e      	mov	r6, r9
  40253a:	f7ff bb2d 	b.w	401b98 <_svfprintf_r+0x220>
  40253e:	2d00      	cmp	r5, #0
  402540:	bf08      	it	eq
  402542:	2c0a      	cmpeq	r4, #10
  402544:	f0c0 808f 	bcc.w	402666 <_svfprintf_r+0xcee>
  402548:	464e      	mov	r6, r9
  40254a:	4620      	mov	r0, r4
  40254c:	4629      	mov	r1, r5
  40254e:	220a      	movs	r2, #10
  402550:	2300      	movs	r3, #0
  402552:	f003 fc67 	bl	405e24 <__aeabi_uldivmod>
  402556:	3230      	adds	r2, #48	; 0x30
  402558:	f806 2d01 	strb.w	r2, [r6, #-1]!
  40255c:	4620      	mov	r0, r4
  40255e:	4629      	mov	r1, r5
  402560:	2300      	movs	r3, #0
  402562:	220a      	movs	r2, #10
  402564:	f003 fc5e 	bl	405e24 <__aeabi_uldivmod>
  402568:	4604      	mov	r4, r0
  40256a:	460d      	mov	r5, r1
  40256c:	ea54 0305 	orrs.w	r3, r4, r5
  402570:	d1eb      	bne.n	40254a <_svfprintf_r+0xbd2>
  402572:	eba9 0306 	sub.w	r3, r9, r6
  402576:	930e      	str	r3, [sp, #56]	; 0x38
  402578:	f7ff bb0e 	b.w	401b98 <_svfprintf_r+0x220>
  40257c:	aa25      	add	r2, sp, #148	; 0x94
  40257e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402580:	980c      	ldr	r0, [sp, #48]	; 0x30
  402582:	f002 fb4b 	bl	404c1c <__ssprint_r>
  402586:	2800      	cmp	r0, #0
  402588:	f47f aac8 	bne.w	401b1c <_svfprintf_r+0x1a4>
  40258c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402590:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402592:	46c8      	mov	r8, r9
  402594:	f7ff bb5e 	b.w	401c54 <_svfprintf_r+0x2dc>
  402598:	1e5e      	subs	r6, r3, #1
  40259a:	2e00      	cmp	r6, #0
  40259c:	f77f af0a 	ble.w	4023b4 <_svfprintf_r+0xa3c>
  4025a0:	2e10      	cmp	r6, #16
  4025a2:	4d03      	ldr	r5, [pc, #12]	; (4025b0 <_svfprintf_r+0xc38>)
  4025a4:	dd22      	ble.n	4025ec <_svfprintf_r+0xc74>
  4025a6:	4622      	mov	r2, r4
  4025a8:	f04f 0b10 	mov.w	fp, #16
  4025ac:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4025ae:	e006      	b.n	4025be <_svfprintf_r+0xc46>
  4025b0:	00406bdc 	.word	0x00406bdc
  4025b4:	3e10      	subs	r6, #16
  4025b6:	2e10      	cmp	r6, #16
  4025b8:	f108 0808 	add.w	r8, r8, #8
  4025bc:	dd15      	ble.n	4025ea <_svfprintf_r+0xc72>
  4025be:	3701      	adds	r7, #1
  4025c0:	3210      	adds	r2, #16
  4025c2:	2f07      	cmp	r7, #7
  4025c4:	9227      	str	r2, [sp, #156]	; 0x9c
  4025c6:	9726      	str	r7, [sp, #152]	; 0x98
  4025c8:	e888 0820 	stmia.w	r8, {r5, fp}
  4025cc:	ddf2      	ble.n	4025b4 <_svfprintf_r+0xc3c>
  4025ce:	aa25      	add	r2, sp, #148	; 0x94
  4025d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4025d2:	4620      	mov	r0, r4
  4025d4:	f002 fb22 	bl	404c1c <__ssprint_r>
  4025d8:	2800      	cmp	r0, #0
  4025da:	f47f aa9f 	bne.w	401b1c <_svfprintf_r+0x1a4>
  4025de:	3e10      	subs	r6, #16
  4025e0:	2e10      	cmp	r6, #16
  4025e2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4025e4:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4025e6:	46c8      	mov	r8, r9
  4025e8:	dce9      	bgt.n	4025be <_svfprintf_r+0xc46>
  4025ea:	4614      	mov	r4, r2
  4025ec:	3701      	adds	r7, #1
  4025ee:	4434      	add	r4, r6
  4025f0:	2f07      	cmp	r7, #7
  4025f2:	9427      	str	r4, [sp, #156]	; 0x9c
  4025f4:	9726      	str	r7, [sp, #152]	; 0x98
  4025f6:	e888 0060 	stmia.w	r8, {r5, r6}
  4025fa:	f77f aed9 	ble.w	4023b0 <_svfprintf_r+0xa38>
  4025fe:	aa25      	add	r2, sp, #148	; 0x94
  402600:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402602:	980c      	ldr	r0, [sp, #48]	; 0x30
  402604:	f002 fb0a 	bl	404c1c <__ssprint_r>
  402608:	2800      	cmp	r0, #0
  40260a:	f47f aa87 	bne.w	401b1c <_svfprintf_r+0x1a4>
  40260e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402610:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402612:	46c8      	mov	r8, r9
  402614:	e6ce      	b.n	4023b4 <_svfprintf_r+0xa3c>
  402616:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402618:	6814      	ldr	r4, [r2, #0]
  40261a:	4613      	mov	r3, r2
  40261c:	3304      	adds	r3, #4
  40261e:	17e5      	asrs	r5, r4, #31
  402620:	930f      	str	r3, [sp, #60]	; 0x3c
  402622:	4622      	mov	r2, r4
  402624:	462b      	mov	r3, r5
  402626:	e4fa      	b.n	40201e <_svfprintf_r+0x6a6>
  402628:	3204      	adds	r2, #4
  40262a:	681c      	ldr	r4, [r3, #0]
  40262c:	920f      	str	r2, [sp, #60]	; 0x3c
  40262e:	2301      	movs	r3, #1
  402630:	2500      	movs	r5, #0
  402632:	f7ff ba94 	b.w	401b5e <_svfprintf_r+0x1e6>
  402636:	681c      	ldr	r4, [r3, #0]
  402638:	3304      	adds	r3, #4
  40263a:	930f      	str	r3, [sp, #60]	; 0x3c
  40263c:	2500      	movs	r5, #0
  40263e:	e421      	b.n	401e84 <_svfprintf_r+0x50c>
  402640:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402642:	460a      	mov	r2, r1
  402644:	3204      	adds	r2, #4
  402646:	680c      	ldr	r4, [r1, #0]
  402648:	920f      	str	r2, [sp, #60]	; 0x3c
  40264a:	2500      	movs	r5, #0
  40264c:	f7ff ba87 	b.w	401b5e <_svfprintf_r+0x1e6>
  402650:	4614      	mov	r4, r2
  402652:	3301      	adds	r3, #1
  402654:	4434      	add	r4, r6
  402656:	2b07      	cmp	r3, #7
  402658:	9427      	str	r4, [sp, #156]	; 0x9c
  40265a:	9326      	str	r3, [sp, #152]	; 0x98
  40265c:	e888 0060 	stmia.w	r8, {r5, r6}
  402660:	f77f ab68 	ble.w	401d34 <_svfprintf_r+0x3bc>
  402664:	e6b3      	b.n	4023ce <_svfprintf_r+0xa56>
  402666:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40266a:	f8cd b01c 	str.w	fp, [sp, #28]
  40266e:	ae42      	add	r6, sp, #264	; 0x108
  402670:	3430      	adds	r4, #48	; 0x30
  402672:	2301      	movs	r3, #1
  402674:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402678:	930e      	str	r3, [sp, #56]	; 0x38
  40267a:	f7ff ba8d 	b.w	401b98 <_svfprintf_r+0x220>
  40267e:	aa25      	add	r2, sp, #148	; 0x94
  402680:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402682:	980c      	ldr	r0, [sp, #48]	; 0x30
  402684:	f002 faca 	bl	404c1c <__ssprint_r>
  402688:	2800      	cmp	r0, #0
  40268a:	f47f aa47 	bne.w	401b1c <_svfprintf_r+0x1a4>
  40268e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402690:	46c8      	mov	r8, r9
  402692:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402694:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402696:	429a      	cmp	r2, r3
  402698:	db44      	blt.n	402724 <_svfprintf_r+0xdac>
  40269a:	9b07      	ldr	r3, [sp, #28]
  40269c:	07d9      	lsls	r1, r3, #31
  40269e:	d441      	bmi.n	402724 <_svfprintf_r+0xdac>
  4026a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4026a2:	9812      	ldr	r0, [sp, #72]	; 0x48
  4026a4:	1a9a      	subs	r2, r3, r2
  4026a6:	1a1d      	subs	r5, r3, r0
  4026a8:	4295      	cmp	r5, r2
  4026aa:	bfa8      	it	ge
  4026ac:	4615      	movge	r5, r2
  4026ae:	2d00      	cmp	r5, #0
  4026b0:	dd0e      	ble.n	4026d0 <_svfprintf_r+0xd58>
  4026b2:	9926      	ldr	r1, [sp, #152]	; 0x98
  4026b4:	f8c8 5004 	str.w	r5, [r8, #4]
  4026b8:	3101      	adds	r1, #1
  4026ba:	4406      	add	r6, r0
  4026bc:	442c      	add	r4, r5
  4026be:	2907      	cmp	r1, #7
  4026c0:	f8c8 6000 	str.w	r6, [r8]
  4026c4:	9427      	str	r4, [sp, #156]	; 0x9c
  4026c6:	9126      	str	r1, [sp, #152]	; 0x98
  4026c8:	f300 823b 	bgt.w	402b42 <_svfprintf_r+0x11ca>
  4026cc:	f108 0808 	add.w	r8, r8, #8
  4026d0:	2d00      	cmp	r5, #0
  4026d2:	bfac      	ite	ge
  4026d4:	1b56      	subge	r6, r2, r5
  4026d6:	4616      	movlt	r6, r2
  4026d8:	2e00      	cmp	r6, #0
  4026da:	f77f ab2d 	ble.w	401d38 <_svfprintf_r+0x3c0>
  4026de:	2e10      	cmp	r6, #16
  4026e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026e2:	4db0      	ldr	r5, [pc, #704]	; (4029a4 <_svfprintf_r+0x102c>)
  4026e4:	ddb5      	ble.n	402652 <_svfprintf_r+0xcda>
  4026e6:	4622      	mov	r2, r4
  4026e8:	2710      	movs	r7, #16
  4026ea:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4026ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4026f0:	e004      	b.n	4026fc <_svfprintf_r+0xd84>
  4026f2:	f108 0808 	add.w	r8, r8, #8
  4026f6:	3e10      	subs	r6, #16
  4026f8:	2e10      	cmp	r6, #16
  4026fa:	dda9      	ble.n	402650 <_svfprintf_r+0xcd8>
  4026fc:	3301      	adds	r3, #1
  4026fe:	3210      	adds	r2, #16
  402700:	2b07      	cmp	r3, #7
  402702:	9227      	str	r2, [sp, #156]	; 0x9c
  402704:	9326      	str	r3, [sp, #152]	; 0x98
  402706:	e888 00a0 	stmia.w	r8, {r5, r7}
  40270a:	ddf2      	ble.n	4026f2 <_svfprintf_r+0xd7a>
  40270c:	aa25      	add	r2, sp, #148	; 0x94
  40270e:	4621      	mov	r1, r4
  402710:	4658      	mov	r0, fp
  402712:	f002 fa83 	bl	404c1c <__ssprint_r>
  402716:	2800      	cmp	r0, #0
  402718:	f47f aa00 	bne.w	401b1c <_svfprintf_r+0x1a4>
  40271c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40271e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402720:	46c8      	mov	r8, r9
  402722:	e7e8      	b.n	4026f6 <_svfprintf_r+0xd7e>
  402724:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402726:	9819      	ldr	r0, [sp, #100]	; 0x64
  402728:	991a      	ldr	r1, [sp, #104]	; 0x68
  40272a:	f8c8 1000 	str.w	r1, [r8]
  40272e:	3301      	adds	r3, #1
  402730:	4404      	add	r4, r0
  402732:	2b07      	cmp	r3, #7
  402734:	9427      	str	r4, [sp, #156]	; 0x9c
  402736:	f8c8 0004 	str.w	r0, [r8, #4]
  40273a:	9326      	str	r3, [sp, #152]	; 0x98
  40273c:	f300 81f5 	bgt.w	402b2a <_svfprintf_r+0x11b2>
  402740:	f108 0808 	add.w	r8, r8, #8
  402744:	e7ac      	b.n	4026a0 <_svfprintf_r+0xd28>
  402746:	9b07      	ldr	r3, [sp, #28]
  402748:	07da      	lsls	r2, r3, #31
  40274a:	f53f adfe 	bmi.w	40234a <_svfprintf_r+0x9d2>
  40274e:	3701      	adds	r7, #1
  402750:	3401      	adds	r4, #1
  402752:	2301      	movs	r3, #1
  402754:	2f07      	cmp	r7, #7
  402756:	9427      	str	r4, [sp, #156]	; 0x9c
  402758:	9726      	str	r7, [sp, #152]	; 0x98
  40275a:	f8c8 6000 	str.w	r6, [r8]
  40275e:	f8c8 3004 	str.w	r3, [r8, #4]
  402762:	f77f ae25 	ble.w	4023b0 <_svfprintf_r+0xa38>
  402766:	e74a      	b.n	4025fe <_svfprintf_r+0xc86>
  402768:	aa25      	add	r2, sp, #148	; 0x94
  40276a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40276c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40276e:	f002 fa55 	bl	404c1c <__ssprint_r>
  402772:	2800      	cmp	r0, #0
  402774:	f47f a9d2 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402778:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40277a:	9f26      	ldr	r7, [sp, #152]	; 0x98
  40277c:	46c8      	mov	r8, r9
  40277e:	e5f2      	b.n	402366 <_svfprintf_r+0x9ee>
  402780:	aa25      	add	r2, sp, #148	; 0x94
  402782:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402784:	980c      	ldr	r0, [sp, #48]	; 0x30
  402786:	f002 fa49 	bl	404c1c <__ssprint_r>
  40278a:	2800      	cmp	r0, #0
  40278c:	f47f a9c6 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402790:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402792:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402794:	46c8      	mov	r8, r9
  402796:	e5f5      	b.n	402384 <_svfprintf_r+0xa0c>
  402798:	464e      	mov	r6, r9
  40279a:	f7ff b9fd 	b.w	401b98 <_svfprintf_r+0x220>
  40279e:	aa25      	add	r2, sp, #148	; 0x94
  4027a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4027a2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4027a4:	f002 fa3a 	bl	404c1c <__ssprint_r>
  4027a8:	2800      	cmp	r0, #0
  4027aa:	f47f a9b7 	bne.w	401b1c <_svfprintf_r+0x1a4>
  4027ae:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4027b0:	46c8      	mov	r8, r9
  4027b2:	f7ff ba72 	b.w	401c9a <_svfprintf_r+0x322>
  4027b6:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4027b8:	4622      	mov	r2, r4
  4027ba:	4620      	mov	r0, r4
  4027bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4027be:	4623      	mov	r3, r4
  4027c0:	4621      	mov	r1, r4
  4027c2:	f003 faf1 	bl	405da8 <__aeabi_dcmpun>
  4027c6:	2800      	cmp	r0, #0
  4027c8:	f040 8286 	bne.w	402cd8 <_svfprintf_r+0x1360>
  4027cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4027ce:	3301      	adds	r3, #1
  4027d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4027d2:	f023 0320 	bic.w	r3, r3, #32
  4027d6:	930e      	str	r3, [sp, #56]	; 0x38
  4027d8:	f000 81e2 	beq.w	402ba0 <_svfprintf_r+0x1228>
  4027dc:	2b47      	cmp	r3, #71	; 0x47
  4027de:	f000 811e 	beq.w	402a1e <_svfprintf_r+0x10a6>
  4027e2:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4027e6:	9307      	str	r3, [sp, #28]
  4027e8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4027ea:	1e1f      	subs	r7, r3, #0
  4027ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4027ee:	9308      	str	r3, [sp, #32]
  4027f0:	bfbb      	ittet	lt
  4027f2:	463b      	movlt	r3, r7
  4027f4:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  4027f8:	2300      	movge	r3, #0
  4027fa:	232d      	movlt	r3, #45	; 0x2d
  4027fc:	9310      	str	r3, [sp, #64]	; 0x40
  4027fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402800:	2b66      	cmp	r3, #102	; 0x66
  402802:	f000 81bb 	beq.w	402b7c <_svfprintf_r+0x1204>
  402806:	2b46      	cmp	r3, #70	; 0x46
  402808:	f000 80df 	beq.w	4029ca <_svfprintf_r+0x1052>
  40280c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40280e:	9a08      	ldr	r2, [sp, #32]
  402810:	2b45      	cmp	r3, #69	; 0x45
  402812:	bf0c      	ite	eq
  402814:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402816:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402818:	a823      	add	r0, sp, #140	; 0x8c
  40281a:	a920      	add	r1, sp, #128	; 0x80
  40281c:	bf08      	it	eq
  40281e:	1c5d      	addeq	r5, r3, #1
  402820:	9004      	str	r0, [sp, #16]
  402822:	9103      	str	r1, [sp, #12]
  402824:	a81f      	add	r0, sp, #124	; 0x7c
  402826:	2102      	movs	r1, #2
  402828:	463b      	mov	r3, r7
  40282a:	9002      	str	r0, [sp, #8]
  40282c:	9501      	str	r5, [sp, #4]
  40282e:	9100      	str	r1, [sp, #0]
  402830:	980c      	ldr	r0, [sp, #48]	; 0x30
  402832:	f000 fb75 	bl	402f20 <_dtoa_r>
  402836:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402838:	2b67      	cmp	r3, #103	; 0x67
  40283a:	4606      	mov	r6, r0
  40283c:	f040 81e0 	bne.w	402c00 <_svfprintf_r+0x1288>
  402840:	f01b 0f01 	tst.w	fp, #1
  402844:	f000 8246 	beq.w	402cd4 <_svfprintf_r+0x135c>
  402848:	1974      	adds	r4, r6, r5
  40284a:	9a16      	ldr	r2, [sp, #88]	; 0x58
  40284c:	9808      	ldr	r0, [sp, #32]
  40284e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402850:	4639      	mov	r1, r7
  402852:	f003 fa77 	bl	405d44 <__aeabi_dcmpeq>
  402856:	2800      	cmp	r0, #0
  402858:	f040 8165 	bne.w	402b26 <_svfprintf_r+0x11ae>
  40285c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40285e:	42a3      	cmp	r3, r4
  402860:	d206      	bcs.n	402870 <_svfprintf_r+0xef8>
  402862:	2130      	movs	r1, #48	; 0x30
  402864:	1c5a      	adds	r2, r3, #1
  402866:	9223      	str	r2, [sp, #140]	; 0x8c
  402868:	7019      	strb	r1, [r3, #0]
  40286a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  40286c:	429c      	cmp	r4, r3
  40286e:	d8f9      	bhi.n	402864 <_svfprintf_r+0xeec>
  402870:	1b9b      	subs	r3, r3, r6
  402872:	9313      	str	r3, [sp, #76]	; 0x4c
  402874:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402876:	2b47      	cmp	r3, #71	; 0x47
  402878:	f000 80e9 	beq.w	402a4e <_svfprintf_r+0x10d6>
  40287c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40287e:	2b65      	cmp	r3, #101	; 0x65
  402880:	f340 81cd 	ble.w	402c1e <_svfprintf_r+0x12a6>
  402884:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402886:	2b66      	cmp	r3, #102	; 0x66
  402888:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40288a:	9312      	str	r3, [sp, #72]	; 0x48
  40288c:	f000 819e 	beq.w	402bcc <_svfprintf_r+0x1254>
  402890:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402892:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402894:	4619      	mov	r1, r3
  402896:	4291      	cmp	r1, r2
  402898:	f300 818a 	bgt.w	402bb0 <_svfprintf_r+0x1238>
  40289c:	f01b 0f01 	tst.w	fp, #1
  4028a0:	f040 8213 	bne.w	402cca <_svfprintf_r+0x1352>
  4028a4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4028a8:	9308      	str	r3, [sp, #32]
  4028aa:	2367      	movs	r3, #103	; 0x67
  4028ac:	920e      	str	r2, [sp, #56]	; 0x38
  4028ae:	9311      	str	r3, [sp, #68]	; 0x44
  4028b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4028b2:	2b00      	cmp	r3, #0
  4028b4:	f040 80c4 	bne.w	402a40 <_svfprintf_r+0x10c8>
  4028b8:	930a      	str	r3, [sp, #40]	; 0x28
  4028ba:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4028be:	f7ff b973 	b.w	401ba8 <_svfprintf_r+0x230>
  4028c2:	4635      	mov	r5, r6
  4028c4:	460c      	mov	r4, r1
  4028c6:	4646      	mov	r6, r8
  4028c8:	4690      	mov	r8, r2
  4028ca:	3301      	adds	r3, #1
  4028cc:	443c      	add	r4, r7
  4028ce:	2b07      	cmp	r3, #7
  4028d0:	9427      	str	r4, [sp, #156]	; 0x9c
  4028d2:	9326      	str	r3, [sp, #152]	; 0x98
  4028d4:	e888 00a0 	stmia.w	r8, {r5, r7}
  4028d8:	f73f aed1 	bgt.w	40267e <_svfprintf_r+0xd06>
  4028dc:	f108 0808 	add.w	r8, r8, #8
  4028e0:	e6d7      	b.n	402692 <_svfprintf_r+0xd1a>
  4028e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4028e4:	6813      	ldr	r3, [r2, #0]
  4028e6:	3204      	adds	r2, #4
  4028e8:	920f      	str	r2, [sp, #60]	; 0x3c
  4028ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4028ec:	601a      	str	r2, [r3, #0]
  4028ee:	f7ff b86a 	b.w	4019c6 <_svfprintf_r+0x4e>
  4028f2:	aa25      	add	r2, sp, #148	; 0x94
  4028f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028f6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028f8:	f002 f990 	bl	404c1c <__ssprint_r>
  4028fc:	2800      	cmp	r0, #0
  4028fe:	f47f a90d 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402902:	46c8      	mov	r8, r9
  402904:	e48d      	b.n	402222 <_svfprintf_r+0x8aa>
  402906:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402908:	4a27      	ldr	r2, [pc, #156]	; (4029a8 <_svfprintf_r+0x1030>)
  40290a:	f8c8 2000 	str.w	r2, [r8]
  40290e:	3301      	adds	r3, #1
  402910:	3401      	adds	r4, #1
  402912:	2201      	movs	r2, #1
  402914:	2b07      	cmp	r3, #7
  402916:	9427      	str	r4, [sp, #156]	; 0x9c
  402918:	9326      	str	r3, [sp, #152]	; 0x98
  40291a:	f8c8 2004 	str.w	r2, [r8, #4]
  40291e:	dc72      	bgt.n	402a06 <_svfprintf_r+0x108e>
  402920:	f108 0808 	add.w	r8, r8, #8
  402924:	b929      	cbnz	r1, 402932 <_svfprintf_r+0xfba>
  402926:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402928:	b91b      	cbnz	r3, 402932 <_svfprintf_r+0xfba>
  40292a:	9b07      	ldr	r3, [sp, #28]
  40292c:	07d8      	lsls	r0, r3, #31
  40292e:	f57f aa03 	bpl.w	401d38 <_svfprintf_r+0x3c0>
  402932:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402934:	9819      	ldr	r0, [sp, #100]	; 0x64
  402936:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402938:	f8c8 2000 	str.w	r2, [r8]
  40293c:	3301      	adds	r3, #1
  40293e:	4602      	mov	r2, r0
  402940:	4422      	add	r2, r4
  402942:	2b07      	cmp	r3, #7
  402944:	9227      	str	r2, [sp, #156]	; 0x9c
  402946:	f8c8 0004 	str.w	r0, [r8, #4]
  40294a:	9326      	str	r3, [sp, #152]	; 0x98
  40294c:	f300 818d 	bgt.w	402c6a <_svfprintf_r+0x12f2>
  402950:	f108 0808 	add.w	r8, r8, #8
  402954:	2900      	cmp	r1, #0
  402956:	f2c0 8165 	blt.w	402c24 <_svfprintf_r+0x12ac>
  40295a:	9913      	ldr	r1, [sp, #76]	; 0x4c
  40295c:	f8c8 6000 	str.w	r6, [r8]
  402960:	3301      	adds	r3, #1
  402962:	188c      	adds	r4, r1, r2
  402964:	2b07      	cmp	r3, #7
  402966:	9427      	str	r4, [sp, #156]	; 0x9c
  402968:	9326      	str	r3, [sp, #152]	; 0x98
  40296a:	f8c8 1004 	str.w	r1, [r8, #4]
  40296e:	f77f a9e1 	ble.w	401d34 <_svfprintf_r+0x3bc>
  402972:	e52c      	b.n	4023ce <_svfprintf_r+0xa56>
  402974:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402976:	9909      	ldr	r1, [sp, #36]	; 0x24
  402978:	6813      	ldr	r3, [r2, #0]
  40297a:	17cd      	asrs	r5, r1, #31
  40297c:	4608      	mov	r0, r1
  40297e:	3204      	adds	r2, #4
  402980:	4629      	mov	r1, r5
  402982:	920f      	str	r2, [sp, #60]	; 0x3c
  402984:	e9c3 0100 	strd	r0, r1, [r3]
  402988:	f7ff b81d 	b.w	4019c6 <_svfprintf_r+0x4e>
  40298c:	aa25      	add	r2, sp, #148	; 0x94
  40298e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402990:	980c      	ldr	r0, [sp, #48]	; 0x30
  402992:	f002 f943 	bl	404c1c <__ssprint_r>
  402996:	2800      	cmp	r0, #0
  402998:	f47f a8c0 	bne.w	401b1c <_svfprintf_r+0x1a4>
  40299c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40299e:	46c8      	mov	r8, r9
  4029a0:	e458      	b.n	402254 <_svfprintf_r+0x8dc>
  4029a2:	bf00      	nop
  4029a4:	00406bdc 	.word	0x00406bdc
  4029a8:	00406bc8 	.word	0x00406bc8
  4029ac:	2140      	movs	r1, #64	; 0x40
  4029ae:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029b0:	f001 fa0c 	bl	403dcc <_malloc_r>
  4029b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4029b6:	6010      	str	r0, [r2, #0]
  4029b8:	6110      	str	r0, [r2, #16]
  4029ba:	2800      	cmp	r0, #0
  4029bc:	f000 81f2 	beq.w	402da4 <_svfprintf_r+0x142c>
  4029c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4029c2:	2340      	movs	r3, #64	; 0x40
  4029c4:	6153      	str	r3, [r2, #20]
  4029c6:	f7fe bfee 	b.w	4019a6 <_svfprintf_r+0x2e>
  4029ca:	a823      	add	r0, sp, #140	; 0x8c
  4029cc:	a920      	add	r1, sp, #128	; 0x80
  4029ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4029d0:	9004      	str	r0, [sp, #16]
  4029d2:	9103      	str	r1, [sp, #12]
  4029d4:	a81f      	add	r0, sp, #124	; 0x7c
  4029d6:	2103      	movs	r1, #3
  4029d8:	9002      	str	r0, [sp, #8]
  4029da:	9a08      	ldr	r2, [sp, #32]
  4029dc:	9401      	str	r4, [sp, #4]
  4029de:	463b      	mov	r3, r7
  4029e0:	9100      	str	r1, [sp, #0]
  4029e2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029e4:	f000 fa9c 	bl	402f20 <_dtoa_r>
  4029e8:	4625      	mov	r5, r4
  4029ea:	4606      	mov	r6, r0
  4029ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4029ee:	2b46      	cmp	r3, #70	; 0x46
  4029f0:	eb06 0405 	add.w	r4, r6, r5
  4029f4:	f47f af29 	bne.w	40284a <_svfprintf_r+0xed2>
  4029f8:	7833      	ldrb	r3, [r6, #0]
  4029fa:	2b30      	cmp	r3, #48	; 0x30
  4029fc:	f000 8178 	beq.w	402cf0 <_svfprintf_r+0x1378>
  402a00:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402a02:	442c      	add	r4, r5
  402a04:	e721      	b.n	40284a <_svfprintf_r+0xed2>
  402a06:	aa25      	add	r2, sp, #148	; 0x94
  402a08:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a0a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a0c:	f002 f906 	bl	404c1c <__ssprint_r>
  402a10:	2800      	cmp	r0, #0
  402a12:	f47f a883 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402a16:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402a18:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a1a:	46c8      	mov	r8, r9
  402a1c:	e782      	b.n	402924 <_svfprintf_r+0xfac>
  402a1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402a20:	2b00      	cmp	r3, #0
  402a22:	bf08      	it	eq
  402a24:	2301      	moveq	r3, #1
  402a26:	930a      	str	r3, [sp, #40]	; 0x28
  402a28:	e6db      	b.n	4027e2 <_svfprintf_r+0xe6a>
  402a2a:	4630      	mov	r0, r6
  402a2c:	940a      	str	r4, [sp, #40]	; 0x28
  402a2e:	f002 f887 	bl	404b40 <strlen>
  402a32:	950f      	str	r5, [sp, #60]	; 0x3c
  402a34:	900e      	str	r0, [sp, #56]	; 0x38
  402a36:	f8cd b01c 	str.w	fp, [sp, #28]
  402a3a:	4603      	mov	r3, r0
  402a3c:	f7ff b9f9 	b.w	401e32 <_svfprintf_r+0x4ba>
  402a40:	272d      	movs	r7, #45	; 0x2d
  402a42:	2300      	movs	r3, #0
  402a44:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402a48:	930a      	str	r3, [sp, #40]	; 0x28
  402a4a:	f7ff b8ae 	b.w	401baa <_svfprintf_r+0x232>
  402a4e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402a50:	9312      	str	r3, [sp, #72]	; 0x48
  402a52:	461a      	mov	r2, r3
  402a54:	3303      	adds	r3, #3
  402a56:	db04      	blt.n	402a62 <_svfprintf_r+0x10ea>
  402a58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402a5a:	4619      	mov	r1, r3
  402a5c:	4291      	cmp	r1, r2
  402a5e:	f6bf af17 	bge.w	402890 <_svfprintf_r+0xf18>
  402a62:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402a64:	3b02      	subs	r3, #2
  402a66:	9311      	str	r3, [sp, #68]	; 0x44
  402a68:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402a6c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402a70:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402a72:	3b01      	subs	r3, #1
  402a74:	2b00      	cmp	r3, #0
  402a76:	931f      	str	r3, [sp, #124]	; 0x7c
  402a78:	bfbd      	ittte	lt
  402a7a:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402a7c:	f1c3 0301 	rsblt	r3, r3, #1
  402a80:	222d      	movlt	r2, #45	; 0x2d
  402a82:	222b      	movge	r2, #43	; 0x2b
  402a84:	2b09      	cmp	r3, #9
  402a86:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402a8a:	f340 8116 	ble.w	402cba <_svfprintf_r+0x1342>
  402a8e:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402a92:	4620      	mov	r0, r4
  402a94:	4dab      	ldr	r5, [pc, #684]	; (402d44 <_svfprintf_r+0x13cc>)
  402a96:	e000      	b.n	402a9a <_svfprintf_r+0x1122>
  402a98:	4610      	mov	r0, r2
  402a9a:	fb85 1203 	smull	r1, r2, r5, r3
  402a9e:	17d9      	asrs	r1, r3, #31
  402aa0:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402aa4:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402aa8:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402aac:	3230      	adds	r2, #48	; 0x30
  402aae:	2909      	cmp	r1, #9
  402ab0:	f800 2c01 	strb.w	r2, [r0, #-1]
  402ab4:	460b      	mov	r3, r1
  402ab6:	f100 32ff 	add.w	r2, r0, #4294967295
  402aba:	dced      	bgt.n	402a98 <_svfprintf_r+0x1120>
  402abc:	3330      	adds	r3, #48	; 0x30
  402abe:	3802      	subs	r0, #2
  402ac0:	b2d9      	uxtb	r1, r3
  402ac2:	4284      	cmp	r4, r0
  402ac4:	f802 1c01 	strb.w	r1, [r2, #-1]
  402ac8:	f240 8165 	bls.w	402d96 <_svfprintf_r+0x141e>
  402acc:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402ad0:	4613      	mov	r3, r2
  402ad2:	e001      	b.n	402ad8 <_svfprintf_r+0x1160>
  402ad4:	f813 1b01 	ldrb.w	r1, [r3], #1
  402ad8:	f800 1b01 	strb.w	r1, [r0], #1
  402adc:	42a3      	cmp	r3, r4
  402ade:	d1f9      	bne.n	402ad4 <_svfprintf_r+0x115c>
  402ae0:	3301      	adds	r3, #1
  402ae2:	1a9b      	subs	r3, r3, r2
  402ae4:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402ae8:	4413      	add	r3, r2
  402aea:	aa21      	add	r2, sp, #132	; 0x84
  402aec:	1a9b      	subs	r3, r3, r2
  402aee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402af0:	931b      	str	r3, [sp, #108]	; 0x6c
  402af2:	2a01      	cmp	r2, #1
  402af4:	4413      	add	r3, r2
  402af6:	930e      	str	r3, [sp, #56]	; 0x38
  402af8:	f340 8119 	ble.w	402d2e <_svfprintf_r+0x13b6>
  402afc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402afe:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402b00:	4413      	add	r3, r2
  402b02:	930e      	str	r3, [sp, #56]	; 0x38
  402b04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402b08:	9308      	str	r3, [sp, #32]
  402b0a:	2300      	movs	r3, #0
  402b0c:	9312      	str	r3, [sp, #72]	; 0x48
  402b0e:	e6cf      	b.n	4028b0 <_svfprintf_r+0xf38>
  402b10:	aa25      	add	r2, sp, #148	; 0x94
  402b12:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b14:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b16:	f002 f881 	bl	404c1c <__ssprint_r>
  402b1a:	2800      	cmp	r0, #0
  402b1c:	f47e affe 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402b20:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b22:	46c8      	mov	r8, r9
  402b24:	e4d7      	b.n	4024d6 <_svfprintf_r+0xb5e>
  402b26:	4623      	mov	r3, r4
  402b28:	e6a2      	b.n	402870 <_svfprintf_r+0xef8>
  402b2a:	aa25      	add	r2, sp, #148	; 0x94
  402b2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b2e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b30:	f002 f874 	bl	404c1c <__ssprint_r>
  402b34:	2800      	cmp	r0, #0
  402b36:	f47e aff1 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402b3a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402b3c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b3e:	46c8      	mov	r8, r9
  402b40:	e5ae      	b.n	4026a0 <_svfprintf_r+0xd28>
  402b42:	aa25      	add	r2, sp, #148	; 0x94
  402b44:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b46:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b48:	f002 f868 	bl	404c1c <__ssprint_r>
  402b4c:	2800      	cmp	r0, #0
  402b4e:	f47e afe5 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402b52:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402b54:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b56:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b58:	1a9a      	subs	r2, r3, r2
  402b5a:	46c8      	mov	r8, r9
  402b5c:	e5b8      	b.n	4026d0 <_svfprintf_r+0xd58>
  402b5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402b60:	9612      	str	r6, [sp, #72]	; 0x48
  402b62:	2b06      	cmp	r3, #6
  402b64:	bf28      	it	cs
  402b66:	2306      	movcs	r3, #6
  402b68:	960a      	str	r6, [sp, #40]	; 0x28
  402b6a:	4637      	mov	r7, r6
  402b6c:	9308      	str	r3, [sp, #32]
  402b6e:	950f      	str	r5, [sp, #60]	; 0x3c
  402b70:	f8cd b01c 	str.w	fp, [sp, #28]
  402b74:	930e      	str	r3, [sp, #56]	; 0x38
  402b76:	4e74      	ldr	r6, [pc, #464]	; (402d48 <_svfprintf_r+0x13d0>)
  402b78:	f7ff b816 	b.w	401ba8 <_svfprintf_r+0x230>
  402b7c:	a823      	add	r0, sp, #140	; 0x8c
  402b7e:	a920      	add	r1, sp, #128	; 0x80
  402b80:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402b82:	9004      	str	r0, [sp, #16]
  402b84:	9103      	str	r1, [sp, #12]
  402b86:	a81f      	add	r0, sp, #124	; 0x7c
  402b88:	2103      	movs	r1, #3
  402b8a:	9002      	str	r0, [sp, #8]
  402b8c:	9a08      	ldr	r2, [sp, #32]
  402b8e:	9501      	str	r5, [sp, #4]
  402b90:	463b      	mov	r3, r7
  402b92:	9100      	str	r1, [sp, #0]
  402b94:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b96:	f000 f9c3 	bl	402f20 <_dtoa_r>
  402b9a:	4606      	mov	r6, r0
  402b9c:	1944      	adds	r4, r0, r5
  402b9e:	e72b      	b.n	4029f8 <_svfprintf_r+0x1080>
  402ba0:	2306      	movs	r3, #6
  402ba2:	930a      	str	r3, [sp, #40]	; 0x28
  402ba4:	e61d      	b.n	4027e2 <_svfprintf_r+0xe6a>
  402ba6:	272d      	movs	r7, #45	; 0x2d
  402ba8:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402bac:	f7ff bacd 	b.w	40214a <_svfprintf_r+0x7d2>
  402bb0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402bb2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402bb4:	4413      	add	r3, r2
  402bb6:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402bb8:	930e      	str	r3, [sp, #56]	; 0x38
  402bba:	2a00      	cmp	r2, #0
  402bbc:	f340 80b0 	ble.w	402d20 <_svfprintf_r+0x13a8>
  402bc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402bc4:	9308      	str	r3, [sp, #32]
  402bc6:	2367      	movs	r3, #103	; 0x67
  402bc8:	9311      	str	r3, [sp, #68]	; 0x44
  402bca:	e671      	b.n	4028b0 <_svfprintf_r+0xf38>
  402bcc:	2b00      	cmp	r3, #0
  402bce:	f340 80c3 	ble.w	402d58 <_svfprintf_r+0x13e0>
  402bd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402bd4:	2a00      	cmp	r2, #0
  402bd6:	f040 8099 	bne.w	402d0c <_svfprintf_r+0x1394>
  402bda:	f01b 0f01 	tst.w	fp, #1
  402bde:	f040 8095 	bne.w	402d0c <_svfprintf_r+0x1394>
  402be2:	9308      	str	r3, [sp, #32]
  402be4:	930e      	str	r3, [sp, #56]	; 0x38
  402be6:	e663      	b.n	4028b0 <_svfprintf_r+0xf38>
  402be8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402bea:	9308      	str	r3, [sp, #32]
  402bec:	930e      	str	r3, [sp, #56]	; 0x38
  402bee:	900a      	str	r0, [sp, #40]	; 0x28
  402bf0:	950f      	str	r5, [sp, #60]	; 0x3c
  402bf2:	f8cd b01c 	str.w	fp, [sp, #28]
  402bf6:	9012      	str	r0, [sp, #72]	; 0x48
  402bf8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402bfc:	f7fe bfd4 	b.w	401ba8 <_svfprintf_r+0x230>
  402c00:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c02:	2b47      	cmp	r3, #71	; 0x47
  402c04:	f47f ae20 	bne.w	402848 <_svfprintf_r+0xed0>
  402c08:	f01b 0f01 	tst.w	fp, #1
  402c0c:	f47f aeee 	bne.w	4029ec <_svfprintf_r+0x1074>
  402c10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402c12:	1b9b      	subs	r3, r3, r6
  402c14:	9313      	str	r3, [sp, #76]	; 0x4c
  402c16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c18:	2b47      	cmp	r3, #71	; 0x47
  402c1a:	f43f af18 	beq.w	402a4e <_svfprintf_r+0x10d6>
  402c1e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402c20:	9312      	str	r3, [sp, #72]	; 0x48
  402c22:	e721      	b.n	402a68 <_svfprintf_r+0x10f0>
  402c24:	424f      	negs	r7, r1
  402c26:	3110      	adds	r1, #16
  402c28:	4d48      	ldr	r5, [pc, #288]	; (402d4c <_svfprintf_r+0x13d4>)
  402c2a:	da2f      	bge.n	402c8c <_svfprintf_r+0x1314>
  402c2c:	2410      	movs	r4, #16
  402c2e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402c32:	e004      	b.n	402c3e <_svfprintf_r+0x12c6>
  402c34:	f108 0808 	add.w	r8, r8, #8
  402c38:	3f10      	subs	r7, #16
  402c3a:	2f10      	cmp	r7, #16
  402c3c:	dd26      	ble.n	402c8c <_svfprintf_r+0x1314>
  402c3e:	3301      	adds	r3, #1
  402c40:	3210      	adds	r2, #16
  402c42:	2b07      	cmp	r3, #7
  402c44:	9227      	str	r2, [sp, #156]	; 0x9c
  402c46:	9326      	str	r3, [sp, #152]	; 0x98
  402c48:	f8c8 5000 	str.w	r5, [r8]
  402c4c:	f8c8 4004 	str.w	r4, [r8, #4]
  402c50:	ddf0      	ble.n	402c34 <_svfprintf_r+0x12bc>
  402c52:	aa25      	add	r2, sp, #148	; 0x94
  402c54:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c56:	4658      	mov	r0, fp
  402c58:	f001 ffe0 	bl	404c1c <__ssprint_r>
  402c5c:	2800      	cmp	r0, #0
  402c5e:	f47e af5d 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402c62:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402c64:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c66:	46c8      	mov	r8, r9
  402c68:	e7e6      	b.n	402c38 <_svfprintf_r+0x12c0>
  402c6a:	aa25      	add	r2, sp, #148	; 0x94
  402c6c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c6e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c70:	f001 ffd4 	bl	404c1c <__ssprint_r>
  402c74:	2800      	cmp	r0, #0
  402c76:	f47e af51 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402c7a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402c7c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402c7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c80:	46c8      	mov	r8, r9
  402c82:	e667      	b.n	402954 <_svfprintf_r+0xfdc>
  402c84:	2000      	movs	r0, #0
  402c86:	900a      	str	r0, [sp, #40]	; 0x28
  402c88:	f7fe bed0 	b.w	401a2c <_svfprintf_r+0xb4>
  402c8c:	3301      	adds	r3, #1
  402c8e:	443a      	add	r2, r7
  402c90:	2b07      	cmp	r3, #7
  402c92:	e888 00a0 	stmia.w	r8, {r5, r7}
  402c96:	9227      	str	r2, [sp, #156]	; 0x9c
  402c98:	9326      	str	r3, [sp, #152]	; 0x98
  402c9a:	f108 0808 	add.w	r8, r8, #8
  402c9e:	f77f ae5c 	ble.w	40295a <_svfprintf_r+0xfe2>
  402ca2:	aa25      	add	r2, sp, #148	; 0x94
  402ca4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ca6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ca8:	f001 ffb8 	bl	404c1c <__ssprint_r>
  402cac:	2800      	cmp	r0, #0
  402cae:	f47e af35 	bne.w	401b1c <_svfprintf_r+0x1a4>
  402cb2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402cb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402cb6:	46c8      	mov	r8, r9
  402cb8:	e64f      	b.n	40295a <_svfprintf_r+0xfe2>
  402cba:	3330      	adds	r3, #48	; 0x30
  402cbc:	2230      	movs	r2, #48	; 0x30
  402cbe:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  402cc2:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  402cc6:	ab22      	add	r3, sp, #136	; 0x88
  402cc8:	e70f      	b.n	402aea <_svfprintf_r+0x1172>
  402cca:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ccc:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402cce:	4413      	add	r3, r2
  402cd0:	930e      	str	r3, [sp, #56]	; 0x38
  402cd2:	e775      	b.n	402bc0 <_svfprintf_r+0x1248>
  402cd4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402cd6:	e5cb      	b.n	402870 <_svfprintf_r+0xef8>
  402cd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402cda:	4e1d      	ldr	r6, [pc, #116]	; (402d50 <_svfprintf_r+0x13d8>)
  402cdc:	2b00      	cmp	r3, #0
  402cde:	bfb6      	itet	lt
  402ce0:	272d      	movlt	r7, #45	; 0x2d
  402ce2:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  402ce6:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  402cea:	4b1a      	ldr	r3, [pc, #104]	; (402d54 <_svfprintf_r+0x13dc>)
  402cec:	f7ff ba2f 	b.w	40214e <_svfprintf_r+0x7d6>
  402cf0:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402cf2:	9808      	ldr	r0, [sp, #32]
  402cf4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402cf6:	4639      	mov	r1, r7
  402cf8:	f003 f824 	bl	405d44 <__aeabi_dcmpeq>
  402cfc:	2800      	cmp	r0, #0
  402cfe:	f47f ae7f 	bne.w	402a00 <_svfprintf_r+0x1088>
  402d02:	f1c5 0501 	rsb	r5, r5, #1
  402d06:	951f      	str	r5, [sp, #124]	; 0x7c
  402d08:	442c      	add	r4, r5
  402d0a:	e59e      	b.n	40284a <_svfprintf_r+0xed2>
  402d0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d0e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402d10:	4413      	add	r3, r2
  402d12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402d14:	441a      	add	r2, r3
  402d16:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402d1a:	920e      	str	r2, [sp, #56]	; 0x38
  402d1c:	9308      	str	r3, [sp, #32]
  402d1e:	e5c7      	b.n	4028b0 <_svfprintf_r+0xf38>
  402d20:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d22:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402d24:	f1c3 0301 	rsb	r3, r3, #1
  402d28:	441a      	add	r2, r3
  402d2a:	4613      	mov	r3, r2
  402d2c:	e7d0      	b.n	402cd0 <_svfprintf_r+0x1358>
  402d2e:	f01b 0301 	ands.w	r3, fp, #1
  402d32:	9312      	str	r3, [sp, #72]	; 0x48
  402d34:	f47f aee2 	bne.w	402afc <_svfprintf_r+0x1184>
  402d38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402d3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402d3e:	9308      	str	r3, [sp, #32]
  402d40:	e5b6      	b.n	4028b0 <_svfprintf_r+0xf38>
  402d42:	bf00      	nop
  402d44:	66666667 	.word	0x66666667
  402d48:	00406bc0 	.word	0x00406bc0
  402d4c:	00406bdc 	.word	0x00406bdc
  402d50:	00406b94 	.word	0x00406b94
  402d54:	00406b90 	.word	0x00406b90
  402d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d5a:	b913      	cbnz	r3, 402d62 <_svfprintf_r+0x13ea>
  402d5c:	f01b 0f01 	tst.w	fp, #1
  402d60:	d002      	beq.n	402d68 <_svfprintf_r+0x13f0>
  402d62:	9b19      	ldr	r3, [sp, #100]	; 0x64
  402d64:	3301      	adds	r3, #1
  402d66:	e7d4      	b.n	402d12 <_svfprintf_r+0x139a>
  402d68:	2301      	movs	r3, #1
  402d6a:	e73a      	b.n	402be2 <_svfprintf_r+0x126a>
  402d6c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402d6e:	f89a 3001 	ldrb.w	r3, [sl, #1]
  402d72:	6828      	ldr	r0, [r5, #0]
  402d74:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  402d78:	900a      	str	r0, [sp, #40]	; 0x28
  402d7a:	4628      	mov	r0, r5
  402d7c:	3004      	adds	r0, #4
  402d7e:	46a2      	mov	sl, r4
  402d80:	900f      	str	r0, [sp, #60]	; 0x3c
  402d82:	f7fe be51 	b.w	401a28 <_svfprintf_r+0xb0>
  402d86:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402d8a:	f7ff b867 	b.w	401e5c <_svfprintf_r+0x4e4>
  402d8e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402d92:	f7ff ba15 	b.w	4021c0 <_svfprintf_r+0x848>
  402d96:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  402d9a:	e6a6      	b.n	402aea <_svfprintf_r+0x1172>
  402d9c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402da0:	f7ff b8eb 	b.w	401f7a <_svfprintf_r+0x602>
  402da4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402da6:	230c      	movs	r3, #12
  402da8:	6013      	str	r3, [r2, #0]
  402daa:	f04f 33ff 	mov.w	r3, #4294967295
  402dae:	9309      	str	r3, [sp, #36]	; 0x24
  402db0:	f7fe bebd 	b.w	401b2e <_svfprintf_r+0x1b6>
  402db4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402db8:	f7ff b99a 	b.w	4020f0 <_svfprintf_r+0x778>
  402dbc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402dc0:	f7ff b976 	b.w	4020b0 <_svfprintf_r+0x738>
  402dc4:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402dc8:	f7ff b959 	b.w	40207e <_svfprintf_r+0x706>
  402dcc:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402dd0:	f7ff b912 	b.w	401ff8 <_svfprintf_r+0x680>

00402dd4 <register_fini>:
  402dd4:	4b02      	ldr	r3, [pc, #8]	; (402de0 <register_fini+0xc>)
  402dd6:	b113      	cbz	r3, 402dde <register_fini+0xa>
  402dd8:	4802      	ldr	r0, [pc, #8]	; (402de4 <register_fini+0x10>)
  402dda:	f000 b805 	b.w	402de8 <atexit>
  402dde:	4770      	bx	lr
  402de0:	00000000 	.word	0x00000000
  402de4:	00403d75 	.word	0x00403d75

00402de8 <atexit>:
  402de8:	2300      	movs	r3, #0
  402dea:	4601      	mov	r1, r0
  402dec:	461a      	mov	r2, r3
  402dee:	4618      	mov	r0, r3
  402df0:	f001 bf92 	b.w	404d18 <__register_exitproc>

00402df4 <quorem>:
  402df4:	6902      	ldr	r2, [r0, #16]
  402df6:	690b      	ldr	r3, [r1, #16]
  402df8:	4293      	cmp	r3, r2
  402dfa:	f300 808d 	bgt.w	402f18 <quorem+0x124>
  402dfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402e02:	f103 38ff 	add.w	r8, r3, #4294967295
  402e06:	f101 0714 	add.w	r7, r1, #20
  402e0a:	f100 0b14 	add.w	fp, r0, #20
  402e0e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  402e12:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  402e16:	ea4f 0488 	mov.w	r4, r8, lsl #2
  402e1a:	b083      	sub	sp, #12
  402e1c:	3201      	adds	r2, #1
  402e1e:	fbb3 f9f2 	udiv	r9, r3, r2
  402e22:	eb0b 0304 	add.w	r3, fp, r4
  402e26:	9400      	str	r4, [sp, #0]
  402e28:	eb07 0a04 	add.w	sl, r7, r4
  402e2c:	9301      	str	r3, [sp, #4]
  402e2e:	f1b9 0f00 	cmp.w	r9, #0
  402e32:	d039      	beq.n	402ea8 <quorem+0xb4>
  402e34:	2500      	movs	r5, #0
  402e36:	462e      	mov	r6, r5
  402e38:	46bc      	mov	ip, r7
  402e3a:	46de      	mov	lr, fp
  402e3c:	f85c 4b04 	ldr.w	r4, [ip], #4
  402e40:	f8de 3000 	ldr.w	r3, [lr]
  402e44:	b2a2      	uxth	r2, r4
  402e46:	fb09 5502 	mla	r5, r9, r2, r5
  402e4a:	0c22      	lsrs	r2, r4, #16
  402e4c:	0c2c      	lsrs	r4, r5, #16
  402e4e:	fb09 4202 	mla	r2, r9, r2, r4
  402e52:	b2ad      	uxth	r5, r5
  402e54:	1b75      	subs	r5, r6, r5
  402e56:	b296      	uxth	r6, r2
  402e58:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  402e5c:	fa15 f383 	uxtah	r3, r5, r3
  402e60:	eb06 4623 	add.w	r6, r6, r3, asr #16
  402e64:	b29b      	uxth	r3, r3
  402e66:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  402e6a:	45e2      	cmp	sl, ip
  402e6c:	ea4f 4512 	mov.w	r5, r2, lsr #16
  402e70:	f84e 3b04 	str.w	r3, [lr], #4
  402e74:	ea4f 4626 	mov.w	r6, r6, asr #16
  402e78:	d2e0      	bcs.n	402e3c <quorem+0x48>
  402e7a:	9b00      	ldr	r3, [sp, #0]
  402e7c:	f85b 3003 	ldr.w	r3, [fp, r3]
  402e80:	b993      	cbnz	r3, 402ea8 <quorem+0xb4>
  402e82:	9c01      	ldr	r4, [sp, #4]
  402e84:	1f23      	subs	r3, r4, #4
  402e86:	459b      	cmp	fp, r3
  402e88:	d20c      	bcs.n	402ea4 <quorem+0xb0>
  402e8a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  402e8e:	b94b      	cbnz	r3, 402ea4 <quorem+0xb0>
  402e90:	f1a4 0308 	sub.w	r3, r4, #8
  402e94:	e002      	b.n	402e9c <quorem+0xa8>
  402e96:	681a      	ldr	r2, [r3, #0]
  402e98:	3b04      	subs	r3, #4
  402e9a:	b91a      	cbnz	r2, 402ea4 <quorem+0xb0>
  402e9c:	459b      	cmp	fp, r3
  402e9e:	f108 38ff 	add.w	r8, r8, #4294967295
  402ea2:	d3f8      	bcc.n	402e96 <quorem+0xa2>
  402ea4:	f8c0 8010 	str.w	r8, [r0, #16]
  402ea8:	4604      	mov	r4, r0
  402eaa:	f001 fd35 	bl	404918 <__mcmp>
  402eae:	2800      	cmp	r0, #0
  402eb0:	db2e      	blt.n	402f10 <quorem+0x11c>
  402eb2:	f109 0901 	add.w	r9, r9, #1
  402eb6:	465d      	mov	r5, fp
  402eb8:	2300      	movs	r3, #0
  402eba:	f857 1b04 	ldr.w	r1, [r7], #4
  402ebe:	6828      	ldr	r0, [r5, #0]
  402ec0:	b28a      	uxth	r2, r1
  402ec2:	1a9a      	subs	r2, r3, r2
  402ec4:	0c0b      	lsrs	r3, r1, #16
  402ec6:	fa12 f280 	uxtah	r2, r2, r0
  402eca:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  402ece:	eb03 4322 	add.w	r3, r3, r2, asr #16
  402ed2:	b292      	uxth	r2, r2
  402ed4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  402ed8:	45ba      	cmp	sl, r7
  402eda:	f845 2b04 	str.w	r2, [r5], #4
  402ede:	ea4f 4323 	mov.w	r3, r3, asr #16
  402ee2:	d2ea      	bcs.n	402eba <quorem+0xc6>
  402ee4:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  402ee8:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  402eec:	b982      	cbnz	r2, 402f10 <quorem+0x11c>
  402eee:	1f1a      	subs	r2, r3, #4
  402ef0:	4593      	cmp	fp, r2
  402ef2:	d20b      	bcs.n	402f0c <quorem+0x118>
  402ef4:	f853 2c04 	ldr.w	r2, [r3, #-4]
  402ef8:	b942      	cbnz	r2, 402f0c <quorem+0x118>
  402efa:	3b08      	subs	r3, #8
  402efc:	e002      	b.n	402f04 <quorem+0x110>
  402efe:	681a      	ldr	r2, [r3, #0]
  402f00:	3b04      	subs	r3, #4
  402f02:	b91a      	cbnz	r2, 402f0c <quorem+0x118>
  402f04:	459b      	cmp	fp, r3
  402f06:	f108 38ff 	add.w	r8, r8, #4294967295
  402f0a:	d3f8      	bcc.n	402efe <quorem+0x10a>
  402f0c:	f8c4 8010 	str.w	r8, [r4, #16]
  402f10:	4648      	mov	r0, r9
  402f12:	b003      	add	sp, #12
  402f14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f18:	2000      	movs	r0, #0
  402f1a:	4770      	bx	lr
  402f1c:	0000      	movs	r0, r0
	...

00402f20 <_dtoa_r>:
  402f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402f24:	6c01      	ldr	r1, [r0, #64]	; 0x40
  402f26:	b09b      	sub	sp, #108	; 0x6c
  402f28:	4604      	mov	r4, r0
  402f2a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  402f2c:	4692      	mov	sl, r2
  402f2e:	469b      	mov	fp, r3
  402f30:	b141      	cbz	r1, 402f44 <_dtoa_r+0x24>
  402f32:	6c42      	ldr	r2, [r0, #68]	; 0x44
  402f34:	604a      	str	r2, [r1, #4]
  402f36:	2301      	movs	r3, #1
  402f38:	4093      	lsls	r3, r2
  402f3a:	608b      	str	r3, [r1, #8]
  402f3c:	f001 fb14 	bl	404568 <_Bfree>
  402f40:	2300      	movs	r3, #0
  402f42:	6423      	str	r3, [r4, #64]	; 0x40
  402f44:	f1bb 0f00 	cmp.w	fp, #0
  402f48:	465d      	mov	r5, fp
  402f4a:	db35      	blt.n	402fb8 <_dtoa_r+0x98>
  402f4c:	2300      	movs	r3, #0
  402f4e:	6033      	str	r3, [r6, #0]
  402f50:	4b9d      	ldr	r3, [pc, #628]	; (4031c8 <_dtoa_r+0x2a8>)
  402f52:	43ab      	bics	r3, r5
  402f54:	d015      	beq.n	402f82 <_dtoa_r+0x62>
  402f56:	4650      	mov	r0, sl
  402f58:	4659      	mov	r1, fp
  402f5a:	2200      	movs	r2, #0
  402f5c:	2300      	movs	r3, #0
  402f5e:	f002 fef1 	bl	405d44 <__aeabi_dcmpeq>
  402f62:	4680      	mov	r8, r0
  402f64:	2800      	cmp	r0, #0
  402f66:	d02d      	beq.n	402fc4 <_dtoa_r+0xa4>
  402f68:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402f6a:	2301      	movs	r3, #1
  402f6c:	6013      	str	r3, [r2, #0]
  402f6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  402f70:	2b00      	cmp	r3, #0
  402f72:	f000 80bd 	beq.w	4030f0 <_dtoa_r+0x1d0>
  402f76:	4895      	ldr	r0, [pc, #596]	; (4031cc <_dtoa_r+0x2ac>)
  402f78:	6018      	str	r0, [r3, #0]
  402f7a:	3801      	subs	r0, #1
  402f7c:	b01b      	add	sp, #108	; 0x6c
  402f7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402f82:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402f84:	f242 730f 	movw	r3, #9999	; 0x270f
  402f88:	6013      	str	r3, [r2, #0]
  402f8a:	f1ba 0f00 	cmp.w	sl, #0
  402f8e:	d10d      	bne.n	402fac <_dtoa_r+0x8c>
  402f90:	f3c5 0513 	ubfx	r5, r5, #0, #20
  402f94:	b955      	cbnz	r5, 402fac <_dtoa_r+0x8c>
  402f96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  402f98:	488d      	ldr	r0, [pc, #564]	; (4031d0 <_dtoa_r+0x2b0>)
  402f9a:	2b00      	cmp	r3, #0
  402f9c:	d0ee      	beq.n	402f7c <_dtoa_r+0x5c>
  402f9e:	f100 0308 	add.w	r3, r0, #8
  402fa2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  402fa4:	6013      	str	r3, [r2, #0]
  402fa6:	b01b      	add	sp, #108	; 0x6c
  402fa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402fac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  402fae:	4889      	ldr	r0, [pc, #548]	; (4031d4 <_dtoa_r+0x2b4>)
  402fb0:	2b00      	cmp	r3, #0
  402fb2:	d0e3      	beq.n	402f7c <_dtoa_r+0x5c>
  402fb4:	1cc3      	adds	r3, r0, #3
  402fb6:	e7f4      	b.n	402fa2 <_dtoa_r+0x82>
  402fb8:	2301      	movs	r3, #1
  402fba:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  402fbe:	6033      	str	r3, [r6, #0]
  402fc0:	46ab      	mov	fp, r5
  402fc2:	e7c5      	b.n	402f50 <_dtoa_r+0x30>
  402fc4:	aa18      	add	r2, sp, #96	; 0x60
  402fc6:	ab19      	add	r3, sp, #100	; 0x64
  402fc8:	9201      	str	r2, [sp, #4]
  402fca:	9300      	str	r3, [sp, #0]
  402fcc:	4652      	mov	r2, sl
  402fce:	465b      	mov	r3, fp
  402fd0:	4620      	mov	r0, r4
  402fd2:	f001 fd41 	bl	404a58 <__d2b>
  402fd6:	0d2b      	lsrs	r3, r5, #20
  402fd8:	4681      	mov	r9, r0
  402fda:	d071      	beq.n	4030c0 <_dtoa_r+0x1a0>
  402fdc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  402fe0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  402fe4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  402fe6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  402fea:	4650      	mov	r0, sl
  402fec:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  402ff0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  402ff4:	2200      	movs	r2, #0
  402ff6:	4b78      	ldr	r3, [pc, #480]	; (4031d8 <_dtoa_r+0x2b8>)
  402ff8:	f002 fa88 	bl	40550c <__aeabi_dsub>
  402ffc:	a36c      	add	r3, pc, #432	; (adr r3, 4031b0 <_dtoa_r+0x290>)
  402ffe:	e9d3 2300 	ldrd	r2, r3, [r3]
  403002:	f002 fc37 	bl	405874 <__aeabi_dmul>
  403006:	a36c      	add	r3, pc, #432	; (adr r3, 4031b8 <_dtoa_r+0x298>)
  403008:	e9d3 2300 	ldrd	r2, r3, [r3]
  40300c:	f002 fa80 	bl	405510 <__adddf3>
  403010:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403014:	4630      	mov	r0, r6
  403016:	f002 fbc7 	bl	4057a8 <__aeabi_i2d>
  40301a:	a369      	add	r3, pc, #420	; (adr r3, 4031c0 <_dtoa_r+0x2a0>)
  40301c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403020:	f002 fc28 	bl	405874 <__aeabi_dmul>
  403024:	4602      	mov	r2, r0
  403026:	460b      	mov	r3, r1
  403028:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40302c:	f002 fa70 	bl	405510 <__adddf3>
  403030:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403034:	f002 fece 	bl	405dd4 <__aeabi_d2iz>
  403038:	2200      	movs	r2, #0
  40303a:	9002      	str	r0, [sp, #8]
  40303c:	2300      	movs	r3, #0
  40303e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403042:	f002 fe89 	bl	405d58 <__aeabi_dcmplt>
  403046:	2800      	cmp	r0, #0
  403048:	f040 8173 	bne.w	403332 <_dtoa_r+0x412>
  40304c:	9d02      	ldr	r5, [sp, #8]
  40304e:	2d16      	cmp	r5, #22
  403050:	f200 815d 	bhi.w	40330e <_dtoa_r+0x3ee>
  403054:	4b61      	ldr	r3, [pc, #388]	; (4031dc <_dtoa_r+0x2bc>)
  403056:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40305a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40305e:	4652      	mov	r2, sl
  403060:	465b      	mov	r3, fp
  403062:	f002 fe97 	bl	405d94 <__aeabi_dcmpgt>
  403066:	2800      	cmp	r0, #0
  403068:	f000 81c5 	beq.w	4033f6 <_dtoa_r+0x4d6>
  40306c:	1e6b      	subs	r3, r5, #1
  40306e:	9302      	str	r3, [sp, #8]
  403070:	2300      	movs	r3, #0
  403072:	930e      	str	r3, [sp, #56]	; 0x38
  403074:	1bbf      	subs	r7, r7, r6
  403076:	1e7b      	subs	r3, r7, #1
  403078:	9306      	str	r3, [sp, #24]
  40307a:	f100 8154 	bmi.w	403326 <_dtoa_r+0x406>
  40307e:	2300      	movs	r3, #0
  403080:	9308      	str	r3, [sp, #32]
  403082:	9b02      	ldr	r3, [sp, #8]
  403084:	2b00      	cmp	r3, #0
  403086:	f2c0 8145 	blt.w	403314 <_dtoa_r+0x3f4>
  40308a:	9a06      	ldr	r2, [sp, #24]
  40308c:	930d      	str	r3, [sp, #52]	; 0x34
  40308e:	4611      	mov	r1, r2
  403090:	4419      	add	r1, r3
  403092:	2300      	movs	r3, #0
  403094:	9106      	str	r1, [sp, #24]
  403096:	930c      	str	r3, [sp, #48]	; 0x30
  403098:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40309a:	2b09      	cmp	r3, #9
  40309c:	d82a      	bhi.n	4030f4 <_dtoa_r+0x1d4>
  40309e:	2b05      	cmp	r3, #5
  4030a0:	f340 865b 	ble.w	403d5a <_dtoa_r+0xe3a>
  4030a4:	3b04      	subs	r3, #4
  4030a6:	9324      	str	r3, [sp, #144]	; 0x90
  4030a8:	2500      	movs	r5, #0
  4030aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4030ac:	3b02      	subs	r3, #2
  4030ae:	2b03      	cmp	r3, #3
  4030b0:	f200 8642 	bhi.w	403d38 <_dtoa_r+0xe18>
  4030b4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4030b8:	02c903d4 	.word	0x02c903d4
  4030bc:	046103df 	.word	0x046103df
  4030c0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4030c2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4030c4:	443e      	add	r6, r7
  4030c6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4030ca:	2b20      	cmp	r3, #32
  4030cc:	f340 818e 	ble.w	4033ec <_dtoa_r+0x4cc>
  4030d0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4030d4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4030d8:	409d      	lsls	r5, r3
  4030da:	fa2a f000 	lsr.w	r0, sl, r0
  4030de:	4328      	orrs	r0, r5
  4030e0:	f002 fb52 	bl	405788 <__aeabi_ui2d>
  4030e4:	2301      	movs	r3, #1
  4030e6:	3e01      	subs	r6, #1
  4030e8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4030ec:	9314      	str	r3, [sp, #80]	; 0x50
  4030ee:	e781      	b.n	402ff4 <_dtoa_r+0xd4>
  4030f0:	483b      	ldr	r0, [pc, #236]	; (4031e0 <_dtoa_r+0x2c0>)
  4030f2:	e743      	b.n	402f7c <_dtoa_r+0x5c>
  4030f4:	2100      	movs	r1, #0
  4030f6:	6461      	str	r1, [r4, #68]	; 0x44
  4030f8:	4620      	mov	r0, r4
  4030fa:	9125      	str	r1, [sp, #148]	; 0x94
  4030fc:	f001 fa0e 	bl	40451c <_Balloc>
  403100:	f04f 33ff 	mov.w	r3, #4294967295
  403104:	930a      	str	r3, [sp, #40]	; 0x28
  403106:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403108:	930f      	str	r3, [sp, #60]	; 0x3c
  40310a:	2301      	movs	r3, #1
  40310c:	9004      	str	r0, [sp, #16]
  40310e:	6420      	str	r0, [r4, #64]	; 0x40
  403110:	9224      	str	r2, [sp, #144]	; 0x90
  403112:	930b      	str	r3, [sp, #44]	; 0x2c
  403114:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403116:	2b00      	cmp	r3, #0
  403118:	f2c0 80d9 	blt.w	4032ce <_dtoa_r+0x3ae>
  40311c:	9a02      	ldr	r2, [sp, #8]
  40311e:	2a0e      	cmp	r2, #14
  403120:	f300 80d5 	bgt.w	4032ce <_dtoa_r+0x3ae>
  403124:	4b2d      	ldr	r3, [pc, #180]	; (4031dc <_dtoa_r+0x2bc>)
  403126:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40312a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40312e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403132:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403134:	2b00      	cmp	r3, #0
  403136:	f2c0 83ba 	blt.w	4038ae <_dtoa_r+0x98e>
  40313a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  40313e:	4650      	mov	r0, sl
  403140:	462a      	mov	r2, r5
  403142:	4633      	mov	r3, r6
  403144:	4659      	mov	r1, fp
  403146:	f002 fcbf 	bl	405ac8 <__aeabi_ddiv>
  40314a:	f002 fe43 	bl	405dd4 <__aeabi_d2iz>
  40314e:	4680      	mov	r8, r0
  403150:	f002 fb2a 	bl	4057a8 <__aeabi_i2d>
  403154:	462a      	mov	r2, r5
  403156:	4633      	mov	r3, r6
  403158:	f002 fb8c 	bl	405874 <__aeabi_dmul>
  40315c:	460b      	mov	r3, r1
  40315e:	4602      	mov	r2, r0
  403160:	4659      	mov	r1, fp
  403162:	4650      	mov	r0, sl
  403164:	f002 f9d2 	bl	40550c <__aeabi_dsub>
  403168:	9d04      	ldr	r5, [sp, #16]
  40316a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  40316e:	702b      	strb	r3, [r5, #0]
  403170:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403172:	2b01      	cmp	r3, #1
  403174:	4606      	mov	r6, r0
  403176:	460f      	mov	r7, r1
  403178:	f105 0501 	add.w	r5, r5, #1
  40317c:	d068      	beq.n	403250 <_dtoa_r+0x330>
  40317e:	2200      	movs	r2, #0
  403180:	4b18      	ldr	r3, [pc, #96]	; (4031e4 <_dtoa_r+0x2c4>)
  403182:	f002 fb77 	bl	405874 <__aeabi_dmul>
  403186:	2200      	movs	r2, #0
  403188:	2300      	movs	r3, #0
  40318a:	4606      	mov	r6, r0
  40318c:	460f      	mov	r7, r1
  40318e:	f002 fdd9 	bl	405d44 <__aeabi_dcmpeq>
  403192:	2800      	cmp	r0, #0
  403194:	f040 8088 	bne.w	4032a8 <_dtoa_r+0x388>
  403198:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40319c:	f04f 0a00 	mov.w	sl, #0
  4031a0:	f8df b040 	ldr.w	fp, [pc, #64]	; 4031e4 <_dtoa_r+0x2c4>
  4031a4:	940c      	str	r4, [sp, #48]	; 0x30
  4031a6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  4031aa:	e028      	b.n	4031fe <_dtoa_r+0x2de>
  4031ac:	f3af 8000 	nop.w
  4031b0:	636f4361 	.word	0x636f4361
  4031b4:	3fd287a7 	.word	0x3fd287a7
  4031b8:	8b60c8b3 	.word	0x8b60c8b3
  4031bc:	3fc68a28 	.word	0x3fc68a28
  4031c0:	509f79fb 	.word	0x509f79fb
  4031c4:	3fd34413 	.word	0x3fd34413
  4031c8:	7ff00000 	.word	0x7ff00000
  4031cc:	00406bc9 	.word	0x00406bc9
  4031d0:	00406bec 	.word	0x00406bec
  4031d4:	00406bf8 	.word	0x00406bf8
  4031d8:	3ff80000 	.word	0x3ff80000
  4031dc:	00406c28 	.word	0x00406c28
  4031e0:	00406bc8 	.word	0x00406bc8
  4031e4:	40240000 	.word	0x40240000
  4031e8:	f002 fb44 	bl	405874 <__aeabi_dmul>
  4031ec:	2200      	movs	r2, #0
  4031ee:	2300      	movs	r3, #0
  4031f0:	4606      	mov	r6, r0
  4031f2:	460f      	mov	r7, r1
  4031f4:	f002 fda6 	bl	405d44 <__aeabi_dcmpeq>
  4031f8:	2800      	cmp	r0, #0
  4031fa:	f040 83c1 	bne.w	403980 <_dtoa_r+0xa60>
  4031fe:	4642      	mov	r2, r8
  403200:	464b      	mov	r3, r9
  403202:	4630      	mov	r0, r6
  403204:	4639      	mov	r1, r7
  403206:	f002 fc5f 	bl	405ac8 <__aeabi_ddiv>
  40320a:	f002 fde3 	bl	405dd4 <__aeabi_d2iz>
  40320e:	4604      	mov	r4, r0
  403210:	f002 faca 	bl	4057a8 <__aeabi_i2d>
  403214:	4642      	mov	r2, r8
  403216:	464b      	mov	r3, r9
  403218:	f002 fb2c 	bl	405874 <__aeabi_dmul>
  40321c:	4602      	mov	r2, r0
  40321e:	460b      	mov	r3, r1
  403220:	4630      	mov	r0, r6
  403222:	4639      	mov	r1, r7
  403224:	f002 f972 	bl	40550c <__aeabi_dsub>
  403228:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  40322c:	9e04      	ldr	r6, [sp, #16]
  40322e:	f805 eb01 	strb.w	lr, [r5], #1
  403232:	eba5 0e06 	sub.w	lr, r5, r6
  403236:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403238:	45b6      	cmp	lr, r6
  40323a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  40323e:	4652      	mov	r2, sl
  403240:	465b      	mov	r3, fp
  403242:	d1d1      	bne.n	4031e8 <_dtoa_r+0x2c8>
  403244:	46a0      	mov	r8, r4
  403246:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  40324a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40324c:	4606      	mov	r6, r0
  40324e:	460f      	mov	r7, r1
  403250:	4632      	mov	r2, r6
  403252:	463b      	mov	r3, r7
  403254:	4630      	mov	r0, r6
  403256:	4639      	mov	r1, r7
  403258:	f002 f95a 	bl	405510 <__adddf3>
  40325c:	4606      	mov	r6, r0
  40325e:	460f      	mov	r7, r1
  403260:	4602      	mov	r2, r0
  403262:	460b      	mov	r3, r1
  403264:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403268:	f002 fd76 	bl	405d58 <__aeabi_dcmplt>
  40326c:	b948      	cbnz	r0, 403282 <_dtoa_r+0x362>
  40326e:	4632      	mov	r2, r6
  403270:	463b      	mov	r3, r7
  403272:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403276:	f002 fd65 	bl	405d44 <__aeabi_dcmpeq>
  40327a:	b1a8      	cbz	r0, 4032a8 <_dtoa_r+0x388>
  40327c:	f018 0f01 	tst.w	r8, #1
  403280:	d012      	beq.n	4032a8 <_dtoa_r+0x388>
  403282:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403286:	9a04      	ldr	r2, [sp, #16]
  403288:	1e6b      	subs	r3, r5, #1
  40328a:	e004      	b.n	403296 <_dtoa_r+0x376>
  40328c:	429a      	cmp	r2, r3
  40328e:	f000 8401 	beq.w	403a94 <_dtoa_r+0xb74>
  403292:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403296:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40329a:	f103 0501 	add.w	r5, r3, #1
  40329e:	d0f5      	beq.n	40328c <_dtoa_r+0x36c>
  4032a0:	f108 0801 	add.w	r8, r8, #1
  4032a4:	f883 8000 	strb.w	r8, [r3]
  4032a8:	4649      	mov	r1, r9
  4032aa:	4620      	mov	r0, r4
  4032ac:	f001 f95c 	bl	404568 <_Bfree>
  4032b0:	2200      	movs	r2, #0
  4032b2:	9b02      	ldr	r3, [sp, #8]
  4032b4:	702a      	strb	r2, [r5, #0]
  4032b6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4032b8:	3301      	adds	r3, #1
  4032ba:	6013      	str	r3, [r2, #0]
  4032bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4032be:	2b00      	cmp	r3, #0
  4032c0:	f000 839e 	beq.w	403a00 <_dtoa_r+0xae0>
  4032c4:	9804      	ldr	r0, [sp, #16]
  4032c6:	601d      	str	r5, [r3, #0]
  4032c8:	b01b      	add	sp, #108	; 0x6c
  4032ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4032ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4032d0:	2a00      	cmp	r2, #0
  4032d2:	d03e      	beq.n	403352 <_dtoa_r+0x432>
  4032d4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4032d6:	2a01      	cmp	r2, #1
  4032d8:	f340 8311 	ble.w	4038fe <_dtoa_r+0x9de>
  4032dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4032de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4032e0:	1e5f      	subs	r7, r3, #1
  4032e2:	42ba      	cmp	r2, r7
  4032e4:	f2c0 838f 	blt.w	403a06 <_dtoa_r+0xae6>
  4032e8:	1bd7      	subs	r7, r2, r7
  4032ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4032ec:	2b00      	cmp	r3, #0
  4032ee:	f2c0 848b 	blt.w	403c08 <_dtoa_r+0xce8>
  4032f2:	9d08      	ldr	r5, [sp, #32]
  4032f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4032f6:	9a08      	ldr	r2, [sp, #32]
  4032f8:	441a      	add	r2, r3
  4032fa:	9208      	str	r2, [sp, #32]
  4032fc:	9a06      	ldr	r2, [sp, #24]
  4032fe:	2101      	movs	r1, #1
  403300:	441a      	add	r2, r3
  403302:	4620      	mov	r0, r4
  403304:	9206      	str	r2, [sp, #24]
  403306:	f001 f9c9 	bl	40469c <__i2b>
  40330a:	4606      	mov	r6, r0
  40330c:	e024      	b.n	403358 <_dtoa_r+0x438>
  40330e:	2301      	movs	r3, #1
  403310:	930e      	str	r3, [sp, #56]	; 0x38
  403312:	e6af      	b.n	403074 <_dtoa_r+0x154>
  403314:	9a08      	ldr	r2, [sp, #32]
  403316:	9b02      	ldr	r3, [sp, #8]
  403318:	1ad2      	subs	r2, r2, r3
  40331a:	425b      	negs	r3, r3
  40331c:	930c      	str	r3, [sp, #48]	; 0x30
  40331e:	2300      	movs	r3, #0
  403320:	9208      	str	r2, [sp, #32]
  403322:	930d      	str	r3, [sp, #52]	; 0x34
  403324:	e6b8      	b.n	403098 <_dtoa_r+0x178>
  403326:	f1c7 0301 	rsb	r3, r7, #1
  40332a:	9308      	str	r3, [sp, #32]
  40332c:	2300      	movs	r3, #0
  40332e:	9306      	str	r3, [sp, #24]
  403330:	e6a7      	b.n	403082 <_dtoa_r+0x162>
  403332:	9d02      	ldr	r5, [sp, #8]
  403334:	4628      	mov	r0, r5
  403336:	f002 fa37 	bl	4057a8 <__aeabi_i2d>
  40333a:	4602      	mov	r2, r0
  40333c:	460b      	mov	r3, r1
  40333e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403342:	f002 fcff 	bl	405d44 <__aeabi_dcmpeq>
  403346:	2800      	cmp	r0, #0
  403348:	f47f ae80 	bne.w	40304c <_dtoa_r+0x12c>
  40334c:	1e6b      	subs	r3, r5, #1
  40334e:	9302      	str	r3, [sp, #8]
  403350:	e67c      	b.n	40304c <_dtoa_r+0x12c>
  403352:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403354:	9d08      	ldr	r5, [sp, #32]
  403356:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403358:	2d00      	cmp	r5, #0
  40335a:	dd0c      	ble.n	403376 <_dtoa_r+0x456>
  40335c:	9906      	ldr	r1, [sp, #24]
  40335e:	2900      	cmp	r1, #0
  403360:	460b      	mov	r3, r1
  403362:	dd08      	ble.n	403376 <_dtoa_r+0x456>
  403364:	42a9      	cmp	r1, r5
  403366:	9a08      	ldr	r2, [sp, #32]
  403368:	bfa8      	it	ge
  40336a:	462b      	movge	r3, r5
  40336c:	1ad2      	subs	r2, r2, r3
  40336e:	1aed      	subs	r5, r5, r3
  403370:	1acb      	subs	r3, r1, r3
  403372:	9208      	str	r2, [sp, #32]
  403374:	9306      	str	r3, [sp, #24]
  403376:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403378:	b1d3      	cbz	r3, 4033b0 <_dtoa_r+0x490>
  40337a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40337c:	2b00      	cmp	r3, #0
  40337e:	f000 82b7 	beq.w	4038f0 <_dtoa_r+0x9d0>
  403382:	2f00      	cmp	r7, #0
  403384:	dd10      	ble.n	4033a8 <_dtoa_r+0x488>
  403386:	4631      	mov	r1, r6
  403388:	463a      	mov	r2, r7
  40338a:	4620      	mov	r0, r4
  40338c:	f001 fa22 	bl	4047d4 <__pow5mult>
  403390:	464a      	mov	r2, r9
  403392:	4601      	mov	r1, r0
  403394:	4606      	mov	r6, r0
  403396:	4620      	mov	r0, r4
  403398:	f001 f98a 	bl	4046b0 <__multiply>
  40339c:	4649      	mov	r1, r9
  40339e:	4680      	mov	r8, r0
  4033a0:	4620      	mov	r0, r4
  4033a2:	f001 f8e1 	bl	404568 <_Bfree>
  4033a6:	46c1      	mov	r9, r8
  4033a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4033aa:	1bda      	subs	r2, r3, r7
  4033ac:	f040 82a1 	bne.w	4038f2 <_dtoa_r+0x9d2>
  4033b0:	2101      	movs	r1, #1
  4033b2:	4620      	mov	r0, r4
  4033b4:	f001 f972 	bl	40469c <__i2b>
  4033b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4033ba:	2b00      	cmp	r3, #0
  4033bc:	4680      	mov	r8, r0
  4033be:	dd1c      	ble.n	4033fa <_dtoa_r+0x4da>
  4033c0:	4601      	mov	r1, r0
  4033c2:	461a      	mov	r2, r3
  4033c4:	4620      	mov	r0, r4
  4033c6:	f001 fa05 	bl	4047d4 <__pow5mult>
  4033ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4033cc:	2b01      	cmp	r3, #1
  4033ce:	4680      	mov	r8, r0
  4033d0:	f340 8254 	ble.w	40387c <_dtoa_r+0x95c>
  4033d4:	2300      	movs	r3, #0
  4033d6:	930c      	str	r3, [sp, #48]	; 0x30
  4033d8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4033dc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  4033e0:	6918      	ldr	r0, [r3, #16]
  4033e2:	f001 f90b 	bl	4045fc <__hi0bits>
  4033e6:	f1c0 0020 	rsb	r0, r0, #32
  4033ea:	e010      	b.n	40340e <_dtoa_r+0x4ee>
  4033ec:	f1c3 0520 	rsb	r5, r3, #32
  4033f0:	fa0a f005 	lsl.w	r0, sl, r5
  4033f4:	e674      	b.n	4030e0 <_dtoa_r+0x1c0>
  4033f6:	900e      	str	r0, [sp, #56]	; 0x38
  4033f8:	e63c      	b.n	403074 <_dtoa_r+0x154>
  4033fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4033fc:	2b01      	cmp	r3, #1
  4033fe:	f340 8287 	ble.w	403910 <_dtoa_r+0x9f0>
  403402:	2300      	movs	r3, #0
  403404:	930c      	str	r3, [sp, #48]	; 0x30
  403406:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403408:	2001      	movs	r0, #1
  40340a:	2b00      	cmp	r3, #0
  40340c:	d1e4      	bne.n	4033d8 <_dtoa_r+0x4b8>
  40340e:	9a06      	ldr	r2, [sp, #24]
  403410:	4410      	add	r0, r2
  403412:	f010 001f 	ands.w	r0, r0, #31
  403416:	f000 80a1 	beq.w	40355c <_dtoa_r+0x63c>
  40341a:	f1c0 0320 	rsb	r3, r0, #32
  40341e:	2b04      	cmp	r3, #4
  403420:	f340 849e 	ble.w	403d60 <_dtoa_r+0xe40>
  403424:	9b08      	ldr	r3, [sp, #32]
  403426:	f1c0 001c 	rsb	r0, r0, #28
  40342a:	4403      	add	r3, r0
  40342c:	9308      	str	r3, [sp, #32]
  40342e:	4613      	mov	r3, r2
  403430:	4403      	add	r3, r0
  403432:	4405      	add	r5, r0
  403434:	9306      	str	r3, [sp, #24]
  403436:	9b08      	ldr	r3, [sp, #32]
  403438:	2b00      	cmp	r3, #0
  40343a:	dd05      	ble.n	403448 <_dtoa_r+0x528>
  40343c:	4649      	mov	r1, r9
  40343e:	461a      	mov	r2, r3
  403440:	4620      	mov	r0, r4
  403442:	f001 fa17 	bl	404874 <__lshift>
  403446:	4681      	mov	r9, r0
  403448:	9b06      	ldr	r3, [sp, #24]
  40344a:	2b00      	cmp	r3, #0
  40344c:	dd05      	ble.n	40345a <_dtoa_r+0x53a>
  40344e:	4641      	mov	r1, r8
  403450:	461a      	mov	r2, r3
  403452:	4620      	mov	r0, r4
  403454:	f001 fa0e 	bl	404874 <__lshift>
  403458:	4680      	mov	r8, r0
  40345a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40345c:	2b00      	cmp	r3, #0
  40345e:	f040 8086 	bne.w	40356e <_dtoa_r+0x64e>
  403462:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403464:	2b00      	cmp	r3, #0
  403466:	f340 8266 	ble.w	403936 <_dtoa_r+0xa16>
  40346a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40346c:	2b00      	cmp	r3, #0
  40346e:	f000 8098 	beq.w	4035a2 <_dtoa_r+0x682>
  403472:	2d00      	cmp	r5, #0
  403474:	dd05      	ble.n	403482 <_dtoa_r+0x562>
  403476:	4631      	mov	r1, r6
  403478:	462a      	mov	r2, r5
  40347a:	4620      	mov	r0, r4
  40347c:	f001 f9fa 	bl	404874 <__lshift>
  403480:	4606      	mov	r6, r0
  403482:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403484:	2b00      	cmp	r3, #0
  403486:	f040 8337 	bne.w	403af8 <_dtoa_r+0xbd8>
  40348a:	9606      	str	r6, [sp, #24]
  40348c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40348e:	9a04      	ldr	r2, [sp, #16]
  403490:	f8dd b018 	ldr.w	fp, [sp, #24]
  403494:	3b01      	subs	r3, #1
  403496:	18d3      	adds	r3, r2, r3
  403498:	930b      	str	r3, [sp, #44]	; 0x2c
  40349a:	f00a 0301 	and.w	r3, sl, #1
  40349e:	930c      	str	r3, [sp, #48]	; 0x30
  4034a0:	4617      	mov	r7, r2
  4034a2:	46c2      	mov	sl, r8
  4034a4:	4651      	mov	r1, sl
  4034a6:	4648      	mov	r0, r9
  4034a8:	f7ff fca4 	bl	402df4 <quorem>
  4034ac:	4631      	mov	r1, r6
  4034ae:	4605      	mov	r5, r0
  4034b0:	4648      	mov	r0, r9
  4034b2:	f001 fa31 	bl	404918 <__mcmp>
  4034b6:	465a      	mov	r2, fp
  4034b8:	900a      	str	r0, [sp, #40]	; 0x28
  4034ba:	4651      	mov	r1, sl
  4034bc:	4620      	mov	r0, r4
  4034be:	f001 fa47 	bl	404950 <__mdiff>
  4034c2:	68c2      	ldr	r2, [r0, #12]
  4034c4:	4680      	mov	r8, r0
  4034c6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  4034ca:	2a00      	cmp	r2, #0
  4034cc:	f040 822b 	bne.w	403926 <_dtoa_r+0xa06>
  4034d0:	4601      	mov	r1, r0
  4034d2:	4648      	mov	r0, r9
  4034d4:	9308      	str	r3, [sp, #32]
  4034d6:	f001 fa1f 	bl	404918 <__mcmp>
  4034da:	4641      	mov	r1, r8
  4034dc:	9006      	str	r0, [sp, #24]
  4034de:	4620      	mov	r0, r4
  4034e0:	f001 f842 	bl	404568 <_Bfree>
  4034e4:	9a06      	ldr	r2, [sp, #24]
  4034e6:	9b08      	ldr	r3, [sp, #32]
  4034e8:	b932      	cbnz	r2, 4034f8 <_dtoa_r+0x5d8>
  4034ea:	9924      	ldr	r1, [sp, #144]	; 0x90
  4034ec:	b921      	cbnz	r1, 4034f8 <_dtoa_r+0x5d8>
  4034ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4034f0:	2a00      	cmp	r2, #0
  4034f2:	f000 83ef 	beq.w	403cd4 <_dtoa_r+0xdb4>
  4034f6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4034f8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4034fa:	2900      	cmp	r1, #0
  4034fc:	f2c0 829f 	blt.w	403a3e <_dtoa_r+0xb1e>
  403500:	d105      	bne.n	40350e <_dtoa_r+0x5ee>
  403502:	9924      	ldr	r1, [sp, #144]	; 0x90
  403504:	b919      	cbnz	r1, 40350e <_dtoa_r+0x5ee>
  403506:	990c      	ldr	r1, [sp, #48]	; 0x30
  403508:	2900      	cmp	r1, #0
  40350a:	f000 8298 	beq.w	403a3e <_dtoa_r+0xb1e>
  40350e:	2a00      	cmp	r2, #0
  403510:	f300 8306 	bgt.w	403b20 <_dtoa_r+0xc00>
  403514:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403516:	703b      	strb	r3, [r7, #0]
  403518:	f107 0801 	add.w	r8, r7, #1
  40351c:	4297      	cmp	r7, r2
  40351e:	4645      	mov	r5, r8
  403520:	f000 830c 	beq.w	403b3c <_dtoa_r+0xc1c>
  403524:	4649      	mov	r1, r9
  403526:	2300      	movs	r3, #0
  403528:	220a      	movs	r2, #10
  40352a:	4620      	mov	r0, r4
  40352c:	f001 f826 	bl	40457c <__multadd>
  403530:	455e      	cmp	r6, fp
  403532:	4681      	mov	r9, r0
  403534:	4631      	mov	r1, r6
  403536:	f04f 0300 	mov.w	r3, #0
  40353a:	f04f 020a 	mov.w	r2, #10
  40353e:	4620      	mov	r0, r4
  403540:	f000 81eb 	beq.w	40391a <_dtoa_r+0x9fa>
  403544:	f001 f81a 	bl	40457c <__multadd>
  403548:	4659      	mov	r1, fp
  40354a:	4606      	mov	r6, r0
  40354c:	2300      	movs	r3, #0
  40354e:	220a      	movs	r2, #10
  403550:	4620      	mov	r0, r4
  403552:	f001 f813 	bl	40457c <__multadd>
  403556:	4647      	mov	r7, r8
  403558:	4683      	mov	fp, r0
  40355a:	e7a3      	b.n	4034a4 <_dtoa_r+0x584>
  40355c:	201c      	movs	r0, #28
  40355e:	9b08      	ldr	r3, [sp, #32]
  403560:	4403      	add	r3, r0
  403562:	9308      	str	r3, [sp, #32]
  403564:	9b06      	ldr	r3, [sp, #24]
  403566:	4403      	add	r3, r0
  403568:	4405      	add	r5, r0
  40356a:	9306      	str	r3, [sp, #24]
  40356c:	e763      	b.n	403436 <_dtoa_r+0x516>
  40356e:	4641      	mov	r1, r8
  403570:	4648      	mov	r0, r9
  403572:	f001 f9d1 	bl	404918 <__mcmp>
  403576:	2800      	cmp	r0, #0
  403578:	f6bf af73 	bge.w	403462 <_dtoa_r+0x542>
  40357c:	9f02      	ldr	r7, [sp, #8]
  40357e:	4649      	mov	r1, r9
  403580:	2300      	movs	r3, #0
  403582:	220a      	movs	r2, #10
  403584:	4620      	mov	r0, r4
  403586:	3f01      	subs	r7, #1
  403588:	9702      	str	r7, [sp, #8]
  40358a:	f000 fff7 	bl	40457c <__multadd>
  40358e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403590:	4681      	mov	r9, r0
  403592:	2b00      	cmp	r3, #0
  403594:	f040 83b6 	bne.w	403d04 <_dtoa_r+0xde4>
  403598:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40359a:	2b00      	cmp	r3, #0
  40359c:	f340 83bf 	ble.w	403d1e <_dtoa_r+0xdfe>
  4035a0:	930a      	str	r3, [sp, #40]	; 0x28
  4035a2:	f8dd b010 	ldr.w	fp, [sp, #16]
  4035a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  4035a8:	465d      	mov	r5, fp
  4035aa:	e002      	b.n	4035b2 <_dtoa_r+0x692>
  4035ac:	f000 ffe6 	bl	40457c <__multadd>
  4035b0:	4681      	mov	r9, r0
  4035b2:	4641      	mov	r1, r8
  4035b4:	4648      	mov	r0, r9
  4035b6:	f7ff fc1d 	bl	402df4 <quorem>
  4035ba:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  4035be:	f805 ab01 	strb.w	sl, [r5], #1
  4035c2:	eba5 030b 	sub.w	r3, r5, fp
  4035c6:	42bb      	cmp	r3, r7
  4035c8:	f04f 020a 	mov.w	r2, #10
  4035cc:	f04f 0300 	mov.w	r3, #0
  4035d0:	4649      	mov	r1, r9
  4035d2:	4620      	mov	r0, r4
  4035d4:	dbea      	blt.n	4035ac <_dtoa_r+0x68c>
  4035d6:	9b04      	ldr	r3, [sp, #16]
  4035d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4035da:	2a01      	cmp	r2, #1
  4035dc:	bfac      	ite	ge
  4035de:	189b      	addge	r3, r3, r2
  4035e0:	3301      	addlt	r3, #1
  4035e2:	461d      	mov	r5, r3
  4035e4:	f04f 0b00 	mov.w	fp, #0
  4035e8:	4649      	mov	r1, r9
  4035ea:	2201      	movs	r2, #1
  4035ec:	4620      	mov	r0, r4
  4035ee:	f001 f941 	bl	404874 <__lshift>
  4035f2:	4641      	mov	r1, r8
  4035f4:	4681      	mov	r9, r0
  4035f6:	f001 f98f 	bl	404918 <__mcmp>
  4035fa:	2800      	cmp	r0, #0
  4035fc:	f340 823d 	ble.w	403a7a <_dtoa_r+0xb5a>
  403600:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403604:	9904      	ldr	r1, [sp, #16]
  403606:	1e6b      	subs	r3, r5, #1
  403608:	e004      	b.n	403614 <_dtoa_r+0x6f4>
  40360a:	428b      	cmp	r3, r1
  40360c:	f000 81ae 	beq.w	40396c <_dtoa_r+0xa4c>
  403610:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403614:	2a39      	cmp	r2, #57	; 0x39
  403616:	f103 0501 	add.w	r5, r3, #1
  40361a:	d0f6      	beq.n	40360a <_dtoa_r+0x6ea>
  40361c:	3201      	adds	r2, #1
  40361e:	701a      	strb	r2, [r3, #0]
  403620:	4641      	mov	r1, r8
  403622:	4620      	mov	r0, r4
  403624:	f000 ffa0 	bl	404568 <_Bfree>
  403628:	2e00      	cmp	r6, #0
  40362a:	f43f ae3d 	beq.w	4032a8 <_dtoa_r+0x388>
  40362e:	f1bb 0f00 	cmp.w	fp, #0
  403632:	d005      	beq.n	403640 <_dtoa_r+0x720>
  403634:	45b3      	cmp	fp, r6
  403636:	d003      	beq.n	403640 <_dtoa_r+0x720>
  403638:	4659      	mov	r1, fp
  40363a:	4620      	mov	r0, r4
  40363c:	f000 ff94 	bl	404568 <_Bfree>
  403640:	4631      	mov	r1, r6
  403642:	4620      	mov	r0, r4
  403644:	f000 ff90 	bl	404568 <_Bfree>
  403648:	e62e      	b.n	4032a8 <_dtoa_r+0x388>
  40364a:	2300      	movs	r3, #0
  40364c:	930b      	str	r3, [sp, #44]	; 0x2c
  40364e:	9b02      	ldr	r3, [sp, #8]
  403650:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403652:	4413      	add	r3, r2
  403654:	930f      	str	r3, [sp, #60]	; 0x3c
  403656:	3301      	adds	r3, #1
  403658:	2b01      	cmp	r3, #1
  40365a:	461f      	mov	r7, r3
  40365c:	461e      	mov	r6, r3
  40365e:	930a      	str	r3, [sp, #40]	; 0x28
  403660:	bfb8      	it	lt
  403662:	2701      	movlt	r7, #1
  403664:	2100      	movs	r1, #0
  403666:	2f17      	cmp	r7, #23
  403668:	6461      	str	r1, [r4, #68]	; 0x44
  40366a:	d90a      	bls.n	403682 <_dtoa_r+0x762>
  40366c:	2201      	movs	r2, #1
  40366e:	2304      	movs	r3, #4
  403670:	005b      	lsls	r3, r3, #1
  403672:	f103 0014 	add.w	r0, r3, #20
  403676:	4287      	cmp	r7, r0
  403678:	4611      	mov	r1, r2
  40367a:	f102 0201 	add.w	r2, r2, #1
  40367e:	d2f7      	bcs.n	403670 <_dtoa_r+0x750>
  403680:	6461      	str	r1, [r4, #68]	; 0x44
  403682:	4620      	mov	r0, r4
  403684:	f000 ff4a 	bl	40451c <_Balloc>
  403688:	2e0e      	cmp	r6, #14
  40368a:	9004      	str	r0, [sp, #16]
  40368c:	6420      	str	r0, [r4, #64]	; 0x40
  40368e:	f63f ad41 	bhi.w	403114 <_dtoa_r+0x1f4>
  403692:	2d00      	cmp	r5, #0
  403694:	f43f ad3e 	beq.w	403114 <_dtoa_r+0x1f4>
  403698:	9902      	ldr	r1, [sp, #8]
  40369a:	2900      	cmp	r1, #0
  40369c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  4036a0:	f340 8202 	ble.w	403aa8 <_dtoa_r+0xb88>
  4036a4:	4bb8      	ldr	r3, [pc, #736]	; (403988 <_dtoa_r+0xa68>)
  4036a6:	f001 020f 	and.w	r2, r1, #15
  4036aa:	110d      	asrs	r5, r1, #4
  4036ac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4036b0:	06e9      	lsls	r1, r5, #27
  4036b2:	e9d3 6700 	ldrd	r6, r7, [r3]
  4036b6:	f140 81ae 	bpl.w	403a16 <_dtoa_r+0xaf6>
  4036ba:	4bb4      	ldr	r3, [pc, #720]	; (40398c <_dtoa_r+0xa6c>)
  4036bc:	4650      	mov	r0, sl
  4036be:	4659      	mov	r1, fp
  4036c0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4036c4:	f002 fa00 	bl	405ac8 <__aeabi_ddiv>
  4036c8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  4036cc:	f005 050f 	and.w	r5, r5, #15
  4036d0:	f04f 0a03 	mov.w	sl, #3
  4036d4:	b18d      	cbz	r5, 4036fa <_dtoa_r+0x7da>
  4036d6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 40398c <_dtoa_r+0xa6c>
  4036da:	07ea      	lsls	r2, r5, #31
  4036dc:	d509      	bpl.n	4036f2 <_dtoa_r+0x7d2>
  4036de:	4630      	mov	r0, r6
  4036e0:	4639      	mov	r1, r7
  4036e2:	e9d8 2300 	ldrd	r2, r3, [r8]
  4036e6:	f002 f8c5 	bl	405874 <__aeabi_dmul>
  4036ea:	f10a 0a01 	add.w	sl, sl, #1
  4036ee:	4606      	mov	r6, r0
  4036f0:	460f      	mov	r7, r1
  4036f2:	106d      	asrs	r5, r5, #1
  4036f4:	f108 0808 	add.w	r8, r8, #8
  4036f8:	d1ef      	bne.n	4036da <_dtoa_r+0x7ba>
  4036fa:	463b      	mov	r3, r7
  4036fc:	4632      	mov	r2, r6
  4036fe:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403702:	f002 f9e1 	bl	405ac8 <__aeabi_ddiv>
  403706:	4607      	mov	r7, r0
  403708:	4688      	mov	r8, r1
  40370a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40370c:	b143      	cbz	r3, 403720 <_dtoa_r+0x800>
  40370e:	2200      	movs	r2, #0
  403710:	4b9f      	ldr	r3, [pc, #636]	; (403990 <_dtoa_r+0xa70>)
  403712:	4638      	mov	r0, r7
  403714:	4641      	mov	r1, r8
  403716:	f002 fb1f 	bl	405d58 <__aeabi_dcmplt>
  40371a:	2800      	cmp	r0, #0
  40371c:	f040 8286 	bne.w	403c2c <_dtoa_r+0xd0c>
  403720:	4650      	mov	r0, sl
  403722:	f002 f841 	bl	4057a8 <__aeabi_i2d>
  403726:	463a      	mov	r2, r7
  403728:	4643      	mov	r3, r8
  40372a:	f002 f8a3 	bl	405874 <__aeabi_dmul>
  40372e:	4b99      	ldr	r3, [pc, #612]	; (403994 <_dtoa_r+0xa74>)
  403730:	2200      	movs	r2, #0
  403732:	f001 feed 	bl	405510 <__adddf3>
  403736:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403738:	4605      	mov	r5, r0
  40373a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40373e:	2b00      	cmp	r3, #0
  403740:	f000 813e 	beq.w	4039c0 <_dtoa_r+0xaa0>
  403744:	9b02      	ldr	r3, [sp, #8]
  403746:	9315      	str	r3, [sp, #84]	; 0x54
  403748:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40374a:	9312      	str	r3, [sp, #72]	; 0x48
  40374c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40374e:	2b00      	cmp	r3, #0
  403750:	f000 81fa 	beq.w	403b48 <_dtoa_r+0xc28>
  403754:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403756:	4b8c      	ldr	r3, [pc, #560]	; (403988 <_dtoa_r+0xa68>)
  403758:	498f      	ldr	r1, [pc, #572]	; (403998 <_dtoa_r+0xa78>)
  40375a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40375e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403762:	2000      	movs	r0, #0
  403764:	f002 f9b0 	bl	405ac8 <__aeabi_ddiv>
  403768:	462a      	mov	r2, r5
  40376a:	4633      	mov	r3, r6
  40376c:	f001 fece 	bl	40550c <__aeabi_dsub>
  403770:	4682      	mov	sl, r0
  403772:	468b      	mov	fp, r1
  403774:	4638      	mov	r0, r7
  403776:	4641      	mov	r1, r8
  403778:	f002 fb2c 	bl	405dd4 <__aeabi_d2iz>
  40377c:	4605      	mov	r5, r0
  40377e:	f002 f813 	bl	4057a8 <__aeabi_i2d>
  403782:	4602      	mov	r2, r0
  403784:	460b      	mov	r3, r1
  403786:	4638      	mov	r0, r7
  403788:	4641      	mov	r1, r8
  40378a:	f001 febf 	bl	40550c <__aeabi_dsub>
  40378e:	3530      	adds	r5, #48	; 0x30
  403790:	fa5f f885 	uxtb.w	r8, r5
  403794:	9d04      	ldr	r5, [sp, #16]
  403796:	4606      	mov	r6, r0
  403798:	460f      	mov	r7, r1
  40379a:	f885 8000 	strb.w	r8, [r5]
  40379e:	4602      	mov	r2, r0
  4037a0:	460b      	mov	r3, r1
  4037a2:	4650      	mov	r0, sl
  4037a4:	4659      	mov	r1, fp
  4037a6:	3501      	adds	r5, #1
  4037a8:	f002 faf4 	bl	405d94 <__aeabi_dcmpgt>
  4037ac:	2800      	cmp	r0, #0
  4037ae:	d154      	bne.n	40385a <_dtoa_r+0x93a>
  4037b0:	4632      	mov	r2, r6
  4037b2:	463b      	mov	r3, r7
  4037b4:	2000      	movs	r0, #0
  4037b6:	4976      	ldr	r1, [pc, #472]	; (403990 <_dtoa_r+0xa70>)
  4037b8:	f001 fea8 	bl	40550c <__aeabi_dsub>
  4037bc:	4602      	mov	r2, r0
  4037be:	460b      	mov	r3, r1
  4037c0:	4650      	mov	r0, sl
  4037c2:	4659      	mov	r1, fp
  4037c4:	f002 fae6 	bl	405d94 <__aeabi_dcmpgt>
  4037c8:	2800      	cmp	r0, #0
  4037ca:	f040 8270 	bne.w	403cae <_dtoa_r+0xd8e>
  4037ce:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4037d0:	2a01      	cmp	r2, #1
  4037d2:	f000 8111 	beq.w	4039f8 <_dtoa_r+0xad8>
  4037d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4037d8:	9a04      	ldr	r2, [sp, #16]
  4037da:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4037de:	4413      	add	r3, r2
  4037e0:	4699      	mov	r9, r3
  4037e2:	e00d      	b.n	403800 <_dtoa_r+0x8e0>
  4037e4:	2000      	movs	r0, #0
  4037e6:	496a      	ldr	r1, [pc, #424]	; (403990 <_dtoa_r+0xa70>)
  4037e8:	f001 fe90 	bl	40550c <__aeabi_dsub>
  4037ec:	4652      	mov	r2, sl
  4037ee:	465b      	mov	r3, fp
  4037f0:	f002 fab2 	bl	405d58 <__aeabi_dcmplt>
  4037f4:	2800      	cmp	r0, #0
  4037f6:	f040 8258 	bne.w	403caa <_dtoa_r+0xd8a>
  4037fa:	454d      	cmp	r5, r9
  4037fc:	f000 80fa 	beq.w	4039f4 <_dtoa_r+0xad4>
  403800:	4650      	mov	r0, sl
  403802:	4659      	mov	r1, fp
  403804:	2200      	movs	r2, #0
  403806:	4b65      	ldr	r3, [pc, #404]	; (40399c <_dtoa_r+0xa7c>)
  403808:	f002 f834 	bl	405874 <__aeabi_dmul>
  40380c:	2200      	movs	r2, #0
  40380e:	4b63      	ldr	r3, [pc, #396]	; (40399c <_dtoa_r+0xa7c>)
  403810:	4682      	mov	sl, r0
  403812:	468b      	mov	fp, r1
  403814:	4630      	mov	r0, r6
  403816:	4639      	mov	r1, r7
  403818:	f002 f82c 	bl	405874 <__aeabi_dmul>
  40381c:	460f      	mov	r7, r1
  40381e:	4606      	mov	r6, r0
  403820:	f002 fad8 	bl	405dd4 <__aeabi_d2iz>
  403824:	4680      	mov	r8, r0
  403826:	f001 ffbf 	bl	4057a8 <__aeabi_i2d>
  40382a:	4602      	mov	r2, r0
  40382c:	460b      	mov	r3, r1
  40382e:	4630      	mov	r0, r6
  403830:	4639      	mov	r1, r7
  403832:	f001 fe6b 	bl	40550c <__aeabi_dsub>
  403836:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40383a:	fa5f f888 	uxtb.w	r8, r8
  40383e:	4652      	mov	r2, sl
  403840:	465b      	mov	r3, fp
  403842:	f805 8b01 	strb.w	r8, [r5], #1
  403846:	4606      	mov	r6, r0
  403848:	460f      	mov	r7, r1
  40384a:	f002 fa85 	bl	405d58 <__aeabi_dcmplt>
  40384e:	4632      	mov	r2, r6
  403850:	463b      	mov	r3, r7
  403852:	2800      	cmp	r0, #0
  403854:	d0c6      	beq.n	4037e4 <_dtoa_r+0x8c4>
  403856:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40385a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40385c:	9302      	str	r3, [sp, #8]
  40385e:	e523      	b.n	4032a8 <_dtoa_r+0x388>
  403860:	2300      	movs	r3, #0
  403862:	930b      	str	r3, [sp, #44]	; 0x2c
  403864:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403866:	2b00      	cmp	r3, #0
  403868:	f340 80dc 	ble.w	403a24 <_dtoa_r+0xb04>
  40386c:	461f      	mov	r7, r3
  40386e:	461e      	mov	r6, r3
  403870:	930f      	str	r3, [sp, #60]	; 0x3c
  403872:	930a      	str	r3, [sp, #40]	; 0x28
  403874:	e6f6      	b.n	403664 <_dtoa_r+0x744>
  403876:	2301      	movs	r3, #1
  403878:	930b      	str	r3, [sp, #44]	; 0x2c
  40387a:	e7f3      	b.n	403864 <_dtoa_r+0x944>
  40387c:	f1ba 0f00 	cmp.w	sl, #0
  403880:	f47f ada8 	bne.w	4033d4 <_dtoa_r+0x4b4>
  403884:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403888:	2b00      	cmp	r3, #0
  40388a:	f47f adba 	bne.w	403402 <_dtoa_r+0x4e2>
  40388e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403892:	0d3f      	lsrs	r7, r7, #20
  403894:	053f      	lsls	r7, r7, #20
  403896:	2f00      	cmp	r7, #0
  403898:	f000 820d 	beq.w	403cb6 <_dtoa_r+0xd96>
  40389c:	9b08      	ldr	r3, [sp, #32]
  40389e:	3301      	adds	r3, #1
  4038a0:	9308      	str	r3, [sp, #32]
  4038a2:	9b06      	ldr	r3, [sp, #24]
  4038a4:	3301      	adds	r3, #1
  4038a6:	9306      	str	r3, [sp, #24]
  4038a8:	2301      	movs	r3, #1
  4038aa:	930c      	str	r3, [sp, #48]	; 0x30
  4038ac:	e5ab      	b.n	403406 <_dtoa_r+0x4e6>
  4038ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038b0:	2b00      	cmp	r3, #0
  4038b2:	f73f ac42 	bgt.w	40313a <_dtoa_r+0x21a>
  4038b6:	f040 8221 	bne.w	403cfc <_dtoa_r+0xddc>
  4038ba:	2200      	movs	r2, #0
  4038bc:	4b38      	ldr	r3, [pc, #224]	; (4039a0 <_dtoa_r+0xa80>)
  4038be:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4038c2:	f001 ffd7 	bl	405874 <__aeabi_dmul>
  4038c6:	4652      	mov	r2, sl
  4038c8:	465b      	mov	r3, fp
  4038ca:	f002 fa59 	bl	405d80 <__aeabi_dcmpge>
  4038ce:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4038d2:	4646      	mov	r6, r8
  4038d4:	2800      	cmp	r0, #0
  4038d6:	d041      	beq.n	40395c <_dtoa_r+0xa3c>
  4038d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4038da:	9d04      	ldr	r5, [sp, #16]
  4038dc:	43db      	mvns	r3, r3
  4038de:	9302      	str	r3, [sp, #8]
  4038e0:	4641      	mov	r1, r8
  4038e2:	4620      	mov	r0, r4
  4038e4:	f000 fe40 	bl	404568 <_Bfree>
  4038e8:	2e00      	cmp	r6, #0
  4038ea:	f43f acdd 	beq.w	4032a8 <_dtoa_r+0x388>
  4038ee:	e6a7      	b.n	403640 <_dtoa_r+0x720>
  4038f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4038f2:	4649      	mov	r1, r9
  4038f4:	4620      	mov	r0, r4
  4038f6:	f000 ff6d 	bl	4047d4 <__pow5mult>
  4038fa:	4681      	mov	r9, r0
  4038fc:	e558      	b.n	4033b0 <_dtoa_r+0x490>
  4038fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403900:	2a00      	cmp	r2, #0
  403902:	f000 8187 	beq.w	403c14 <_dtoa_r+0xcf4>
  403906:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40390a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40390c:	9d08      	ldr	r5, [sp, #32]
  40390e:	e4f2      	b.n	4032f6 <_dtoa_r+0x3d6>
  403910:	f1ba 0f00 	cmp.w	sl, #0
  403914:	f47f ad75 	bne.w	403402 <_dtoa_r+0x4e2>
  403918:	e7b4      	b.n	403884 <_dtoa_r+0x964>
  40391a:	f000 fe2f 	bl	40457c <__multadd>
  40391e:	4647      	mov	r7, r8
  403920:	4606      	mov	r6, r0
  403922:	4683      	mov	fp, r0
  403924:	e5be      	b.n	4034a4 <_dtoa_r+0x584>
  403926:	4601      	mov	r1, r0
  403928:	4620      	mov	r0, r4
  40392a:	9306      	str	r3, [sp, #24]
  40392c:	f000 fe1c 	bl	404568 <_Bfree>
  403930:	2201      	movs	r2, #1
  403932:	9b06      	ldr	r3, [sp, #24]
  403934:	e5e0      	b.n	4034f8 <_dtoa_r+0x5d8>
  403936:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403938:	2b02      	cmp	r3, #2
  40393a:	f77f ad96 	ble.w	40346a <_dtoa_r+0x54a>
  40393e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403940:	2b00      	cmp	r3, #0
  403942:	d1c9      	bne.n	4038d8 <_dtoa_r+0x9b8>
  403944:	4641      	mov	r1, r8
  403946:	2205      	movs	r2, #5
  403948:	4620      	mov	r0, r4
  40394a:	f000 fe17 	bl	40457c <__multadd>
  40394e:	4601      	mov	r1, r0
  403950:	4680      	mov	r8, r0
  403952:	4648      	mov	r0, r9
  403954:	f000 ffe0 	bl	404918 <__mcmp>
  403958:	2800      	cmp	r0, #0
  40395a:	ddbd      	ble.n	4038d8 <_dtoa_r+0x9b8>
  40395c:	9a02      	ldr	r2, [sp, #8]
  40395e:	9904      	ldr	r1, [sp, #16]
  403960:	2331      	movs	r3, #49	; 0x31
  403962:	3201      	adds	r2, #1
  403964:	9202      	str	r2, [sp, #8]
  403966:	700b      	strb	r3, [r1, #0]
  403968:	1c4d      	adds	r5, r1, #1
  40396a:	e7b9      	b.n	4038e0 <_dtoa_r+0x9c0>
  40396c:	9a02      	ldr	r2, [sp, #8]
  40396e:	3201      	adds	r2, #1
  403970:	9202      	str	r2, [sp, #8]
  403972:	9a04      	ldr	r2, [sp, #16]
  403974:	2331      	movs	r3, #49	; 0x31
  403976:	7013      	strb	r3, [r2, #0]
  403978:	e652      	b.n	403620 <_dtoa_r+0x700>
  40397a:	2301      	movs	r3, #1
  40397c:	930b      	str	r3, [sp, #44]	; 0x2c
  40397e:	e666      	b.n	40364e <_dtoa_r+0x72e>
  403980:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403984:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403986:	e48f      	b.n	4032a8 <_dtoa_r+0x388>
  403988:	00406c28 	.word	0x00406c28
  40398c:	00406c00 	.word	0x00406c00
  403990:	3ff00000 	.word	0x3ff00000
  403994:	401c0000 	.word	0x401c0000
  403998:	3fe00000 	.word	0x3fe00000
  40399c:	40240000 	.word	0x40240000
  4039a0:	40140000 	.word	0x40140000
  4039a4:	4650      	mov	r0, sl
  4039a6:	f001 feff 	bl	4057a8 <__aeabi_i2d>
  4039aa:	463a      	mov	r2, r7
  4039ac:	4643      	mov	r3, r8
  4039ae:	f001 ff61 	bl	405874 <__aeabi_dmul>
  4039b2:	2200      	movs	r2, #0
  4039b4:	4bc1      	ldr	r3, [pc, #772]	; (403cbc <_dtoa_r+0xd9c>)
  4039b6:	f001 fdab 	bl	405510 <__adddf3>
  4039ba:	4605      	mov	r5, r0
  4039bc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4039c0:	4641      	mov	r1, r8
  4039c2:	2200      	movs	r2, #0
  4039c4:	4bbe      	ldr	r3, [pc, #760]	; (403cc0 <_dtoa_r+0xda0>)
  4039c6:	4638      	mov	r0, r7
  4039c8:	f001 fda0 	bl	40550c <__aeabi_dsub>
  4039cc:	462a      	mov	r2, r5
  4039ce:	4633      	mov	r3, r6
  4039d0:	4682      	mov	sl, r0
  4039d2:	468b      	mov	fp, r1
  4039d4:	f002 f9de 	bl	405d94 <__aeabi_dcmpgt>
  4039d8:	4680      	mov	r8, r0
  4039da:	2800      	cmp	r0, #0
  4039dc:	f040 8110 	bne.w	403c00 <_dtoa_r+0xce0>
  4039e0:	462a      	mov	r2, r5
  4039e2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4039e6:	4650      	mov	r0, sl
  4039e8:	4659      	mov	r1, fp
  4039ea:	f002 f9b5 	bl	405d58 <__aeabi_dcmplt>
  4039ee:	b118      	cbz	r0, 4039f8 <_dtoa_r+0xad8>
  4039f0:	4646      	mov	r6, r8
  4039f2:	e771      	b.n	4038d8 <_dtoa_r+0x9b8>
  4039f4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4039f8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4039fc:	f7ff bb8a 	b.w	403114 <_dtoa_r+0x1f4>
  403a00:	9804      	ldr	r0, [sp, #16]
  403a02:	f7ff babb 	b.w	402f7c <_dtoa_r+0x5c>
  403a06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403a08:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403a0a:	970c      	str	r7, [sp, #48]	; 0x30
  403a0c:	1afb      	subs	r3, r7, r3
  403a0e:	441a      	add	r2, r3
  403a10:	920d      	str	r2, [sp, #52]	; 0x34
  403a12:	2700      	movs	r7, #0
  403a14:	e469      	b.n	4032ea <_dtoa_r+0x3ca>
  403a16:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403a1a:	f04f 0a02 	mov.w	sl, #2
  403a1e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403a22:	e657      	b.n	4036d4 <_dtoa_r+0x7b4>
  403a24:	2100      	movs	r1, #0
  403a26:	2301      	movs	r3, #1
  403a28:	6461      	str	r1, [r4, #68]	; 0x44
  403a2a:	4620      	mov	r0, r4
  403a2c:	9325      	str	r3, [sp, #148]	; 0x94
  403a2e:	f000 fd75 	bl	40451c <_Balloc>
  403a32:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403a34:	9004      	str	r0, [sp, #16]
  403a36:	6420      	str	r0, [r4, #64]	; 0x40
  403a38:	930a      	str	r3, [sp, #40]	; 0x28
  403a3a:	930f      	str	r3, [sp, #60]	; 0x3c
  403a3c:	e629      	b.n	403692 <_dtoa_r+0x772>
  403a3e:	2a00      	cmp	r2, #0
  403a40:	46d0      	mov	r8, sl
  403a42:	f8cd b018 	str.w	fp, [sp, #24]
  403a46:	469a      	mov	sl, r3
  403a48:	dd11      	ble.n	403a6e <_dtoa_r+0xb4e>
  403a4a:	4649      	mov	r1, r9
  403a4c:	2201      	movs	r2, #1
  403a4e:	4620      	mov	r0, r4
  403a50:	f000 ff10 	bl	404874 <__lshift>
  403a54:	4641      	mov	r1, r8
  403a56:	4681      	mov	r9, r0
  403a58:	f000 ff5e 	bl	404918 <__mcmp>
  403a5c:	2800      	cmp	r0, #0
  403a5e:	f340 8146 	ble.w	403cee <_dtoa_r+0xdce>
  403a62:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403a66:	f000 8106 	beq.w	403c76 <_dtoa_r+0xd56>
  403a6a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403a6e:	46b3      	mov	fp, r6
  403a70:	f887 a000 	strb.w	sl, [r7]
  403a74:	1c7d      	adds	r5, r7, #1
  403a76:	9e06      	ldr	r6, [sp, #24]
  403a78:	e5d2      	b.n	403620 <_dtoa_r+0x700>
  403a7a:	d104      	bne.n	403a86 <_dtoa_r+0xb66>
  403a7c:	f01a 0f01 	tst.w	sl, #1
  403a80:	d001      	beq.n	403a86 <_dtoa_r+0xb66>
  403a82:	e5bd      	b.n	403600 <_dtoa_r+0x6e0>
  403a84:	4615      	mov	r5, r2
  403a86:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403a8a:	2b30      	cmp	r3, #48	; 0x30
  403a8c:	f105 32ff 	add.w	r2, r5, #4294967295
  403a90:	d0f8      	beq.n	403a84 <_dtoa_r+0xb64>
  403a92:	e5c5      	b.n	403620 <_dtoa_r+0x700>
  403a94:	9904      	ldr	r1, [sp, #16]
  403a96:	2230      	movs	r2, #48	; 0x30
  403a98:	700a      	strb	r2, [r1, #0]
  403a9a:	9a02      	ldr	r2, [sp, #8]
  403a9c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403aa0:	3201      	adds	r2, #1
  403aa2:	9202      	str	r2, [sp, #8]
  403aa4:	f7ff bbfc 	b.w	4032a0 <_dtoa_r+0x380>
  403aa8:	f000 80bb 	beq.w	403c22 <_dtoa_r+0xd02>
  403aac:	9b02      	ldr	r3, [sp, #8]
  403aae:	425d      	negs	r5, r3
  403ab0:	4b84      	ldr	r3, [pc, #528]	; (403cc4 <_dtoa_r+0xda4>)
  403ab2:	f005 020f 	and.w	r2, r5, #15
  403ab6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403aba:	e9d3 2300 	ldrd	r2, r3, [r3]
  403abe:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403ac2:	f001 fed7 	bl	405874 <__aeabi_dmul>
  403ac6:	112d      	asrs	r5, r5, #4
  403ac8:	4607      	mov	r7, r0
  403aca:	4688      	mov	r8, r1
  403acc:	f000 812c 	beq.w	403d28 <_dtoa_r+0xe08>
  403ad0:	4e7d      	ldr	r6, [pc, #500]	; (403cc8 <_dtoa_r+0xda8>)
  403ad2:	f04f 0a02 	mov.w	sl, #2
  403ad6:	07eb      	lsls	r3, r5, #31
  403ad8:	d509      	bpl.n	403aee <_dtoa_r+0xbce>
  403ada:	4638      	mov	r0, r7
  403adc:	4641      	mov	r1, r8
  403ade:	e9d6 2300 	ldrd	r2, r3, [r6]
  403ae2:	f001 fec7 	bl	405874 <__aeabi_dmul>
  403ae6:	f10a 0a01 	add.w	sl, sl, #1
  403aea:	4607      	mov	r7, r0
  403aec:	4688      	mov	r8, r1
  403aee:	106d      	asrs	r5, r5, #1
  403af0:	f106 0608 	add.w	r6, r6, #8
  403af4:	d1ef      	bne.n	403ad6 <_dtoa_r+0xbb6>
  403af6:	e608      	b.n	40370a <_dtoa_r+0x7ea>
  403af8:	6871      	ldr	r1, [r6, #4]
  403afa:	4620      	mov	r0, r4
  403afc:	f000 fd0e 	bl	40451c <_Balloc>
  403b00:	6933      	ldr	r3, [r6, #16]
  403b02:	3302      	adds	r3, #2
  403b04:	009a      	lsls	r2, r3, #2
  403b06:	4605      	mov	r5, r0
  403b08:	f106 010c 	add.w	r1, r6, #12
  403b0c:	300c      	adds	r0, #12
  403b0e:	f000 fc5f 	bl	4043d0 <memcpy>
  403b12:	4629      	mov	r1, r5
  403b14:	2201      	movs	r2, #1
  403b16:	4620      	mov	r0, r4
  403b18:	f000 feac 	bl	404874 <__lshift>
  403b1c:	9006      	str	r0, [sp, #24]
  403b1e:	e4b5      	b.n	40348c <_dtoa_r+0x56c>
  403b20:	2b39      	cmp	r3, #57	; 0x39
  403b22:	f8cd b018 	str.w	fp, [sp, #24]
  403b26:	46d0      	mov	r8, sl
  403b28:	f000 80a5 	beq.w	403c76 <_dtoa_r+0xd56>
  403b2c:	f103 0a01 	add.w	sl, r3, #1
  403b30:	46b3      	mov	fp, r6
  403b32:	f887 a000 	strb.w	sl, [r7]
  403b36:	1c7d      	adds	r5, r7, #1
  403b38:	9e06      	ldr	r6, [sp, #24]
  403b3a:	e571      	b.n	403620 <_dtoa_r+0x700>
  403b3c:	465a      	mov	r2, fp
  403b3e:	46d0      	mov	r8, sl
  403b40:	46b3      	mov	fp, r6
  403b42:	469a      	mov	sl, r3
  403b44:	4616      	mov	r6, r2
  403b46:	e54f      	b.n	4035e8 <_dtoa_r+0x6c8>
  403b48:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403b4a:	495e      	ldr	r1, [pc, #376]	; (403cc4 <_dtoa_r+0xda4>)
  403b4c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403b50:	462a      	mov	r2, r5
  403b52:	4633      	mov	r3, r6
  403b54:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403b58:	f001 fe8c 	bl	405874 <__aeabi_dmul>
  403b5c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403b60:	4638      	mov	r0, r7
  403b62:	4641      	mov	r1, r8
  403b64:	f002 f936 	bl	405dd4 <__aeabi_d2iz>
  403b68:	4605      	mov	r5, r0
  403b6a:	f001 fe1d 	bl	4057a8 <__aeabi_i2d>
  403b6e:	460b      	mov	r3, r1
  403b70:	4602      	mov	r2, r0
  403b72:	4641      	mov	r1, r8
  403b74:	4638      	mov	r0, r7
  403b76:	f001 fcc9 	bl	40550c <__aeabi_dsub>
  403b7a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403b7c:	460f      	mov	r7, r1
  403b7e:	9904      	ldr	r1, [sp, #16]
  403b80:	3530      	adds	r5, #48	; 0x30
  403b82:	2b01      	cmp	r3, #1
  403b84:	700d      	strb	r5, [r1, #0]
  403b86:	4606      	mov	r6, r0
  403b88:	f101 0501 	add.w	r5, r1, #1
  403b8c:	d026      	beq.n	403bdc <_dtoa_r+0xcbc>
  403b8e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403b90:	9a04      	ldr	r2, [sp, #16]
  403b92:	f8df b13c 	ldr.w	fp, [pc, #316]	; 403cd0 <_dtoa_r+0xdb0>
  403b96:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403b9a:	4413      	add	r3, r2
  403b9c:	f04f 0a00 	mov.w	sl, #0
  403ba0:	4699      	mov	r9, r3
  403ba2:	4652      	mov	r2, sl
  403ba4:	465b      	mov	r3, fp
  403ba6:	4630      	mov	r0, r6
  403ba8:	4639      	mov	r1, r7
  403baa:	f001 fe63 	bl	405874 <__aeabi_dmul>
  403bae:	460f      	mov	r7, r1
  403bb0:	4606      	mov	r6, r0
  403bb2:	f002 f90f 	bl	405dd4 <__aeabi_d2iz>
  403bb6:	4680      	mov	r8, r0
  403bb8:	f001 fdf6 	bl	4057a8 <__aeabi_i2d>
  403bbc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403bc0:	4602      	mov	r2, r0
  403bc2:	460b      	mov	r3, r1
  403bc4:	4630      	mov	r0, r6
  403bc6:	4639      	mov	r1, r7
  403bc8:	f001 fca0 	bl	40550c <__aeabi_dsub>
  403bcc:	f805 8b01 	strb.w	r8, [r5], #1
  403bd0:	454d      	cmp	r5, r9
  403bd2:	4606      	mov	r6, r0
  403bd4:	460f      	mov	r7, r1
  403bd6:	d1e4      	bne.n	403ba2 <_dtoa_r+0xc82>
  403bd8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403bdc:	4b3b      	ldr	r3, [pc, #236]	; (403ccc <_dtoa_r+0xdac>)
  403bde:	2200      	movs	r2, #0
  403be0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403be4:	f001 fc94 	bl	405510 <__adddf3>
  403be8:	4632      	mov	r2, r6
  403bea:	463b      	mov	r3, r7
  403bec:	f002 f8b4 	bl	405d58 <__aeabi_dcmplt>
  403bf0:	2800      	cmp	r0, #0
  403bf2:	d046      	beq.n	403c82 <_dtoa_r+0xd62>
  403bf4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403bf6:	9302      	str	r3, [sp, #8]
  403bf8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403bfc:	f7ff bb43 	b.w	403286 <_dtoa_r+0x366>
  403c00:	f04f 0800 	mov.w	r8, #0
  403c04:	4646      	mov	r6, r8
  403c06:	e6a9      	b.n	40395c <_dtoa_r+0xa3c>
  403c08:	9b08      	ldr	r3, [sp, #32]
  403c0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403c0c:	1a9d      	subs	r5, r3, r2
  403c0e:	2300      	movs	r3, #0
  403c10:	f7ff bb71 	b.w	4032f6 <_dtoa_r+0x3d6>
  403c14:	9b18      	ldr	r3, [sp, #96]	; 0x60
  403c16:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403c18:	9d08      	ldr	r5, [sp, #32]
  403c1a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403c1e:	f7ff bb6a 	b.w	4032f6 <_dtoa_r+0x3d6>
  403c22:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  403c26:	f04f 0a02 	mov.w	sl, #2
  403c2a:	e56e      	b.n	40370a <_dtoa_r+0x7ea>
  403c2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403c2e:	2b00      	cmp	r3, #0
  403c30:	f43f aeb8 	beq.w	4039a4 <_dtoa_r+0xa84>
  403c34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403c36:	2b00      	cmp	r3, #0
  403c38:	f77f aede 	ble.w	4039f8 <_dtoa_r+0xad8>
  403c3c:	2200      	movs	r2, #0
  403c3e:	4b24      	ldr	r3, [pc, #144]	; (403cd0 <_dtoa_r+0xdb0>)
  403c40:	4638      	mov	r0, r7
  403c42:	4641      	mov	r1, r8
  403c44:	f001 fe16 	bl	405874 <__aeabi_dmul>
  403c48:	4607      	mov	r7, r0
  403c4a:	4688      	mov	r8, r1
  403c4c:	f10a 0001 	add.w	r0, sl, #1
  403c50:	f001 fdaa 	bl	4057a8 <__aeabi_i2d>
  403c54:	463a      	mov	r2, r7
  403c56:	4643      	mov	r3, r8
  403c58:	f001 fe0c 	bl	405874 <__aeabi_dmul>
  403c5c:	2200      	movs	r2, #0
  403c5e:	4b17      	ldr	r3, [pc, #92]	; (403cbc <_dtoa_r+0xd9c>)
  403c60:	f001 fc56 	bl	405510 <__adddf3>
  403c64:	9a02      	ldr	r2, [sp, #8]
  403c66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403c68:	9312      	str	r3, [sp, #72]	; 0x48
  403c6a:	3a01      	subs	r2, #1
  403c6c:	4605      	mov	r5, r0
  403c6e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403c72:	9215      	str	r2, [sp, #84]	; 0x54
  403c74:	e56a      	b.n	40374c <_dtoa_r+0x82c>
  403c76:	2239      	movs	r2, #57	; 0x39
  403c78:	46b3      	mov	fp, r6
  403c7a:	703a      	strb	r2, [r7, #0]
  403c7c:	9e06      	ldr	r6, [sp, #24]
  403c7e:	1c7d      	adds	r5, r7, #1
  403c80:	e4c0      	b.n	403604 <_dtoa_r+0x6e4>
  403c82:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  403c86:	2000      	movs	r0, #0
  403c88:	4910      	ldr	r1, [pc, #64]	; (403ccc <_dtoa_r+0xdac>)
  403c8a:	f001 fc3f 	bl	40550c <__aeabi_dsub>
  403c8e:	4632      	mov	r2, r6
  403c90:	463b      	mov	r3, r7
  403c92:	f002 f87f 	bl	405d94 <__aeabi_dcmpgt>
  403c96:	b908      	cbnz	r0, 403c9c <_dtoa_r+0xd7c>
  403c98:	e6ae      	b.n	4039f8 <_dtoa_r+0xad8>
  403c9a:	4615      	mov	r5, r2
  403c9c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403ca0:	2b30      	cmp	r3, #48	; 0x30
  403ca2:	f105 32ff 	add.w	r2, r5, #4294967295
  403ca6:	d0f8      	beq.n	403c9a <_dtoa_r+0xd7a>
  403ca8:	e5d7      	b.n	40385a <_dtoa_r+0x93a>
  403caa:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403cae:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403cb0:	9302      	str	r3, [sp, #8]
  403cb2:	f7ff bae8 	b.w	403286 <_dtoa_r+0x366>
  403cb6:	970c      	str	r7, [sp, #48]	; 0x30
  403cb8:	f7ff bba5 	b.w	403406 <_dtoa_r+0x4e6>
  403cbc:	401c0000 	.word	0x401c0000
  403cc0:	40140000 	.word	0x40140000
  403cc4:	00406c28 	.word	0x00406c28
  403cc8:	00406c00 	.word	0x00406c00
  403ccc:	3fe00000 	.word	0x3fe00000
  403cd0:	40240000 	.word	0x40240000
  403cd4:	2b39      	cmp	r3, #57	; 0x39
  403cd6:	f8cd b018 	str.w	fp, [sp, #24]
  403cda:	46d0      	mov	r8, sl
  403cdc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403ce0:	469a      	mov	sl, r3
  403ce2:	d0c8      	beq.n	403c76 <_dtoa_r+0xd56>
  403ce4:	f1bb 0f00 	cmp.w	fp, #0
  403ce8:	f73f aebf 	bgt.w	403a6a <_dtoa_r+0xb4a>
  403cec:	e6bf      	b.n	403a6e <_dtoa_r+0xb4e>
  403cee:	f47f aebe 	bne.w	403a6e <_dtoa_r+0xb4e>
  403cf2:	f01a 0f01 	tst.w	sl, #1
  403cf6:	f43f aeba 	beq.w	403a6e <_dtoa_r+0xb4e>
  403cfa:	e6b2      	b.n	403a62 <_dtoa_r+0xb42>
  403cfc:	f04f 0800 	mov.w	r8, #0
  403d00:	4646      	mov	r6, r8
  403d02:	e5e9      	b.n	4038d8 <_dtoa_r+0x9b8>
  403d04:	4631      	mov	r1, r6
  403d06:	2300      	movs	r3, #0
  403d08:	220a      	movs	r2, #10
  403d0a:	4620      	mov	r0, r4
  403d0c:	f000 fc36 	bl	40457c <__multadd>
  403d10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d12:	2b00      	cmp	r3, #0
  403d14:	4606      	mov	r6, r0
  403d16:	dd0a      	ble.n	403d2e <_dtoa_r+0xe0e>
  403d18:	930a      	str	r3, [sp, #40]	; 0x28
  403d1a:	f7ff bbaa 	b.w	403472 <_dtoa_r+0x552>
  403d1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403d20:	2b02      	cmp	r3, #2
  403d22:	dc23      	bgt.n	403d6c <_dtoa_r+0xe4c>
  403d24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d26:	e43b      	b.n	4035a0 <_dtoa_r+0x680>
  403d28:	f04f 0a02 	mov.w	sl, #2
  403d2c:	e4ed      	b.n	40370a <_dtoa_r+0x7ea>
  403d2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403d30:	2b02      	cmp	r3, #2
  403d32:	dc1b      	bgt.n	403d6c <_dtoa_r+0xe4c>
  403d34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d36:	e7ef      	b.n	403d18 <_dtoa_r+0xdf8>
  403d38:	2500      	movs	r5, #0
  403d3a:	6465      	str	r5, [r4, #68]	; 0x44
  403d3c:	4629      	mov	r1, r5
  403d3e:	4620      	mov	r0, r4
  403d40:	f000 fbec 	bl	40451c <_Balloc>
  403d44:	f04f 33ff 	mov.w	r3, #4294967295
  403d48:	930a      	str	r3, [sp, #40]	; 0x28
  403d4a:	930f      	str	r3, [sp, #60]	; 0x3c
  403d4c:	2301      	movs	r3, #1
  403d4e:	9004      	str	r0, [sp, #16]
  403d50:	9525      	str	r5, [sp, #148]	; 0x94
  403d52:	6420      	str	r0, [r4, #64]	; 0x40
  403d54:	930b      	str	r3, [sp, #44]	; 0x2c
  403d56:	f7ff b9dd 	b.w	403114 <_dtoa_r+0x1f4>
  403d5a:	2501      	movs	r5, #1
  403d5c:	f7ff b9a5 	b.w	4030aa <_dtoa_r+0x18a>
  403d60:	f43f ab69 	beq.w	403436 <_dtoa_r+0x516>
  403d64:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  403d68:	f7ff bbf9 	b.w	40355e <_dtoa_r+0x63e>
  403d6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403d6e:	930a      	str	r3, [sp, #40]	; 0x28
  403d70:	e5e5      	b.n	40393e <_dtoa_r+0xa1e>
  403d72:	bf00      	nop

00403d74 <__libc_fini_array>:
  403d74:	b538      	push	{r3, r4, r5, lr}
  403d76:	4c0a      	ldr	r4, [pc, #40]	; (403da0 <__libc_fini_array+0x2c>)
  403d78:	4d0a      	ldr	r5, [pc, #40]	; (403da4 <__libc_fini_array+0x30>)
  403d7a:	1b64      	subs	r4, r4, r5
  403d7c:	10a4      	asrs	r4, r4, #2
  403d7e:	d00a      	beq.n	403d96 <__libc_fini_array+0x22>
  403d80:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403d84:	3b01      	subs	r3, #1
  403d86:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  403d8a:	3c01      	subs	r4, #1
  403d8c:	f855 3904 	ldr.w	r3, [r5], #-4
  403d90:	4798      	blx	r3
  403d92:	2c00      	cmp	r4, #0
  403d94:	d1f9      	bne.n	403d8a <__libc_fini_array+0x16>
  403d96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403d9a:	f003 b843 	b.w	406e24 <_fini>
  403d9e:	bf00      	nop
  403da0:	00406e34 	.word	0x00406e34
  403da4:	00406e30 	.word	0x00406e30

00403da8 <_localeconv_r>:
  403da8:	4a04      	ldr	r2, [pc, #16]	; (403dbc <_localeconv_r+0x14>)
  403daa:	4b05      	ldr	r3, [pc, #20]	; (403dc0 <_localeconv_r+0x18>)
  403dac:	6812      	ldr	r2, [r2, #0]
  403dae:	6b50      	ldr	r0, [r2, #52]	; 0x34
  403db0:	2800      	cmp	r0, #0
  403db2:	bf08      	it	eq
  403db4:	4618      	moveq	r0, r3
  403db6:	30f0      	adds	r0, #240	; 0xf0
  403db8:	4770      	bx	lr
  403dba:	bf00      	nop
  403dbc:	20400024 	.word	0x20400024
  403dc0:	20400864 	.word	0x20400864

00403dc4 <__retarget_lock_acquire_recursive>:
  403dc4:	4770      	bx	lr
  403dc6:	bf00      	nop

00403dc8 <__retarget_lock_release_recursive>:
  403dc8:	4770      	bx	lr
  403dca:	bf00      	nop

00403dcc <_malloc_r>:
  403dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403dd0:	f101 060b 	add.w	r6, r1, #11
  403dd4:	2e16      	cmp	r6, #22
  403dd6:	b083      	sub	sp, #12
  403dd8:	4605      	mov	r5, r0
  403dda:	f240 809e 	bls.w	403f1a <_malloc_r+0x14e>
  403dde:	f036 0607 	bics.w	r6, r6, #7
  403de2:	f100 80bd 	bmi.w	403f60 <_malloc_r+0x194>
  403de6:	42b1      	cmp	r1, r6
  403de8:	f200 80ba 	bhi.w	403f60 <_malloc_r+0x194>
  403dec:	f000 fb8a 	bl	404504 <__malloc_lock>
  403df0:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403df4:	f0c0 8293 	bcc.w	40431e <_malloc_r+0x552>
  403df8:	0a73      	lsrs	r3, r6, #9
  403dfa:	f000 80b8 	beq.w	403f6e <_malloc_r+0x1a2>
  403dfe:	2b04      	cmp	r3, #4
  403e00:	f200 8179 	bhi.w	4040f6 <_malloc_r+0x32a>
  403e04:	09b3      	lsrs	r3, r6, #6
  403e06:	f103 0039 	add.w	r0, r3, #57	; 0x39
  403e0a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  403e0e:	00c3      	lsls	r3, r0, #3
  403e10:	4fbf      	ldr	r7, [pc, #764]	; (404110 <_malloc_r+0x344>)
  403e12:	443b      	add	r3, r7
  403e14:	f1a3 0108 	sub.w	r1, r3, #8
  403e18:	685c      	ldr	r4, [r3, #4]
  403e1a:	42a1      	cmp	r1, r4
  403e1c:	d106      	bne.n	403e2c <_malloc_r+0x60>
  403e1e:	e00c      	b.n	403e3a <_malloc_r+0x6e>
  403e20:	2a00      	cmp	r2, #0
  403e22:	f280 80aa 	bge.w	403f7a <_malloc_r+0x1ae>
  403e26:	68e4      	ldr	r4, [r4, #12]
  403e28:	42a1      	cmp	r1, r4
  403e2a:	d006      	beq.n	403e3a <_malloc_r+0x6e>
  403e2c:	6863      	ldr	r3, [r4, #4]
  403e2e:	f023 0303 	bic.w	r3, r3, #3
  403e32:	1b9a      	subs	r2, r3, r6
  403e34:	2a0f      	cmp	r2, #15
  403e36:	ddf3      	ble.n	403e20 <_malloc_r+0x54>
  403e38:	4670      	mov	r0, lr
  403e3a:	693c      	ldr	r4, [r7, #16]
  403e3c:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404124 <_malloc_r+0x358>
  403e40:	4574      	cmp	r4, lr
  403e42:	f000 81ab 	beq.w	40419c <_malloc_r+0x3d0>
  403e46:	6863      	ldr	r3, [r4, #4]
  403e48:	f023 0303 	bic.w	r3, r3, #3
  403e4c:	1b9a      	subs	r2, r3, r6
  403e4e:	2a0f      	cmp	r2, #15
  403e50:	f300 8190 	bgt.w	404174 <_malloc_r+0x3a8>
  403e54:	2a00      	cmp	r2, #0
  403e56:	f8c7 e014 	str.w	lr, [r7, #20]
  403e5a:	f8c7 e010 	str.w	lr, [r7, #16]
  403e5e:	f280 809d 	bge.w	403f9c <_malloc_r+0x1d0>
  403e62:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403e66:	f080 8161 	bcs.w	40412c <_malloc_r+0x360>
  403e6a:	08db      	lsrs	r3, r3, #3
  403e6c:	f103 0c01 	add.w	ip, r3, #1
  403e70:	1099      	asrs	r1, r3, #2
  403e72:	687a      	ldr	r2, [r7, #4]
  403e74:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  403e78:	f8c4 8008 	str.w	r8, [r4, #8]
  403e7c:	2301      	movs	r3, #1
  403e7e:	408b      	lsls	r3, r1
  403e80:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  403e84:	4313      	orrs	r3, r2
  403e86:	3908      	subs	r1, #8
  403e88:	60e1      	str	r1, [r4, #12]
  403e8a:	607b      	str	r3, [r7, #4]
  403e8c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  403e90:	f8c8 400c 	str.w	r4, [r8, #12]
  403e94:	1082      	asrs	r2, r0, #2
  403e96:	2401      	movs	r4, #1
  403e98:	4094      	lsls	r4, r2
  403e9a:	429c      	cmp	r4, r3
  403e9c:	f200 808b 	bhi.w	403fb6 <_malloc_r+0x1ea>
  403ea0:	421c      	tst	r4, r3
  403ea2:	d106      	bne.n	403eb2 <_malloc_r+0xe6>
  403ea4:	f020 0003 	bic.w	r0, r0, #3
  403ea8:	0064      	lsls	r4, r4, #1
  403eaa:	421c      	tst	r4, r3
  403eac:	f100 0004 	add.w	r0, r0, #4
  403eb0:	d0fa      	beq.n	403ea8 <_malloc_r+0xdc>
  403eb2:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  403eb6:	46cc      	mov	ip, r9
  403eb8:	4680      	mov	r8, r0
  403eba:	f8dc 300c 	ldr.w	r3, [ip, #12]
  403ebe:	459c      	cmp	ip, r3
  403ec0:	d107      	bne.n	403ed2 <_malloc_r+0x106>
  403ec2:	e16d      	b.n	4041a0 <_malloc_r+0x3d4>
  403ec4:	2a00      	cmp	r2, #0
  403ec6:	f280 817b 	bge.w	4041c0 <_malloc_r+0x3f4>
  403eca:	68db      	ldr	r3, [r3, #12]
  403ecc:	459c      	cmp	ip, r3
  403ece:	f000 8167 	beq.w	4041a0 <_malloc_r+0x3d4>
  403ed2:	6859      	ldr	r1, [r3, #4]
  403ed4:	f021 0103 	bic.w	r1, r1, #3
  403ed8:	1b8a      	subs	r2, r1, r6
  403eda:	2a0f      	cmp	r2, #15
  403edc:	ddf2      	ble.n	403ec4 <_malloc_r+0xf8>
  403ede:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  403ee2:	f8d3 8008 	ldr.w	r8, [r3, #8]
  403ee6:	9300      	str	r3, [sp, #0]
  403ee8:	199c      	adds	r4, r3, r6
  403eea:	4628      	mov	r0, r5
  403eec:	f046 0601 	orr.w	r6, r6, #1
  403ef0:	f042 0501 	orr.w	r5, r2, #1
  403ef4:	605e      	str	r6, [r3, #4]
  403ef6:	f8c8 c00c 	str.w	ip, [r8, #12]
  403efa:	f8cc 8008 	str.w	r8, [ip, #8]
  403efe:	617c      	str	r4, [r7, #20]
  403f00:	613c      	str	r4, [r7, #16]
  403f02:	f8c4 e00c 	str.w	lr, [r4, #12]
  403f06:	f8c4 e008 	str.w	lr, [r4, #8]
  403f0a:	6065      	str	r5, [r4, #4]
  403f0c:	505a      	str	r2, [r3, r1]
  403f0e:	f000 faff 	bl	404510 <__malloc_unlock>
  403f12:	9b00      	ldr	r3, [sp, #0]
  403f14:	f103 0408 	add.w	r4, r3, #8
  403f18:	e01e      	b.n	403f58 <_malloc_r+0x18c>
  403f1a:	2910      	cmp	r1, #16
  403f1c:	d820      	bhi.n	403f60 <_malloc_r+0x194>
  403f1e:	f000 faf1 	bl	404504 <__malloc_lock>
  403f22:	2610      	movs	r6, #16
  403f24:	2318      	movs	r3, #24
  403f26:	2002      	movs	r0, #2
  403f28:	4f79      	ldr	r7, [pc, #484]	; (404110 <_malloc_r+0x344>)
  403f2a:	443b      	add	r3, r7
  403f2c:	f1a3 0208 	sub.w	r2, r3, #8
  403f30:	685c      	ldr	r4, [r3, #4]
  403f32:	4294      	cmp	r4, r2
  403f34:	f000 813d 	beq.w	4041b2 <_malloc_r+0x3e6>
  403f38:	6863      	ldr	r3, [r4, #4]
  403f3a:	68e1      	ldr	r1, [r4, #12]
  403f3c:	68a6      	ldr	r6, [r4, #8]
  403f3e:	f023 0303 	bic.w	r3, r3, #3
  403f42:	4423      	add	r3, r4
  403f44:	4628      	mov	r0, r5
  403f46:	685a      	ldr	r2, [r3, #4]
  403f48:	60f1      	str	r1, [r6, #12]
  403f4a:	f042 0201 	orr.w	r2, r2, #1
  403f4e:	608e      	str	r6, [r1, #8]
  403f50:	605a      	str	r2, [r3, #4]
  403f52:	f000 fadd 	bl	404510 <__malloc_unlock>
  403f56:	3408      	adds	r4, #8
  403f58:	4620      	mov	r0, r4
  403f5a:	b003      	add	sp, #12
  403f5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f60:	2400      	movs	r4, #0
  403f62:	230c      	movs	r3, #12
  403f64:	4620      	mov	r0, r4
  403f66:	602b      	str	r3, [r5, #0]
  403f68:	b003      	add	sp, #12
  403f6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f6e:	2040      	movs	r0, #64	; 0x40
  403f70:	f44f 7300 	mov.w	r3, #512	; 0x200
  403f74:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  403f78:	e74a      	b.n	403e10 <_malloc_r+0x44>
  403f7a:	4423      	add	r3, r4
  403f7c:	68e1      	ldr	r1, [r4, #12]
  403f7e:	685a      	ldr	r2, [r3, #4]
  403f80:	68a6      	ldr	r6, [r4, #8]
  403f82:	f042 0201 	orr.w	r2, r2, #1
  403f86:	60f1      	str	r1, [r6, #12]
  403f88:	4628      	mov	r0, r5
  403f8a:	608e      	str	r6, [r1, #8]
  403f8c:	605a      	str	r2, [r3, #4]
  403f8e:	f000 fabf 	bl	404510 <__malloc_unlock>
  403f92:	3408      	adds	r4, #8
  403f94:	4620      	mov	r0, r4
  403f96:	b003      	add	sp, #12
  403f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403f9c:	4423      	add	r3, r4
  403f9e:	4628      	mov	r0, r5
  403fa0:	685a      	ldr	r2, [r3, #4]
  403fa2:	f042 0201 	orr.w	r2, r2, #1
  403fa6:	605a      	str	r2, [r3, #4]
  403fa8:	f000 fab2 	bl	404510 <__malloc_unlock>
  403fac:	3408      	adds	r4, #8
  403fae:	4620      	mov	r0, r4
  403fb0:	b003      	add	sp, #12
  403fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403fb6:	68bc      	ldr	r4, [r7, #8]
  403fb8:	6863      	ldr	r3, [r4, #4]
  403fba:	f023 0803 	bic.w	r8, r3, #3
  403fbe:	45b0      	cmp	r8, r6
  403fc0:	d304      	bcc.n	403fcc <_malloc_r+0x200>
  403fc2:	eba8 0306 	sub.w	r3, r8, r6
  403fc6:	2b0f      	cmp	r3, #15
  403fc8:	f300 8085 	bgt.w	4040d6 <_malloc_r+0x30a>
  403fcc:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404128 <_malloc_r+0x35c>
  403fd0:	4b50      	ldr	r3, [pc, #320]	; (404114 <_malloc_r+0x348>)
  403fd2:	f8d9 2000 	ldr.w	r2, [r9]
  403fd6:	681b      	ldr	r3, [r3, #0]
  403fd8:	3201      	adds	r2, #1
  403fda:	4433      	add	r3, r6
  403fdc:	eb04 0a08 	add.w	sl, r4, r8
  403fe0:	f000 8155 	beq.w	40428e <_malloc_r+0x4c2>
  403fe4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  403fe8:	330f      	adds	r3, #15
  403fea:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  403fee:	f02b 0b0f 	bic.w	fp, fp, #15
  403ff2:	4659      	mov	r1, fp
  403ff4:	4628      	mov	r0, r5
  403ff6:	f000 fd8b 	bl	404b10 <_sbrk_r>
  403ffa:	1c41      	adds	r1, r0, #1
  403ffc:	4602      	mov	r2, r0
  403ffe:	f000 80fc 	beq.w	4041fa <_malloc_r+0x42e>
  404002:	4582      	cmp	sl, r0
  404004:	f200 80f7 	bhi.w	4041f6 <_malloc_r+0x42a>
  404008:	4b43      	ldr	r3, [pc, #268]	; (404118 <_malloc_r+0x34c>)
  40400a:	6819      	ldr	r1, [r3, #0]
  40400c:	4459      	add	r1, fp
  40400e:	6019      	str	r1, [r3, #0]
  404010:	f000 814d 	beq.w	4042ae <_malloc_r+0x4e2>
  404014:	f8d9 0000 	ldr.w	r0, [r9]
  404018:	3001      	adds	r0, #1
  40401a:	bf1b      	ittet	ne
  40401c:	eba2 0a0a 	subne.w	sl, r2, sl
  404020:	4451      	addne	r1, sl
  404022:	f8c9 2000 	streq.w	r2, [r9]
  404026:	6019      	strne	r1, [r3, #0]
  404028:	f012 0107 	ands.w	r1, r2, #7
  40402c:	f000 8115 	beq.w	40425a <_malloc_r+0x48e>
  404030:	f1c1 0008 	rsb	r0, r1, #8
  404034:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404038:	4402      	add	r2, r0
  40403a:	3108      	adds	r1, #8
  40403c:	eb02 090b 	add.w	r9, r2, fp
  404040:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404044:	eba1 0909 	sub.w	r9, r1, r9
  404048:	4649      	mov	r1, r9
  40404a:	4628      	mov	r0, r5
  40404c:	9301      	str	r3, [sp, #4]
  40404e:	9200      	str	r2, [sp, #0]
  404050:	f000 fd5e 	bl	404b10 <_sbrk_r>
  404054:	1c43      	adds	r3, r0, #1
  404056:	e89d 000c 	ldmia.w	sp, {r2, r3}
  40405a:	f000 8143 	beq.w	4042e4 <_malloc_r+0x518>
  40405e:	1a80      	subs	r0, r0, r2
  404060:	4448      	add	r0, r9
  404062:	f040 0001 	orr.w	r0, r0, #1
  404066:	6819      	ldr	r1, [r3, #0]
  404068:	60ba      	str	r2, [r7, #8]
  40406a:	4449      	add	r1, r9
  40406c:	42bc      	cmp	r4, r7
  40406e:	6050      	str	r0, [r2, #4]
  404070:	6019      	str	r1, [r3, #0]
  404072:	d017      	beq.n	4040a4 <_malloc_r+0x2d8>
  404074:	f1b8 0f0f 	cmp.w	r8, #15
  404078:	f240 80fb 	bls.w	404272 <_malloc_r+0x4a6>
  40407c:	6860      	ldr	r0, [r4, #4]
  40407e:	f1a8 020c 	sub.w	r2, r8, #12
  404082:	f022 0207 	bic.w	r2, r2, #7
  404086:	eb04 0e02 	add.w	lr, r4, r2
  40408a:	f000 0001 	and.w	r0, r0, #1
  40408e:	f04f 0c05 	mov.w	ip, #5
  404092:	4310      	orrs	r0, r2
  404094:	2a0f      	cmp	r2, #15
  404096:	6060      	str	r0, [r4, #4]
  404098:	f8ce c004 	str.w	ip, [lr, #4]
  40409c:	f8ce c008 	str.w	ip, [lr, #8]
  4040a0:	f200 8117 	bhi.w	4042d2 <_malloc_r+0x506>
  4040a4:	4b1d      	ldr	r3, [pc, #116]	; (40411c <_malloc_r+0x350>)
  4040a6:	68bc      	ldr	r4, [r7, #8]
  4040a8:	681a      	ldr	r2, [r3, #0]
  4040aa:	4291      	cmp	r1, r2
  4040ac:	bf88      	it	hi
  4040ae:	6019      	strhi	r1, [r3, #0]
  4040b0:	4b1b      	ldr	r3, [pc, #108]	; (404120 <_malloc_r+0x354>)
  4040b2:	681a      	ldr	r2, [r3, #0]
  4040b4:	4291      	cmp	r1, r2
  4040b6:	6862      	ldr	r2, [r4, #4]
  4040b8:	bf88      	it	hi
  4040ba:	6019      	strhi	r1, [r3, #0]
  4040bc:	f022 0203 	bic.w	r2, r2, #3
  4040c0:	4296      	cmp	r6, r2
  4040c2:	eba2 0306 	sub.w	r3, r2, r6
  4040c6:	d801      	bhi.n	4040cc <_malloc_r+0x300>
  4040c8:	2b0f      	cmp	r3, #15
  4040ca:	dc04      	bgt.n	4040d6 <_malloc_r+0x30a>
  4040cc:	4628      	mov	r0, r5
  4040ce:	f000 fa1f 	bl	404510 <__malloc_unlock>
  4040d2:	2400      	movs	r4, #0
  4040d4:	e740      	b.n	403f58 <_malloc_r+0x18c>
  4040d6:	19a2      	adds	r2, r4, r6
  4040d8:	f043 0301 	orr.w	r3, r3, #1
  4040dc:	f046 0601 	orr.w	r6, r6, #1
  4040e0:	6066      	str	r6, [r4, #4]
  4040e2:	4628      	mov	r0, r5
  4040e4:	60ba      	str	r2, [r7, #8]
  4040e6:	6053      	str	r3, [r2, #4]
  4040e8:	f000 fa12 	bl	404510 <__malloc_unlock>
  4040ec:	3408      	adds	r4, #8
  4040ee:	4620      	mov	r0, r4
  4040f0:	b003      	add	sp, #12
  4040f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040f6:	2b14      	cmp	r3, #20
  4040f8:	d971      	bls.n	4041de <_malloc_r+0x412>
  4040fa:	2b54      	cmp	r3, #84	; 0x54
  4040fc:	f200 80a3 	bhi.w	404246 <_malloc_r+0x47a>
  404100:	0b33      	lsrs	r3, r6, #12
  404102:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404106:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40410a:	00c3      	lsls	r3, r0, #3
  40410c:	e680      	b.n	403e10 <_malloc_r+0x44>
  40410e:	bf00      	nop
  404110:	20400454 	.word	0x20400454
  404114:	20400ca4 	.word	0x20400ca4
  404118:	20400c74 	.word	0x20400c74
  40411c:	20400c9c 	.word	0x20400c9c
  404120:	20400ca0 	.word	0x20400ca0
  404124:	2040045c 	.word	0x2040045c
  404128:	2040085c 	.word	0x2040085c
  40412c:	0a5a      	lsrs	r2, r3, #9
  40412e:	2a04      	cmp	r2, #4
  404130:	d95b      	bls.n	4041ea <_malloc_r+0x41e>
  404132:	2a14      	cmp	r2, #20
  404134:	f200 80ae 	bhi.w	404294 <_malloc_r+0x4c8>
  404138:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  40413c:	00c9      	lsls	r1, r1, #3
  40413e:	325b      	adds	r2, #91	; 0x5b
  404140:	eb07 0c01 	add.w	ip, r7, r1
  404144:	5879      	ldr	r1, [r7, r1]
  404146:	f1ac 0c08 	sub.w	ip, ip, #8
  40414a:	458c      	cmp	ip, r1
  40414c:	f000 8088 	beq.w	404260 <_malloc_r+0x494>
  404150:	684a      	ldr	r2, [r1, #4]
  404152:	f022 0203 	bic.w	r2, r2, #3
  404156:	4293      	cmp	r3, r2
  404158:	d273      	bcs.n	404242 <_malloc_r+0x476>
  40415a:	6889      	ldr	r1, [r1, #8]
  40415c:	458c      	cmp	ip, r1
  40415e:	d1f7      	bne.n	404150 <_malloc_r+0x384>
  404160:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404164:	687b      	ldr	r3, [r7, #4]
  404166:	60e2      	str	r2, [r4, #12]
  404168:	f8c4 c008 	str.w	ip, [r4, #8]
  40416c:	6094      	str	r4, [r2, #8]
  40416e:	f8cc 400c 	str.w	r4, [ip, #12]
  404172:	e68f      	b.n	403e94 <_malloc_r+0xc8>
  404174:	19a1      	adds	r1, r4, r6
  404176:	f046 0c01 	orr.w	ip, r6, #1
  40417a:	f042 0601 	orr.w	r6, r2, #1
  40417e:	f8c4 c004 	str.w	ip, [r4, #4]
  404182:	4628      	mov	r0, r5
  404184:	6179      	str	r1, [r7, #20]
  404186:	6139      	str	r1, [r7, #16]
  404188:	f8c1 e00c 	str.w	lr, [r1, #12]
  40418c:	f8c1 e008 	str.w	lr, [r1, #8]
  404190:	604e      	str	r6, [r1, #4]
  404192:	50e2      	str	r2, [r4, r3]
  404194:	f000 f9bc 	bl	404510 <__malloc_unlock>
  404198:	3408      	adds	r4, #8
  40419a:	e6dd      	b.n	403f58 <_malloc_r+0x18c>
  40419c:	687b      	ldr	r3, [r7, #4]
  40419e:	e679      	b.n	403e94 <_malloc_r+0xc8>
  4041a0:	f108 0801 	add.w	r8, r8, #1
  4041a4:	f018 0f03 	tst.w	r8, #3
  4041a8:	f10c 0c08 	add.w	ip, ip, #8
  4041ac:	f47f ae85 	bne.w	403eba <_malloc_r+0xee>
  4041b0:	e02d      	b.n	40420e <_malloc_r+0x442>
  4041b2:	68dc      	ldr	r4, [r3, #12]
  4041b4:	42a3      	cmp	r3, r4
  4041b6:	bf08      	it	eq
  4041b8:	3002      	addeq	r0, #2
  4041ba:	f43f ae3e 	beq.w	403e3a <_malloc_r+0x6e>
  4041be:	e6bb      	b.n	403f38 <_malloc_r+0x16c>
  4041c0:	4419      	add	r1, r3
  4041c2:	461c      	mov	r4, r3
  4041c4:	684a      	ldr	r2, [r1, #4]
  4041c6:	68db      	ldr	r3, [r3, #12]
  4041c8:	f854 6f08 	ldr.w	r6, [r4, #8]!
  4041cc:	f042 0201 	orr.w	r2, r2, #1
  4041d0:	604a      	str	r2, [r1, #4]
  4041d2:	4628      	mov	r0, r5
  4041d4:	60f3      	str	r3, [r6, #12]
  4041d6:	609e      	str	r6, [r3, #8]
  4041d8:	f000 f99a 	bl	404510 <__malloc_unlock>
  4041dc:	e6bc      	b.n	403f58 <_malloc_r+0x18c>
  4041de:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  4041e2:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  4041e6:	00c3      	lsls	r3, r0, #3
  4041e8:	e612      	b.n	403e10 <_malloc_r+0x44>
  4041ea:	099a      	lsrs	r2, r3, #6
  4041ec:	f102 0139 	add.w	r1, r2, #57	; 0x39
  4041f0:	00c9      	lsls	r1, r1, #3
  4041f2:	3238      	adds	r2, #56	; 0x38
  4041f4:	e7a4      	b.n	404140 <_malloc_r+0x374>
  4041f6:	42bc      	cmp	r4, r7
  4041f8:	d054      	beq.n	4042a4 <_malloc_r+0x4d8>
  4041fa:	68bc      	ldr	r4, [r7, #8]
  4041fc:	6862      	ldr	r2, [r4, #4]
  4041fe:	f022 0203 	bic.w	r2, r2, #3
  404202:	e75d      	b.n	4040c0 <_malloc_r+0x2f4>
  404204:	f859 3908 	ldr.w	r3, [r9], #-8
  404208:	4599      	cmp	r9, r3
  40420a:	f040 8086 	bne.w	40431a <_malloc_r+0x54e>
  40420e:	f010 0f03 	tst.w	r0, #3
  404212:	f100 30ff 	add.w	r0, r0, #4294967295
  404216:	d1f5      	bne.n	404204 <_malloc_r+0x438>
  404218:	687b      	ldr	r3, [r7, #4]
  40421a:	ea23 0304 	bic.w	r3, r3, r4
  40421e:	607b      	str	r3, [r7, #4]
  404220:	0064      	lsls	r4, r4, #1
  404222:	429c      	cmp	r4, r3
  404224:	f63f aec7 	bhi.w	403fb6 <_malloc_r+0x1ea>
  404228:	2c00      	cmp	r4, #0
  40422a:	f43f aec4 	beq.w	403fb6 <_malloc_r+0x1ea>
  40422e:	421c      	tst	r4, r3
  404230:	4640      	mov	r0, r8
  404232:	f47f ae3e 	bne.w	403eb2 <_malloc_r+0xe6>
  404236:	0064      	lsls	r4, r4, #1
  404238:	421c      	tst	r4, r3
  40423a:	f100 0004 	add.w	r0, r0, #4
  40423e:	d0fa      	beq.n	404236 <_malloc_r+0x46a>
  404240:	e637      	b.n	403eb2 <_malloc_r+0xe6>
  404242:	468c      	mov	ip, r1
  404244:	e78c      	b.n	404160 <_malloc_r+0x394>
  404246:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  40424a:	d815      	bhi.n	404278 <_malloc_r+0x4ac>
  40424c:	0bf3      	lsrs	r3, r6, #15
  40424e:	f103 0078 	add.w	r0, r3, #120	; 0x78
  404252:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  404256:	00c3      	lsls	r3, r0, #3
  404258:	e5da      	b.n	403e10 <_malloc_r+0x44>
  40425a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  40425e:	e6ed      	b.n	40403c <_malloc_r+0x270>
  404260:	687b      	ldr	r3, [r7, #4]
  404262:	1092      	asrs	r2, r2, #2
  404264:	2101      	movs	r1, #1
  404266:	fa01 f202 	lsl.w	r2, r1, r2
  40426a:	4313      	orrs	r3, r2
  40426c:	607b      	str	r3, [r7, #4]
  40426e:	4662      	mov	r2, ip
  404270:	e779      	b.n	404166 <_malloc_r+0x39a>
  404272:	2301      	movs	r3, #1
  404274:	6053      	str	r3, [r2, #4]
  404276:	e729      	b.n	4040cc <_malloc_r+0x300>
  404278:	f240 5254 	movw	r2, #1364	; 0x554
  40427c:	4293      	cmp	r3, r2
  40427e:	d822      	bhi.n	4042c6 <_malloc_r+0x4fa>
  404280:	0cb3      	lsrs	r3, r6, #18
  404282:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404286:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40428a:	00c3      	lsls	r3, r0, #3
  40428c:	e5c0      	b.n	403e10 <_malloc_r+0x44>
  40428e:	f103 0b10 	add.w	fp, r3, #16
  404292:	e6ae      	b.n	403ff2 <_malloc_r+0x226>
  404294:	2a54      	cmp	r2, #84	; 0x54
  404296:	d829      	bhi.n	4042ec <_malloc_r+0x520>
  404298:	0b1a      	lsrs	r2, r3, #12
  40429a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40429e:	00c9      	lsls	r1, r1, #3
  4042a0:	326e      	adds	r2, #110	; 0x6e
  4042a2:	e74d      	b.n	404140 <_malloc_r+0x374>
  4042a4:	4b20      	ldr	r3, [pc, #128]	; (404328 <_malloc_r+0x55c>)
  4042a6:	6819      	ldr	r1, [r3, #0]
  4042a8:	4459      	add	r1, fp
  4042aa:	6019      	str	r1, [r3, #0]
  4042ac:	e6b2      	b.n	404014 <_malloc_r+0x248>
  4042ae:	f3ca 000b 	ubfx	r0, sl, #0, #12
  4042b2:	2800      	cmp	r0, #0
  4042b4:	f47f aeae 	bne.w	404014 <_malloc_r+0x248>
  4042b8:	eb08 030b 	add.w	r3, r8, fp
  4042bc:	68ba      	ldr	r2, [r7, #8]
  4042be:	f043 0301 	orr.w	r3, r3, #1
  4042c2:	6053      	str	r3, [r2, #4]
  4042c4:	e6ee      	b.n	4040a4 <_malloc_r+0x2d8>
  4042c6:	207f      	movs	r0, #127	; 0x7f
  4042c8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  4042cc:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  4042d0:	e59e      	b.n	403e10 <_malloc_r+0x44>
  4042d2:	f104 0108 	add.w	r1, r4, #8
  4042d6:	4628      	mov	r0, r5
  4042d8:	9300      	str	r3, [sp, #0]
  4042da:	f000 fdff 	bl	404edc <_free_r>
  4042de:	9b00      	ldr	r3, [sp, #0]
  4042e0:	6819      	ldr	r1, [r3, #0]
  4042e2:	e6df      	b.n	4040a4 <_malloc_r+0x2d8>
  4042e4:	2001      	movs	r0, #1
  4042e6:	f04f 0900 	mov.w	r9, #0
  4042ea:	e6bc      	b.n	404066 <_malloc_r+0x29a>
  4042ec:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4042f0:	d805      	bhi.n	4042fe <_malloc_r+0x532>
  4042f2:	0bda      	lsrs	r2, r3, #15
  4042f4:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4042f8:	00c9      	lsls	r1, r1, #3
  4042fa:	3277      	adds	r2, #119	; 0x77
  4042fc:	e720      	b.n	404140 <_malloc_r+0x374>
  4042fe:	f240 5154 	movw	r1, #1364	; 0x554
  404302:	428a      	cmp	r2, r1
  404304:	d805      	bhi.n	404312 <_malloc_r+0x546>
  404306:	0c9a      	lsrs	r2, r3, #18
  404308:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40430c:	00c9      	lsls	r1, r1, #3
  40430e:	327c      	adds	r2, #124	; 0x7c
  404310:	e716      	b.n	404140 <_malloc_r+0x374>
  404312:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404316:	227e      	movs	r2, #126	; 0x7e
  404318:	e712      	b.n	404140 <_malloc_r+0x374>
  40431a:	687b      	ldr	r3, [r7, #4]
  40431c:	e780      	b.n	404220 <_malloc_r+0x454>
  40431e:	08f0      	lsrs	r0, r6, #3
  404320:	f106 0308 	add.w	r3, r6, #8
  404324:	e600      	b.n	403f28 <_malloc_r+0x15c>
  404326:	bf00      	nop
  404328:	20400c74 	.word	0x20400c74
  40432c:	00000000 	.word	0x00000000

00404330 <memchr>:
  404330:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  404334:	2a10      	cmp	r2, #16
  404336:	db2b      	blt.n	404390 <memchr+0x60>
  404338:	f010 0f07 	tst.w	r0, #7
  40433c:	d008      	beq.n	404350 <memchr+0x20>
  40433e:	f810 3b01 	ldrb.w	r3, [r0], #1
  404342:	3a01      	subs	r2, #1
  404344:	428b      	cmp	r3, r1
  404346:	d02d      	beq.n	4043a4 <memchr+0x74>
  404348:	f010 0f07 	tst.w	r0, #7
  40434c:	b342      	cbz	r2, 4043a0 <memchr+0x70>
  40434e:	d1f6      	bne.n	40433e <memchr+0xe>
  404350:	b4f0      	push	{r4, r5, r6, r7}
  404352:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404356:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40435a:	f022 0407 	bic.w	r4, r2, #7
  40435e:	f07f 0700 	mvns.w	r7, #0
  404362:	2300      	movs	r3, #0
  404364:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404368:	3c08      	subs	r4, #8
  40436a:	ea85 0501 	eor.w	r5, r5, r1
  40436e:	ea86 0601 	eor.w	r6, r6, r1
  404372:	fa85 f547 	uadd8	r5, r5, r7
  404376:	faa3 f587 	sel	r5, r3, r7
  40437a:	fa86 f647 	uadd8	r6, r6, r7
  40437e:	faa5 f687 	sel	r6, r5, r7
  404382:	b98e      	cbnz	r6, 4043a8 <memchr+0x78>
  404384:	d1ee      	bne.n	404364 <memchr+0x34>
  404386:	bcf0      	pop	{r4, r5, r6, r7}
  404388:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40438c:	f002 0207 	and.w	r2, r2, #7
  404390:	b132      	cbz	r2, 4043a0 <memchr+0x70>
  404392:	f810 3b01 	ldrb.w	r3, [r0], #1
  404396:	3a01      	subs	r2, #1
  404398:	ea83 0301 	eor.w	r3, r3, r1
  40439c:	b113      	cbz	r3, 4043a4 <memchr+0x74>
  40439e:	d1f8      	bne.n	404392 <memchr+0x62>
  4043a0:	2000      	movs	r0, #0
  4043a2:	4770      	bx	lr
  4043a4:	3801      	subs	r0, #1
  4043a6:	4770      	bx	lr
  4043a8:	2d00      	cmp	r5, #0
  4043aa:	bf06      	itte	eq
  4043ac:	4635      	moveq	r5, r6
  4043ae:	3803      	subeq	r0, #3
  4043b0:	3807      	subne	r0, #7
  4043b2:	f015 0f01 	tst.w	r5, #1
  4043b6:	d107      	bne.n	4043c8 <memchr+0x98>
  4043b8:	3001      	adds	r0, #1
  4043ba:	f415 7f80 	tst.w	r5, #256	; 0x100
  4043be:	bf02      	ittt	eq
  4043c0:	3001      	addeq	r0, #1
  4043c2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  4043c6:	3001      	addeq	r0, #1
  4043c8:	bcf0      	pop	{r4, r5, r6, r7}
  4043ca:	3801      	subs	r0, #1
  4043cc:	4770      	bx	lr
  4043ce:	bf00      	nop

004043d0 <memcpy>:
  4043d0:	4684      	mov	ip, r0
  4043d2:	ea41 0300 	orr.w	r3, r1, r0
  4043d6:	f013 0303 	ands.w	r3, r3, #3
  4043da:	d16d      	bne.n	4044b8 <memcpy+0xe8>
  4043dc:	3a40      	subs	r2, #64	; 0x40
  4043de:	d341      	bcc.n	404464 <memcpy+0x94>
  4043e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4043e4:	f840 3b04 	str.w	r3, [r0], #4
  4043e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4043ec:	f840 3b04 	str.w	r3, [r0], #4
  4043f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4043f4:	f840 3b04 	str.w	r3, [r0], #4
  4043f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4043fc:	f840 3b04 	str.w	r3, [r0], #4
  404400:	f851 3b04 	ldr.w	r3, [r1], #4
  404404:	f840 3b04 	str.w	r3, [r0], #4
  404408:	f851 3b04 	ldr.w	r3, [r1], #4
  40440c:	f840 3b04 	str.w	r3, [r0], #4
  404410:	f851 3b04 	ldr.w	r3, [r1], #4
  404414:	f840 3b04 	str.w	r3, [r0], #4
  404418:	f851 3b04 	ldr.w	r3, [r1], #4
  40441c:	f840 3b04 	str.w	r3, [r0], #4
  404420:	f851 3b04 	ldr.w	r3, [r1], #4
  404424:	f840 3b04 	str.w	r3, [r0], #4
  404428:	f851 3b04 	ldr.w	r3, [r1], #4
  40442c:	f840 3b04 	str.w	r3, [r0], #4
  404430:	f851 3b04 	ldr.w	r3, [r1], #4
  404434:	f840 3b04 	str.w	r3, [r0], #4
  404438:	f851 3b04 	ldr.w	r3, [r1], #4
  40443c:	f840 3b04 	str.w	r3, [r0], #4
  404440:	f851 3b04 	ldr.w	r3, [r1], #4
  404444:	f840 3b04 	str.w	r3, [r0], #4
  404448:	f851 3b04 	ldr.w	r3, [r1], #4
  40444c:	f840 3b04 	str.w	r3, [r0], #4
  404450:	f851 3b04 	ldr.w	r3, [r1], #4
  404454:	f840 3b04 	str.w	r3, [r0], #4
  404458:	f851 3b04 	ldr.w	r3, [r1], #4
  40445c:	f840 3b04 	str.w	r3, [r0], #4
  404460:	3a40      	subs	r2, #64	; 0x40
  404462:	d2bd      	bcs.n	4043e0 <memcpy+0x10>
  404464:	3230      	adds	r2, #48	; 0x30
  404466:	d311      	bcc.n	40448c <memcpy+0xbc>
  404468:	f851 3b04 	ldr.w	r3, [r1], #4
  40446c:	f840 3b04 	str.w	r3, [r0], #4
  404470:	f851 3b04 	ldr.w	r3, [r1], #4
  404474:	f840 3b04 	str.w	r3, [r0], #4
  404478:	f851 3b04 	ldr.w	r3, [r1], #4
  40447c:	f840 3b04 	str.w	r3, [r0], #4
  404480:	f851 3b04 	ldr.w	r3, [r1], #4
  404484:	f840 3b04 	str.w	r3, [r0], #4
  404488:	3a10      	subs	r2, #16
  40448a:	d2ed      	bcs.n	404468 <memcpy+0x98>
  40448c:	320c      	adds	r2, #12
  40448e:	d305      	bcc.n	40449c <memcpy+0xcc>
  404490:	f851 3b04 	ldr.w	r3, [r1], #4
  404494:	f840 3b04 	str.w	r3, [r0], #4
  404498:	3a04      	subs	r2, #4
  40449a:	d2f9      	bcs.n	404490 <memcpy+0xc0>
  40449c:	3204      	adds	r2, #4
  40449e:	d008      	beq.n	4044b2 <memcpy+0xe2>
  4044a0:	07d2      	lsls	r2, r2, #31
  4044a2:	bf1c      	itt	ne
  4044a4:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4044a8:	f800 3b01 	strbne.w	r3, [r0], #1
  4044ac:	d301      	bcc.n	4044b2 <memcpy+0xe2>
  4044ae:	880b      	ldrh	r3, [r1, #0]
  4044b0:	8003      	strh	r3, [r0, #0]
  4044b2:	4660      	mov	r0, ip
  4044b4:	4770      	bx	lr
  4044b6:	bf00      	nop
  4044b8:	2a08      	cmp	r2, #8
  4044ba:	d313      	bcc.n	4044e4 <memcpy+0x114>
  4044bc:	078b      	lsls	r3, r1, #30
  4044be:	d08d      	beq.n	4043dc <memcpy+0xc>
  4044c0:	f010 0303 	ands.w	r3, r0, #3
  4044c4:	d08a      	beq.n	4043dc <memcpy+0xc>
  4044c6:	f1c3 0304 	rsb	r3, r3, #4
  4044ca:	1ad2      	subs	r2, r2, r3
  4044cc:	07db      	lsls	r3, r3, #31
  4044ce:	bf1c      	itt	ne
  4044d0:	f811 3b01 	ldrbne.w	r3, [r1], #1
  4044d4:	f800 3b01 	strbne.w	r3, [r0], #1
  4044d8:	d380      	bcc.n	4043dc <memcpy+0xc>
  4044da:	f831 3b02 	ldrh.w	r3, [r1], #2
  4044de:	f820 3b02 	strh.w	r3, [r0], #2
  4044e2:	e77b      	b.n	4043dc <memcpy+0xc>
  4044e4:	3a04      	subs	r2, #4
  4044e6:	d3d9      	bcc.n	40449c <memcpy+0xcc>
  4044e8:	3a01      	subs	r2, #1
  4044ea:	f811 3b01 	ldrb.w	r3, [r1], #1
  4044ee:	f800 3b01 	strb.w	r3, [r0], #1
  4044f2:	d2f9      	bcs.n	4044e8 <memcpy+0x118>
  4044f4:	780b      	ldrb	r3, [r1, #0]
  4044f6:	7003      	strb	r3, [r0, #0]
  4044f8:	784b      	ldrb	r3, [r1, #1]
  4044fa:	7043      	strb	r3, [r0, #1]
  4044fc:	788b      	ldrb	r3, [r1, #2]
  4044fe:	7083      	strb	r3, [r0, #2]
  404500:	4660      	mov	r0, ip
  404502:	4770      	bx	lr

00404504 <__malloc_lock>:
  404504:	4801      	ldr	r0, [pc, #4]	; (40450c <__malloc_lock+0x8>)
  404506:	f7ff bc5d 	b.w	403dc4 <__retarget_lock_acquire_recursive>
  40450a:	bf00      	nop
  40450c:	20400cb8 	.word	0x20400cb8

00404510 <__malloc_unlock>:
  404510:	4801      	ldr	r0, [pc, #4]	; (404518 <__malloc_unlock+0x8>)
  404512:	f7ff bc59 	b.w	403dc8 <__retarget_lock_release_recursive>
  404516:	bf00      	nop
  404518:	20400cb8 	.word	0x20400cb8

0040451c <_Balloc>:
  40451c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40451e:	b570      	push	{r4, r5, r6, lr}
  404520:	4605      	mov	r5, r0
  404522:	460c      	mov	r4, r1
  404524:	b14b      	cbz	r3, 40453a <_Balloc+0x1e>
  404526:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  40452a:	b180      	cbz	r0, 40454e <_Balloc+0x32>
  40452c:	6802      	ldr	r2, [r0, #0]
  40452e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  404532:	2300      	movs	r3, #0
  404534:	6103      	str	r3, [r0, #16]
  404536:	60c3      	str	r3, [r0, #12]
  404538:	bd70      	pop	{r4, r5, r6, pc}
  40453a:	2221      	movs	r2, #33	; 0x21
  40453c:	2104      	movs	r1, #4
  40453e:	f000 fc4d 	bl	404ddc <_calloc_r>
  404542:	64e8      	str	r0, [r5, #76]	; 0x4c
  404544:	4603      	mov	r3, r0
  404546:	2800      	cmp	r0, #0
  404548:	d1ed      	bne.n	404526 <_Balloc+0xa>
  40454a:	2000      	movs	r0, #0
  40454c:	bd70      	pop	{r4, r5, r6, pc}
  40454e:	2101      	movs	r1, #1
  404550:	fa01 f604 	lsl.w	r6, r1, r4
  404554:	1d72      	adds	r2, r6, #5
  404556:	4628      	mov	r0, r5
  404558:	0092      	lsls	r2, r2, #2
  40455a:	f000 fc3f 	bl	404ddc <_calloc_r>
  40455e:	2800      	cmp	r0, #0
  404560:	d0f3      	beq.n	40454a <_Balloc+0x2e>
  404562:	6044      	str	r4, [r0, #4]
  404564:	6086      	str	r6, [r0, #8]
  404566:	e7e4      	b.n	404532 <_Balloc+0x16>

00404568 <_Bfree>:
  404568:	b131      	cbz	r1, 404578 <_Bfree+0x10>
  40456a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40456c:	684a      	ldr	r2, [r1, #4]
  40456e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404572:	6008      	str	r0, [r1, #0]
  404574:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404578:	4770      	bx	lr
  40457a:	bf00      	nop

0040457c <__multadd>:
  40457c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40457e:	690c      	ldr	r4, [r1, #16]
  404580:	b083      	sub	sp, #12
  404582:	460d      	mov	r5, r1
  404584:	4606      	mov	r6, r0
  404586:	f101 0e14 	add.w	lr, r1, #20
  40458a:	2700      	movs	r7, #0
  40458c:	f8de 0000 	ldr.w	r0, [lr]
  404590:	b281      	uxth	r1, r0
  404592:	fb02 3301 	mla	r3, r2, r1, r3
  404596:	0c01      	lsrs	r1, r0, #16
  404598:	0c18      	lsrs	r0, r3, #16
  40459a:	fb02 0101 	mla	r1, r2, r1, r0
  40459e:	b29b      	uxth	r3, r3
  4045a0:	3701      	adds	r7, #1
  4045a2:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  4045a6:	42bc      	cmp	r4, r7
  4045a8:	f84e 3b04 	str.w	r3, [lr], #4
  4045ac:	ea4f 4311 	mov.w	r3, r1, lsr #16
  4045b0:	dcec      	bgt.n	40458c <__multadd+0x10>
  4045b2:	b13b      	cbz	r3, 4045c4 <__multadd+0x48>
  4045b4:	68aa      	ldr	r2, [r5, #8]
  4045b6:	4294      	cmp	r4, r2
  4045b8:	da07      	bge.n	4045ca <__multadd+0x4e>
  4045ba:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  4045be:	3401      	adds	r4, #1
  4045c0:	6153      	str	r3, [r2, #20]
  4045c2:	612c      	str	r4, [r5, #16]
  4045c4:	4628      	mov	r0, r5
  4045c6:	b003      	add	sp, #12
  4045c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4045ca:	6869      	ldr	r1, [r5, #4]
  4045cc:	9301      	str	r3, [sp, #4]
  4045ce:	3101      	adds	r1, #1
  4045d0:	4630      	mov	r0, r6
  4045d2:	f7ff ffa3 	bl	40451c <_Balloc>
  4045d6:	692a      	ldr	r2, [r5, #16]
  4045d8:	3202      	adds	r2, #2
  4045da:	f105 010c 	add.w	r1, r5, #12
  4045de:	4607      	mov	r7, r0
  4045e0:	0092      	lsls	r2, r2, #2
  4045e2:	300c      	adds	r0, #12
  4045e4:	f7ff fef4 	bl	4043d0 <memcpy>
  4045e8:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  4045ea:	6869      	ldr	r1, [r5, #4]
  4045ec:	9b01      	ldr	r3, [sp, #4]
  4045ee:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  4045f2:	6028      	str	r0, [r5, #0]
  4045f4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  4045f8:	463d      	mov	r5, r7
  4045fa:	e7de      	b.n	4045ba <__multadd+0x3e>

004045fc <__hi0bits>:
  4045fc:	0c02      	lsrs	r2, r0, #16
  4045fe:	0412      	lsls	r2, r2, #16
  404600:	4603      	mov	r3, r0
  404602:	b9b2      	cbnz	r2, 404632 <__hi0bits+0x36>
  404604:	0403      	lsls	r3, r0, #16
  404606:	2010      	movs	r0, #16
  404608:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40460c:	bf04      	itt	eq
  40460e:	021b      	lsleq	r3, r3, #8
  404610:	3008      	addeq	r0, #8
  404612:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404616:	bf04      	itt	eq
  404618:	011b      	lsleq	r3, r3, #4
  40461a:	3004      	addeq	r0, #4
  40461c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  404620:	bf04      	itt	eq
  404622:	009b      	lsleq	r3, r3, #2
  404624:	3002      	addeq	r0, #2
  404626:	2b00      	cmp	r3, #0
  404628:	db02      	blt.n	404630 <__hi0bits+0x34>
  40462a:	005b      	lsls	r3, r3, #1
  40462c:	d403      	bmi.n	404636 <__hi0bits+0x3a>
  40462e:	2020      	movs	r0, #32
  404630:	4770      	bx	lr
  404632:	2000      	movs	r0, #0
  404634:	e7e8      	b.n	404608 <__hi0bits+0xc>
  404636:	3001      	adds	r0, #1
  404638:	4770      	bx	lr
  40463a:	bf00      	nop

0040463c <__lo0bits>:
  40463c:	6803      	ldr	r3, [r0, #0]
  40463e:	f013 0207 	ands.w	r2, r3, #7
  404642:	4601      	mov	r1, r0
  404644:	d007      	beq.n	404656 <__lo0bits+0x1a>
  404646:	07da      	lsls	r2, r3, #31
  404648:	d421      	bmi.n	40468e <__lo0bits+0x52>
  40464a:	0798      	lsls	r0, r3, #30
  40464c:	d421      	bmi.n	404692 <__lo0bits+0x56>
  40464e:	089b      	lsrs	r3, r3, #2
  404650:	600b      	str	r3, [r1, #0]
  404652:	2002      	movs	r0, #2
  404654:	4770      	bx	lr
  404656:	b298      	uxth	r0, r3
  404658:	b198      	cbz	r0, 404682 <__lo0bits+0x46>
  40465a:	4610      	mov	r0, r2
  40465c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404660:	bf04      	itt	eq
  404662:	0a1b      	lsreq	r3, r3, #8
  404664:	3008      	addeq	r0, #8
  404666:	071a      	lsls	r2, r3, #28
  404668:	bf04      	itt	eq
  40466a:	091b      	lsreq	r3, r3, #4
  40466c:	3004      	addeq	r0, #4
  40466e:	079a      	lsls	r2, r3, #30
  404670:	bf04      	itt	eq
  404672:	089b      	lsreq	r3, r3, #2
  404674:	3002      	addeq	r0, #2
  404676:	07da      	lsls	r2, r3, #31
  404678:	d407      	bmi.n	40468a <__lo0bits+0x4e>
  40467a:	085b      	lsrs	r3, r3, #1
  40467c:	d104      	bne.n	404688 <__lo0bits+0x4c>
  40467e:	2020      	movs	r0, #32
  404680:	4770      	bx	lr
  404682:	0c1b      	lsrs	r3, r3, #16
  404684:	2010      	movs	r0, #16
  404686:	e7e9      	b.n	40465c <__lo0bits+0x20>
  404688:	3001      	adds	r0, #1
  40468a:	600b      	str	r3, [r1, #0]
  40468c:	4770      	bx	lr
  40468e:	2000      	movs	r0, #0
  404690:	4770      	bx	lr
  404692:	085b      	lsrs	r3, r3, #1
  404694:	600b      	str	r3, [r1, #0]
  404696:	2001      	movs	r0, #1
  404698:	4770      	bx	lr
  40469a:	bf00      	nop

0040469c <__i2b>:
  40469c:	b510      	push	{r4, lr}
  40469e:	460c      	mov	r4, r1
  4046a0:	2101      	movs	r1, #1
  4046a2:	f7ff ff3b 	bl	40451c <_Balloc>
  4046a6:	2201      	movs	r2, #1
  4046a8:	6144      	str	r4, [r0, #20]
  4046aa:	6102      	str	r2, [r0, #16]
  4046ac:	bd10      	pop	{r4, pc}
  4046ae:	bf00      	nop

004046b0 <__multiply>:
  4046b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4046b4:	690c      	ldr	r4, [r1, #16]
  4046b6:	6915      	ldr	r5, [r2, #16]
  4046b8:	42ac      	cmp	r4, r5
  4046ba:	b083      	sub	sp, #12
  4046bc:	468b      	mov	fp, r1
  4046be:	4616      	mov	r6, r2
  4046c0:	da04      	bge.n	4046cc <__multiply+0x1c>
  4046c2:	4622      	mov	r2, r4
  4046c4:	46b3      	mov	fp, r6
  4046c6:	462c      	mov	r4, r5
  4046c8:	460e      	mov	r6, r1
  4046ca:	4615      	mov	r5, r2
  4046cc:	f8db 3008 	ldr.w	r3, [fp, #8]
  4046d0:	f8db 1004 	ldr.w	r1, [fp, #4]
  4046d4:	eb04 0805 	add.w	r8, r4, r5
  4046d8:	4598      	cmp	r8, r3
  4046da:	bfc8      	it	gt
  4046dc:	3101      	addgt	r1, #1
  4046de:	f7ff ff1d 	bl	40451c <_Balloc>
  4046e2:	f100 0914 	add.w	r9, r0, #20
  4046e6:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  4046ea:	45d1      	cmp	r9, sl
  4046ec:	9000      	str	r0, [sp, #0]
  4046ee:	d205      	bcs.n	4046fc <__multiply+0x4c>
  4046f0:	464b      	mov	r3, r9
  4046f2:	2100      	movs	r1, #0
  4046f4:	f843 1b04 	str.w	r1, [r3], #4
  4046f8:	459a      	cmp	sl, r3
  4046fa:	d8fb      	bhi.n	4046f4 <__multiply+0x44>
  4046fc:	f106 0c14 	add.w	ip, r6, #20
  404700:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404704:	f10b 0b14 	add.w	fp, fp, #20
  404708:	459c      	cmp	ip, r3
  40470a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40470e:	d24c      	bcs.n	4047aa <__multiply+0xfa>
  404710:	f8cd a004 	str.w	sl, [sp, #4]
  404714:	469a      	mov	sl, r3
  404716:	f8dc 5000 	ldr.w	r5, [ip]
  40471a:	b2af      	uxth	r7, r5
  40471c:	b1ef      	cbz	r7, 40475a <__multiply+0xaa>
  40471e:	2100      	movs	r1, #0
  404720:	464d      	mov	r5, r9
  404722:	465e      	mov	r6, fp
  404724:	460c      	mov	r4, r1
  404726:	f856 2b04 	ldr.w	r2, [r6], #4
  40472a:	6828      	ldr	r0, [r5, #0]
  40472c:	b293      	uxth	r3, r2
  40472e:	b281      	uxth	r1, r0
  404730:	fb07 1303 	mla	r3, r7, r3, r1
  404734:	0c12      	lsrs	r2, r2, #16
  404736:	0c01      	lsrs	r1, r0, #16
  404738:	4423      	add	r3, r4
  40473a:	fb07 1102 	mla	r1, r7, r2, r1
  40473e:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  404742:	b29b      	uxth	r3, r3
  404744:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  404748:	45b6      	cmp	lr, r6
  40474a:	f845 3b04 	str.w	r3, [r5], #4
  40474e:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404752:	d8e8      	bhi.n	404726 <__multiply+0x76>
  404754:	602c      	str	r4, [r5, #0]
  404756:	f8dc 5000 	ldr.w	r5, [ip]
  40475a:	0c2d      	lsrs	r5, r5, #16
  40475c:	d01d      	beq.n	40479a <__multiply+0xea>
  40475e:	f8d9 3000 	ldr.w	r3, [r9]
  404762:	4648      	mov	r0, r9
  404764:	461c      	mov	r4, r3
  404766:	4659      	mov	r1, fp
  404768:	2200      	movs	r2, #0
  40476a:	880e      	ldrh	r6, [r1, #0]
  40476c:	0c24      	lsrs	r4, r4, #16
  40476e:	fb05 4406 	mla	r4, r5, r6, r4
  404772:	4422      	add	r2, r4
  404774:	b29b      	uxth	r3, r3
  404776:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40477a:	f840 3b04 	str.w	r3, [r0], #4
  40477e:	f851 3b04 	ldr.w	r3, [r1], #4
  404782:	6804      	ldr	r4, [r0, #0]
  404784:	0c1b      	lsrs	r3, r3, #16
  404786:	b2a6      	uxth	r6, r4
  404788:	fb05 6303 	mla	r3, r5, r3, r6
  40478c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404790:	458e      	cmp	lr, r1
  404792:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404796:	d8e8      	bhi.n	40476a <__multiply+0xba>
  404798:	6003      	str	r3, [r0, #0]
  40479a:	f10c 0c04 	add.w	ip, ip, #4
  40479e:	45e2      	cmp	sl, ip
  4047a0:	f109 0904 	add.w	r9, r9, #4
  4047a4:	d8b7      	bhi.n	404716 <__multiply+0x66>
  4047a6:	f8dd a004 	ldr.w	sl, [sp, #4]
  4047aa:	f1b8 0f00 	cmp.w	r8, #0
  4047ae:	dd0b      	ble.n	4047c8 <__multiply+0x118>
  4047b0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  4047b4:	f1aa 0a04 	sub.w	sl, sl, #4
  4047b8:	b11b      	cbz	r3, 4047c2 <__multiply+0x112>
  4047ba:	e005      	b.n	4047c8 <__multiply+0x118>
  4047bc:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  4047c0:	b913      	cbnz	r3, 4047c8 <__multiply+0x118>
  4047c2:	f1b8 0801 	subs.w	r8, r8, #1
  4047c6:	d1f9      	bne.n	4047bc <__multiply+0x10c>
  4047c8:	9800      	ldr	r0, [sp, #0]
  4047ca:	f8c0 8010 	str.w	r8, [r0, #16]
  4047ce:	b003      	add	sp, #12
  4047d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

004047d4 <__pow5mult>:
  4047d4:	f012 0303 	ands.w	r3, r2, #3
  4047d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4047dc:	4614      	mov	r4, r2
  4047de:	4607      	mov	r7, r0
  4047e0:	d12e      	bne.n	404840 <__pow5mult+0x6c>
  4047e2:	460d      	mov	r5, r1
  4047e4:	10a4      	asrs	r4, r4, #2
  4047e6:	d01c      	beq.n	404822 <__pow5mult+0x4e>
  4047e8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  4047ea:	b396      	cbz	r6, 404852 <__pow5mult+0x7e>
  4047ec:	07e3      	lsls	r3, r4, #31
  4047ee:	f04f 0800 	mov.w	r8, #0
  4047f2:	d406      	bmi.n	404802 <__pow5mult+0x2e>
  4047f4:	1064      	asrs	r4, r4, #1
  4047f6:	d014      	beq.n	404822 <__pow5mult+0x4e>
  4047f8:	6830      	ldr	r0, [r6, #0]
  4047fa:	b1a8      	cbz	r0, 404828 <__pow5mult+0x54>
  4047fc:	4606      	mov	r6, r0
  4047fe:	07e3      	lsls	r3, r4, #31
  404800:	d5f8      	bpl.n	4047f4 <__pow5mult+0x20>
  404802:	4632      	mov	r2, r6
  404804:	4629      	mov	r1, r5
  404806:	4638      	mov	r0, r7
  404808:	f7ff ff52 	bl	4046b0 <__multiply>
  40480c:	b1b5      	cbz	r5, 40483c <__pow5mult+0x68>
  40480e:	686a      	ldr	r2, [r5, #4]
  404810:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404812:	1064      	asrs	r4, r4, #1
  404814:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404818:	6029      	str	r1, [r5, #0]
  40481a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40481e:	4605      	mov	r5, r0
  404820:	d1ea      	bne.n	4047f8 <__pow5mult+0x24>
  404822:	4628      	mov	r0, r5
  404824:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404828:	4632      	mov	r2, r6
  40482a:	4631      	mov	r1, r6
  40482c:	4638      	mov	r0, r7
  40482e:	f7ff ff3f 	bl	4046b0 <__multiply>
  404832:	6030      	str	r0, [r6, #0]
  404834:	f8c0 8000 	str.w	r8, [r0]
  404838:	4606      	mov	r6, r0
  40483a:	e7e0      	b.n	4047fe <__pow5mult+0x2a>
  40483c:	4605      	mov	r5, r0
  40483e:	e7d9      	b.n	4047f4 <__pow5mult+0x20>
  404840:	1e5a      	subs	r2, r3, #1
  404842:	4d0b      	ldr	r5, [pc, #44]	; (404870 <__pow5mult+0x9c>)
  404844:	2300      	movs	r3, #0
  404846:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  40484a:	f7ff fe97 	bl	40457c <__multadd>
  40484e:	4605      	mov	r5, r0
  404850:	e7c8      	b.n	4047e4 <__pow5mult+0x10>
  404852:	2101      	movs	r1, #1
  404854:	4638      	mov	r0, r7
  404856:	f7ff fe61 	bl	40451c <_Balloc>
  40485a:	f240 2171 	movw	r1, #625	; 0x271
  40485e:	2201      	movs	r2, #1
  404860:	2300      	movs	r3, #0
  404862:	6141      	str	r1, [r0, #20]
  404864:	6102      	str	r2, [r0, #16]
  404866:	4606      	mov	r6, r0
  404868:	64b8      	str	r0, [r7, #72]	; 0x48
  40486a:	6003      	str	r3, [r0, #0]
  40486c:	e7be      	b.n	4047ec <__pow5mult+0x18>
  40486e:	bf00      	nop
  404870:	00406cf0 	.word	0x00406cf0

00404874 <__lshift>:
  404874:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404878:	4691      	mov	r9, r2
  40487a:	690a      	ldr	r2, [r1, #16]
  40487c:	688b      	ldr	r3, [r1, #8]
  40487e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404882:	eb04 0802 	add.w	r8, r4, r2
  404886:	f108 0501 	add.w	r5, r8, #1
  40488a:	429d      	cmp	r5, r3
  40488c:	460e      	mov	r6, r1
  40488e:	4607      	mov	r7, r0
  404890:	6849      	ldr	r1, [r1, #4]
  404892:	dd04      	ble.n	40489e <__lshift+0x2a>
  404894:	005b      	lsls	r3, r3, #1
  404896:	429d      	cmp	r5, r3
  404898:	f101 0101 	add.w	r1, r1, #1
  40489c:	dcfa      	bgt.n	404894 <__lshift+0x20>
  40489e:	4638      	mov	r0, r7
  4048a0:	f7ff fe3c 	bl	40451c <_Balloc>
  4048a4:	2c00      	cmp	r4, #0
  4048a6:	f100 0314 	add.w	r3, r0, #20
  4048aa:	dd06      	ble.n	4048ba <__lshift+0x46>
  4048ac:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  4048b0:	2100      	movs	r1, #0
  4048b2:	f843 1b04 	str.w	r1, [r3], #4
  4048b6:	429a      	cmp	r2, r3
  4048b8:	d1fb      	bne.n	4048b2 <__lshift+0x3e>
  4048ba:	6934      	ldr	r4, [r6, #16]
  4048bc:	f106 0114 	add.w	r1, r6, #20
  4048c0:	f019 091f 	ands.w	r9, r9, #31
  4048c4:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  4048c8:	d01d      	beq.n	404906 <__lshift+0x92>
  4048ca:	f1c9 0c20 	rsb	ip, r9, #32
  4048ce:	2200      	movs	r2, #0
  4048d0:	680c      	ldr	r4, [r1, #0]
  4048d2:	fa04 f409 	lsl.w	r4, r4, r9
  4048d6:	4314      	orrs	r4, r2
  4048d8:	f843 4b04 	str.w	r4, [r3], #4
  4048dc:	f851 2b04 	ldr.w	r2, [r1], #4
  4048e0:	458e      	cmp	lr, r1
  4048e2:	fa22 f20c 	lsr.w	r2, r2, ip
  4048e6:	d8f3      	bhi.n	4048d0 <__lshift+0x5c>
  4048e8:	601a      	str	r2, [r3, #0]
  4048ea:	b10a      	cbz	r2, 4048f0 <__lshift+0x7c>
  4048ec:	f108 0502 	add.w	r5, r8, #2
  4048f0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4048f2:	6872      	ldr	r2, [r6, #4]
  4048f4:	3d01      	subs	r5, #1
  4048f6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4048fa:	6105      	str	r5, [r0, #16]
  4048fc:	6031      	str	r1, [r6, #0]
  4048fe:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404902:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404906:	3b04      	subs	r3, #4
  404908:	f851 2b04 	ldr.w	r2, [r1], #4
  40490c:	f843 2f04 	str.w	r2, [r3, #4]!
  404910:	458e      	cmp	lr, r1
  404912:	d8f9      	bhi.n	404908 <__lshift+0x94>
  404914:	e7ec      	b.n	4048f0 <__lshift+0x7c>
  404916:	bf00      	nop

00404918 <__mcmp>:
  404918:	b430      	push	{r4, r5}
  40491a:	690b      	ldr	r3, [r1, #16]
  40491c:	4605      	mov	r5, r0
  40491e:	6900      	ldr	r0, [r0, #16]
  404920:	1ac0      	subs	r0, r0, r3
  404922:	d10f      	bne.n	404944 <__mcmp+0x2c>
  404924:	009b      	lsls	r3, r3, #2
  404926:	3514      	adds	r5, #20
  404928:	3114      	adds	r1, #20
  40492a:	4419      	add	r1, r3
  40492c:	442b      	add	r3, r5
  40492e:	e001      	b.n	404934 <__mcmp+0x1c>
  404930:	429d      	cmp	r5, r3
  404932:	d207      	bcs.n	404944 <__mcmp+0x2c>
  404934:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404938:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  40493c:	4294      	cmp	r4, r2
  40493e:	d0f7      	beq.n	404930 <__mcmp+0x18>
  404940:	d302      	bcc.n	404948 <__mcmp+0x30>
  404942:	2001      	movs	r0, #1
  404944:	bc30      	pop	{r4, r5}
  404946:	4770      	bx	lr
  404948:	f04f 30ff 	mov.w	r0, #4294967295
  40494c:	e7fa      	b.n	404944 <__mcmp+0x2c>
  40494e:	bf00      	nop

00404950 <__mdiff>:
  404950:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404954:	690f      	ldr	r7, [r1, #16]
  404956:	460e      	mov	r6, r1
  404958:	6911      	ldr	r1, [r2, #16]
  40495a:	1a7f      	subs	r7, r7, r1
  40495c:	2f00      	cmp	r7, #0
  40495e:	4690      	mov	r8, r2
  404960:	d117      	bne.n	404992 <__mdiff+0x42>
  404962:	0089      	lsls	r1, r1, #2
  404964:	f106 0514 	add.w	r5, r6, #20
  404968:	f102 0e14 	add.w	lr, r2, #20
  40496c:	186b      	adds	r3, r5, r1
  40496e:	4471      	add	r1, lr
  404970:	e001      	b.n	404976 <__mdiff+0x26>
  404972:	429d      	cmp	r5, r3
  404974:	d25c      	bcs.n	404a30 <__mdiff+0xe0>
  404976:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40497a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40497e:	42a2      	cmp	r2, r4
  404980:	d0f7      	beq.n	404972 <__mdiff+0x22>
  404982:	d25e      	bcs.n	404a42 <__mdiff+0xf2>
  404984:	4633      	mov	r3, r6
  404986:	462c      	mov	r4, r5
  404988:	4646      	mov	r6, r8
  40498a:	4675      	mov	r5, lr
  40498c:	4698      	mov	r8, r3
  40498e:	2701      	movs	r7, #1
  404990:	e005      	b.n	40499e <__mdiff+0x4e>
  404992:	db58      	blt.n	404a46 <__mdiff+0xf6>
  404994:	f106 0514 	add.w	r5, r6, #20
  404998:	f108 0414 	add.w	r4, r8, #20
  40499c:	2700      	movs	r7, #0
  40499e:	6871      	ldr	r1, [r6, #4]
  4049a0:	f7ff fdbc 	bl	40451c <_Balloc>
  4049a4:	f8d8 3010 	ldr.w	r3, [r8, #16]
  4049a8:	6936      	ldr	r6, [r6, #16]
  4049aa:	60c7      	str	r7, [r0, #12]
  4049ac:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  4049b0:	46a6      	mov	lr, r4
  4049b2:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  4049b6:	f100 0414 	add.w	r4, r0, #20
  4049ba:	2300      	movs	r3, #0
  4049bc:	f85e 1b04 	ldr.w	r1, [lr], #4
  4049c0:	f855 8b04 	ldr.w	r8, [r5], #4
  4049c4:	b28a      	uxth	r2, r1
  4049c6:	fa13 f388 	uxtah	r3, r3, r8
  4049ca:	0c09      	lsrs	r1, r1, #16
  4049cc:	1a9a      	subs	r2, r3, r2
  4049ce:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  4049d2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4049d6:	b292      	uxth	r2, r2
  4049d8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4049dc:	45f4      	cmp	ip, lr
  4049de:	f844 2b04 	str.w	r2, [r4], #4
  4049e2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4049e6:	d8e9      	bhi.n	4049bc <__mdiff+0x6c>
  4049e8:	42af      	cmp	r7, r5
  4049ea:	d917      	bls.n	404a1c <__mdiff+0xcc>
  4049ec:	46a4      	mov	ip, r4
  4049ee:	46ae      	mov	lr, r5
  4049f0:	f85e 2b04 	ldr.w	r2, [lr], #4
  4049f4:	fa13 f382 	uxtah	r3, r3, r2
  4049f8:	1419      	asrs	r1, r3, #16
  4049fa:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  4049fe:	b29b      	uxth	r3, r3
  404a00:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404a04:	4577      	cmp	r7, lr
  404a06:	f84c 2b04 	str.w	r2, [ip], #4
  404a0a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404a0e:	d8ef      	bhi.n	4049f0 <__mdiff+0xa0>
  404a10:	43ed      	mvns	r5, r5
  404a12:	442f      	add	r7, r5
  404a14:	f027 0703 	bic.w	r7, r7, #3
  404a18:	3704      	adds	r7, #4
  404a1a:	443c      	add	r4, r7
  404a1c:	3c04      	subs	r4, #4
  404a1e:	b922      	cbnz	r2, 404a2a <__mdiff+0xda>
  404a20:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404a24:	3e01      	subs	r6, #1
  404a26:	2b00      	cmp	r3, #0
  404a28:	d0fa      	beq.n	404a20 <__mdiff+0xd0>
  404a2a:	6106      	str	r6, [r0, #16]
  404a2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a30:	2100      	movs	r1, #0
  404a32:	f7ff fd73 	bl	40451c <_Balloc>
  404a36:	2201      	movs	r2, #1
  404a38:	2300      	movs	r3, #0
  404a3a:	6102      	str	r2, [r0, #16]
  404a3c:	6143      	str	r3, [r0, #20]
  404a3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404a42:	4674      	mov	r4, lr
  404a44:	e7ab      	b.n	40499e <__mdiff+0x4e>
  404a46:	4633      	mov	r3, r6
  404a48:	f106 0414 	add.w	r4, r6, #20
  404a4c:	f102 0514 	add.w	r5, r2, #20
  404a50:	4616      	mov	r6, r2
  404a52:	2701      	movs	r7, #1
  404a54:	4698      	mov	r8, r3
  404a56:	e7a2      	b.n	40499e <__mdiff+0x4e>

00404a58 <__d2b>:
  404a58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404a5c:	b082      	sub	sp, #8
  404a5e:	2101      	movs	r1, #1
  404a60:	461c      	mov	r4, r3
  404a62:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404a66:	4615      	mov	r5, r2
  404a68:	9e08      	ldr	r6, [sp, #32]
  404a6a:	f7ff fd57 	bl	40451c <_Balloc>
  404a6e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404a72:	4680      	mov	r8, r0
  404a74:	b10f      	cbz	r7, 404a7a <__d2b+0x22>
  404a76:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404a7a:	9401      	str	r4, [sp, #4]
  404a7c:	b31d      	cbz	r5, 404ac6 <__d2b+0x6e>
  404a7e:	a802      	add	r0, sp, #8
  404a80:	f840 5d08 	str.w	r5, [r0, #-8]!
  404a84:	f7ff fdda 	bl	40463c <__lo0bits>
  404a88:	2800      	cmp	r0, #0
  404a8a:	d134      	bne.n	404af6 <__d2b+0x9e>
  404a8c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404a90:	f8c8 2014 	str.w	r2, [r8, #20]
  404a94:	2b00      	cmp	r3, #0
  404a96:	bf0c      	ite	eq
  404a98:	2101      	moveq	r1, #1
  404a9a:	2102      	movne	r1, #2
  404a9c:	f8c8 3018 	str.w	r3, [r8, #24]
  404aa0:	f8c8 1010 	str.w	r1, [r8, #16]
  404aa4:	b9df      	cbnz	r7, 404ade <__d2b+0x86>
  404aa6:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404aaa:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404aae:	6030      	str	r0, [r6, #0]
  404ab0:	6918      	ldr	r0, [r3, #16]
  404ab2:	f7ff fda3 	bl	4045fc <__hi0bits>
  404ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404ab8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404abc:	6018      	str	r0, [r3, #0]
  404abe:	4640      	mov	r0, r8
  404ac0:	b002      	add	sp, #8
  404ac2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ac6:	a801      	add	r0, sp, #4
  404ac8:	f7ff fdb8 	bl	40463c <__lo0bits>
  404acc:	9b01      	ldr	r3, [sp, #4]
  404ace:	f8c8 3014 	str.w	r3, [r8, #20]
  404ad2:	2101      	movs	r1, #1
  404ad4:	3020      	adds	r0, #32
  404ad6:	f8c8 1010 	str.w	r1, [r8, #16]
  404ada:	2f00      	cmp	r7, #0
  404adc:	d0e3      	beq.n	404aa6 <__d2b+0x4e>
  404ade:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404ae0:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404ae4:	4407      	add	r7, r0
  404ae6:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404aea:	6037      	str	r7, [r6, #0]
  404aec:	6018      	str	r0, [r3, #0]
  404aee:	4640      	mov	r0, r8
  404af0:	b002      	add	sp, #8
  404af2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404af6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404afa:	f1c0 0220 	rsb	r2, r0, #32
  404afe:	fa03 f202 	lsl.w	r2, r3, r2
  404b02:	430a      	orrs	r2, r1
  404b04:	40c3      	lsrs	r3, r0
  404b06:	9301      	str	r3, [sp, #4]
  404b08:	f8c8 2014 	str.w	r2, [r8, #20]
  404b0c:	e7c2      	b.n	404a94 <__d2b+0x3c>
  404b0e:	bf00      	nop

00404b10 <_sbrk_r>:
  404b10:	b538      	push	{r3, r4, r5, lr}
  404b12:	4c07      	ldr	r4, [pc, #28]	; (404b30 <_sbrk_r+0x20>)
  404b14:	2300      	movs	r3, #0
  404b16:	4605      	mov	r5, r0
  404b18:	4608      	mov	r0, r1
  404b1a:	6023      	str	r3, [r4, #0]
  404b1c:	f7fc fcae 	bl	40147c <_sbrk>
  404b20:	1c43      	adds	r3, r0, #1
  404b22:	d000      	beq.n	404b26 <_sbrk_r+0x16>
  404b24:	bd38      	pop	{r3, r4, r5, pc}
  404b26:	6823      	ldr	r3, [r4, #0]
  404b28:	2b00      	cmp	r3, #0
  404b2a:	d0fb      	beq.n	404b24 <_sbrk_r+0x14>
  404b2c:	602b      	str	r3, [r5, #0]
  404b2e:	bd38      	pop	{r3, r4, r5, pc}
  404b30:	20400ccc 	.word	0x20400ccc
	...

00404b40 <strlen>:
  404b40:	f890 f000 	pld	[r0]
  404b44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404b48:	f020 0107 	bic.w	r1, r0, #7
  404b4c:	f06f 0c00 	mvn.w	ip, #0
  404b50:	f010 0407 	ands.w	r4, r0, #7
  404b54:	f891 f020 	pld	[r1, #32]
  404b58:	f040 8049 	bne.w	404bee <strlen+0xae>
  404b5c:	f04f 0400 	mov.w	r4, #0
  404b60:	f06f 0007 	mvn.w	r0, #7
  404b64:	e9d1 2300 	ldrd	r2, r3, [r1]
  404b68:	f891 f040 	pld	[r1, #64]	; 0x40
  404b6c:	f100 0008 	add.w	r0, r0, #8
  404b70:	fa82 f24c 	uadd8	r2, r2, ip
  404b74:	faa4 f28c 	sel	r2, r4, ip
  404b78:	fa83 f34c 	uadd8	r3, r3, ip
  404b7c:	faa2 f38c 	sel	r3, r2, ip
  404b80:	bb4b      	cbnz	r3, 404bd6 <strlen+0x96>
  404b82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404b86:	fa82 f24c 	uadd8	r2, r2, ip
  404b8a:	f100 0008 	add.w	r0, r0, #8
  404b8e:	faa4 f28c 	sel	r2, r4, ip
  404b92:	fa83 f34c 	uadd8	r3, r3, ip
  404b96:	faa2 f38c 	sel	r3, r2, ip
  404b9a:	b9e3      	cbnz	r3, 404bd6 <strlen+0x96>
  404b9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404ba0:	fa82 f24c 	uadd8	r2, r2, ip
  404ba4:	f100 0008 	add.w	r0, r0, #8
  404ba8:	faa4 f28c 	sel	r2, r4, ip
  404bac:	fa83 f34c 	uadd8	r3, r3, ip
  404bb0:	faa2 f38c 	sel	r3, r2, ip
  404bb4:	b97b      	cbnz	r3, 404bd6 <strlen+0x96>
  404bb6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404bba:	f101 0120 	add.w	r1, r1, #32
  404bbe:	fa82 f24c 	uadd8	r2, r2, ip
  404bc2:	f100 0008 	add.w	r0, r0, #8
  404bc6:	faa4 f28c 	sel	r2, r4, ip
  404bca:	fa83 f34c 	uadd8	r3, r3, ip
  404bce:	faa2 f38c 	sel	r3, r2, ip
  404bd2:	2b00      	cmp	r3, #0
  404bd4:	d0c6      	beq.n	404b64 <strlen+0x24>
  404bd6:	2a00      	cmp	r2, #0
  404bd8:	bf04      	itt	eq
  404bda:	3004      	addeq	r0, #4
  404bdc:	461a      	moveq	r2, r3
  404bde:	ba12      	rev	r2, r2
  404be0:	fab2 f282 	clz	r2, r2
  404be4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404be8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404bec:	4770      	bx	lr
  404bee:	e9d1 2300 	ldrd	r2, r3, [r1]
  404bf2:	f004 0503 	and.w	r5, r4, #3
  404bf6:	f1c4 0000 	rsb	r0, r4, #0
  404bfa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404bfe:	f014 0f04 	tst.w	r4, #4
  404c02:	f891 f040 	pld	[r1, #64]	; 0x40
  404c06:	fa0c f505 	lsl.w	r5, ip, r5
  404c0a:	ea62 0205 	orn	r2, r2, r5
  404c0e:	bf1c      	itt	ne
  404c10:	ea63 0305 	ornne	r3, r3, r5
  404c14:	4662      	movne	r2, ip
  404c16:	f04f 0400 	mov.w	r4, #0
  404c1a:	e7a9      	b.n	404b70 <strlen+0x30>

00404c1c <__ssprint_r>:
  404c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404c20:	6893      	ldr	r3, [r2, #8]
  404c22:	b083      	sub	sp, #12
  404c24:	4690      	mov	r8, r2
  404c26:	2b00      	cmp	r3, #0
  404c28:	d070      	beq.n	404d0c <__ssprint_r+0xf0>
  404c2a:	4682      	mov	sl, r0
  404c2c:	460c      	mov	r4, r1
  404c2e:	6817      	ldr	r7, [r2, #0]
  404c30:	688d      	ldr	r5, [r1, #8]
  404c32:	6808      	ldr	r0, [r1, #0]
  404c34:	e042      	b.n	404cbc <__ssprint_r+0xa0>
  404c36:	89a3      	ldrh	r3, [r4, #12]
  404c38:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404c3c:	d02e      	beq.n	404c9c <__ssprint_r+0x80>
  404c3e:	6965      	ldr	r5, [r4, #20]
  404c40:	6921      	ldr	r1, [r4, #16]
  404c42:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  404c46:	eba0 0b01 	sub.w	fp, r0, r1
  404c4a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  404c4e:	f10b 0001 	add.w	r0, fp, #1
  404c52:	106d      	asrs	r5, r5, #1
  404c54:	4430      	add	r0, r6
  404c56:	42a8      	cmp	r0, r5
  404c58:	462a      	mov	r2, r5
  404c5a:	bf84      	itt	hi
  404c5c:	4605      	movhi	r5, r0
  404c5e:	462a      	movhi	r2, r5
  404c60:	055b      	lsls	r3, r3, #21
  404c62:	d538      	bpl.n	404cd6 <__ssprint_r+0xba>
  404c64:	4611      	mov	r1, r2
  404c66:	4650      	mov	r0, sl
  404c68:	f7ff f8b0 	bl	403dcc <_malloc_r>
  404c6c:	2800      	cmp	r0, #0
  404c6e:	d03c      	beq.n	404cea <__ssprint_r+0xce>
  404c70:	465a      	mov	r2, fp
  404c72:	6921      	ldr	r1, [r4, #16]
  404c74:	9001      	str	r0, [sp, #4]
  404c76:	f7ff fbab 	bl	4043d0 <memcpy>
  404c7a:	89a2      	ldrh	r2, [r4, #12]
  404c7c:	9b01      	ldr	r3, [sp, #4]
  404c7e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404c82:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404c86:	81a2      	strh	r2, [r4, #12]
  404c88:	eba5 020b 	sub.w	r2, r5, fp
  404c8c:	eb03 000b 	add.w	r0, r3, fp
  404c90:	6165      	str	r5, [r4, #20]
  404c92:	6123      	str	r3, [r4, #16]
  404c94:	6020      	str	r0, [r4, #0]
  404c96:	60a2      	str	r2, [r4, #8]
  404c98:	4635      	mov	r5, r6
  404c9a:	46b3      	mov	fp, r6
  404c9c:	465a      	mov	r2, fp
  404c9e:	4649      	mov	r1, r9
  404ca0:	f000 fa18 	bl	4050d4 <memmove>
  404ca4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  404ca8:	68a2      	ldr	r2, [r4, #8]
  404caa:	6820      	ldr	r0, [r4, #0]
  404cac:	1b55      	subs	r5, r2, r5
  404cae:	4458      	add	r0, fp
  404cb0:	1b9e      	subs	r6, r3, r6
  404cb2:	60a5      	str	r5, [r4, #8]
  404cb4:	6020      	str	r0, [r4, #0]
  404cb6:	f8c8 6008 	str.w	r6, [r8, #8]
  404cba:	b33e      	cbz	r6, 404d0c <__ssprint_r+0xf0>
  404cbc:	687e      	ldr	r6, [r7, #4]
  404cbe:	463b      	mov	r3, r7
  404cc0:	3708      	adds	r7, #8
  404cc2:	2e00      	cmp	r6, #0
  404cc4:	d0fa      	beq.n	404cbc <__ssprint_r+0xa0>
  404cc6:	42ae      	cmp	r6, r5
  404cc8:	f8d3 9000 	ldr.w	r9, [r3]
  404ccc:	46ab      	mov	fp, r5
  404cce:	d2b2      	bcs.n	404c36 <__ssprint_r+0x1a>
  404cd0:	4635      	mov	r5, r6
  404cd2:	46b3      	mov	fp, r6
  404cd4:	e7e2      	b.n	404c9c <__ssprint_r+0x80>
  404cd6:	4650      	mov	r0, sl
  404cd8:	f000 fa60 	bl	40519c <_realloc_r>
  404cdc:	4603      	mov	r3, r0
  404cde:	2800      	cmp	r0, #0
  404ce0:	d1d2      	bne.n	404c88 <__ssprint_r+0x6c>
  404ce2:	6921      	ldr	r1, [r4, #16]
  404ce4:	4650      	mov	r0, sl
  404ce6:	f000 f8f9 	bl	404edc <_free_r>
  404cea:	230c      	movs	r3, #12
  404cec:	f8ca 3000 	str.w	r3, [sl]
  404cf0:	89a3      	ldrh	r3, [r4, #12]
  404cf2:	2200      	movs	r2, #0
  404cf4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404cf8:	f04f 30ff 	mov.w	r0, #4294967295
  404cfc:	81a3      	strh	r3, [r4, #12]
  404cfe:	f8c8 2008 	str.w	r2, [r8, #8]
  404d02:	f8c8 2004 	str.w	r2, [r8, #4]
  404d06:	b003      	add	sp, #12
  404d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404d0c:	2000      	movs	r0, #0
  404d0e:	f8c8 0004 	str.w	r0, [r8, #4]
  404d12:	b003      	add	sp, #12
  404d14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404d18 <__register_exitproc>:
  404d18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404d1c:	4d2c      	ldr	r5, [pc, #176]	; (404dd0 <__register_exitproc+0xb8>)
  404d1e:	4606      	mov	r6, r0
  404d20:	6828      	ldr	r0, [r5, #0]
  404d22:	4698      	mov	r8, r3
  404d24:	460f      	mov	r7, r1
  404d26:	4691      	mov	r9, r2
  404d28:	f7ff f84c 	bl	403dc4 <__retarget_lock_acquire_recursive>
  404d2c:	4b29      	ldr	r3, [pc, #164]	; (404dd4 <__register_exitproc+0xbc>)
  404d2e:	681c      	ldr	r4, [r3, #0]
  404d30:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  404d34:	2b00      	cmp	r3, #0
  404d36:	d03e      	beq.n	404db6 <__register_exitproc+0x9e>
  404d38:	685a      	ldr	r2, [r3, #4]
  404d3a:	2a1f      	cmp	r2, #31
  404d3c:	dc1c      	bgt.n	404d78 <__register_exitproc+0x60>
  404d3e:	f102 0e01 	add.w	lr, r2, #1
  404d42:	b176      	cbz	r6, 404d62 <__register_exitproc+0x4a>
  404d44:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  404d48:	2401      	movs	r4, #1
  404d4a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  404d4e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  404d52:	4094      	lsls	r4, r2
  404d54:	4320      	orrs	r0, r4
  404d56:	2e02      	cmp	r6, #2
  404d58:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  404d5c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  404d60:	d023      	beq.n	404daa <__register_exitproc+0x92>
  404d62:	3202      	adds	r2, #2
  404d64:	f8c3 e004 	str.w	lr, [r3, #4]
  404d68:	6828      	ldr	r0, [r5, #0]
  404d6a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  404d6e:	f7ff f82b 	bl	403dc8 <__retarget_lock_release_recursive>
  404d72:	2000      	movs	r0, #0
  404d74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404d78:	4b17      	ldr	r3, [pc, #92]	; (404dd8 <__register_exitproc+0xc0>)
  404d7a:	b30b      	cbz	r3, 404dc0 <__register_exitproc+0xa8>
  404d7c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404d80:	f3af 8000 	nop.w
  404d84:	4603      	mov	r3, r0
  404d86:	b1d8      	cbz	r0, 404dc0 <__register_exitproc+0xa8>
  404d88:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  404d8c:	6002      	str	r2, [r0, #0]
  404d8e:	2100      	movs	r1, #0
  404d90:	6041      	str	r1, [r0, #4]
  404d92:	460a      	mov	r2, r1
  404d94:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  404d98:	f04f 0e01 	mov.w	lr, #1
  404d9c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  404da0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  404da4:	2e00      	cmp	r6, #0
  404da6:	d0dc      	beq.n	404d62 <__register_exitproc+0x4a>
  404da8:	e7cc      	b.n	404d44 <__register_exitproc+0x2c>
  404daa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  404dae:	430c      	orrs	r4, r1
  404db0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  404db4:	e7d5      	b.n	404d62 <__register_exitproc+0x4a>
  404db6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  404dba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  404dbe:	e7bb      	b.n	404d38 <__register_exitproc+0x20>
  404dc0:	6828      	ldr	r0, [r5, #0]
  404dc2:	f7ff f801 	bl	403dc8 <__retarget_lock_release_recursive>
  404dc6:	f04f 30ff 	mov.w	r0, #4294967295
  404dca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404dce:	bf00      	nop
  404dd0:	20400450 	.word	0x20400450
  404dd4:	00406b84 	.word	0x00406b84
  404dd8:	00000000 	.word	0x00000000

00404ddc <_calloc_r>:
  404ddc:	b510      	push	{r4, lr}
  404dde:	fb02 f101 	mul.w	r1, r2, r1
  404de2:	f7fe fff3 	bl	403dcc <_malloc_r>
  404de6:	4604      	mov	r4, r0
  404de8:	b1d8      	cbz	r0, 404e22 <_calloc_r+0x46>
  404dea:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404dee:	f022 0203 	bic.w	r2, r2, #3
  404df2:	3a04      	subs	r2, #4
  404df4:	2a24      	cmp	r2, #36	; 0x24
  404df6:	d818      	bhi.n	404e2a <_calloc_r+0x4e>
  404df8:	2a13      	cmp	r2, #19
  404dfa:	d914      	bls.n	404e26 <_calloc_r+0x4a>
  404dfc:	2300      	movs	r3, #0
  404dfe:	2a1b      	cmp	r2, #27
  404e00:	6003      	str	r3, [r0, #0]
  404e02:	6043      	str	r3, [r0, #4]
  404e04:	d916      	bls.n	404e34 <_calloc_r+0x58>
  404e06:	2a24      	cmp	r2, #36	; 0x24
  404e08:	6083      	str	r3, [r0, #8]
  404e0a:	60c3      	str	r3, [r0, #12]
  404e0c:	bf11      	iteee	ne
  404e0e:	f100 0210 	addne.w	r2, r0, #16
  404e12:	6103      	streq	r3, [r0, #16]
  404e14:	6143      	streq	r3, [r0, #20]
  404e16:	f100 0218 	addeq.w	r2, r0, #24
  404e1a:	2300      	movs	r3, #0
  404e1c:	6013      	str	r3, [r2, #0]
  404e1e:	6053      	str	r3, [r2, #4]
  404e20:	6093      	str	r3, [r2, #8]
  404e22:	4620      	mov	r0, r4
  404e24:	bd10      	pop	{r4, pc}
  404e26:	4602      	mov	r2, r0
  404e28:	e7f7      	b.n	404e1a <_calloc_r+0x3e>
  404e2a:	2100      	movs	r1, #0
  404e2c:	f7fc fd30 	bl	401890 <memset>
  404e30:	4620      	mov	r0, r4
  404e32:	bd10      	pop	{r4, pc}
  404e34:	f100 0208 	add.w	r2, r0, #8
  404e38:	e7ef      	b.n	404e1a <_calloc_r+0x3e>
  404e3a:	bf00      	nop

00404e3c <_malloc_trim_r>:
  404e3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404e3e:	4f24      	ldr	r7, [pc, #144]	; (404ed0 <_malloc_trim_r+0x94>)
  404e40:	460c      	mov	r4, r1
  404e42:	4606      	mov	r6, r0
  404e44:	f7ff fb5e 	bl	404504 <__malloc_lock>
  404e48:	68bb      	ldr	r3, [r7, #8]
  404e4a:	685d      	ldr	r5, [r3, #4]
  404e4c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  404e50:	310f      	adds	r1, #15
  404e52:	f025 0503 	bic.w	r5, r5, #3
  404e56:	4429      	add	r1, r5
  404e58:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404e5c:	f021 010f 	bic.w	r1, r1, #15
  404e60:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404e64:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404e68:	db07      	blt.n	404e7a <_malloc_trim_r+0x3e>
  404e6a:	2100      	movs	r1, #0
  404e6c:	4630      	mov	r0, r6
  404e6e:	f7ff fe4f 	bl	404b10 <_sbrk_r>
  404e72:	68bb      	ldr	r3, [r7, #8]
  404e74:	442b      	add	r3, r5
  404e76:	4298      	cmp	r0, r3
  404e78:	d004      	beq.n	404e84 <_malloc_trim_r+0x48>
  404e7a:	4630      	mov	r0, r6
  404e7c:	f7ff fb48 	bl	404510 <__malloc_unlock>
  404e80:	2000      	movs	r0, #0
  404e82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404e84:	4261      	negs	r1, r4
  404e86:	4630      	mov	r0, r6
  404e88:	f7ff fe42 	bl	404b10 <_sbrk_r>
  404e8c:	3001      	adds	r0, #1
  404e8e:	d00d      	beq.n	404eac <_malloc_trim_r+0x70>
  404e90:	4b10      	ldr	r3, [pc, #64]	; (404ed4 <_malloc_trim_r+0x98>)
  404e92:	68ba      	ldr	r2, [r7, #8]
  404e94:	6819      	ldr	r1, [r3, #0]
  404e96:	1b2d      	subs	r5, r5, r4
  404e98:	f045 0501 	orr.w	r5, r5, #1
  404e9c:	4630      	mov	r0, r6
  404e9e:	1b09      	subs	r1, r1, r4
  404ea0:	6055      	str	r5, [r2, #4]
  404ea2:	6019      	str	r1, [r3, #0]
  404ea4:	f7ff fb34 	bl	404510 <__malloc_unlock>
  404ea8:	2001      	movs	r0, #1
  404eaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404eac:	2100      	movs	r1, #0
  404eae:	4630      	mov	r0, r6
  404eb0:	f7ff fe2e 	bl	404b10 <_sbrk_r>
  404eb4:	68ba      	ldr	r2, [r7, #8]
  404eb6:	1a83      	subs	r3, r0, r2
  404eb8:	2b0f      	cmp	r3, #15
  404eba:	ddde      	ble.n	404e7a <_malloc_trim_r+0x3e>
  404ebc:	4c06      	ldr	r4, [pc, #24]	; (404ed8 <_malloc_trim_r+0x9c>)
  404ebe:	4905      	ldr	r1, [pc, #20]	; (404ed4 <_malloc_trim_r+0x98>)
  404ec0:	6824      	ldr	r4, [r4, #0]
  404ec2:	f043 0301 	orr.w	r3, r3, #1
  404ec6:	1b00      	subs	r0, r0, r4
  404ec8:	6053      	str	r3, [r2, #4]
  404eca:	6008      	str	r0, [r1, #0]
  404ecc:	e7d5      	b.n	404e7a <_malloc_trim_r+0x3e>
  404ece:	bf00      	nop
  404ed0:	20400454 	.word	0x20400454
  404ed4:	20400c74 	.word	0x20400c74
  404ed8:	2040085c 	.word	0x2040085c

00404edc <_free_r>:
  404edc:	2900      	cmp	r1, #0
  404ede:	d044      	beq.n	404f6a <_free_r+0x8e>
  404ee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404ee4:	460d      	mov	r5, r1
  404ee6:	4680      	mov	r8, r0
  404ee8:	f7ff fb0c 	bl	404504 <__malloc_lock>
  404eec:	f855 7c04 	ldr.w	r7, [r5, #-4]
  404ef0:	4969      	ldr	r1, [pc, #420]	; (405098 <_free_r+0x1bc>)
  404ef2:	f027 0301 	bic.w	r3, r7, #1
  404ef6:	f1a5 0408 	sub.w	r4, r5, #8
  404efa:	18e2      	adds	r2, r4, r3
  404efc:	688e      	ldr	r6, [r1, #8]
  404efe:	6850      	ldr	r0, [r2, #4]
  404f00:	42b2      	cmp	r2, r6
  404f02:	f020 0003 	bic.w	r0, r0, #3
  404f06:	d05e      	beq.n	404fc6 <_free_r+0xea>
  404f08:	07fe      	lsls	r6, r7, #31
  404f0a:	6050      	str	r0, [r2, #4]
  404f0c:	d40b      	bmi.n	404f26 <_free_r+0x4a>
  404f0e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  404f12:	1be4      	subs	r4, r4, r7
  404f14:	f101 0e08 	add.w	lr, r1, #8
  404f18:	68a5      	ldr	r5, [r4, #8]
  404f1a:	4575      	cmp	r5, lr
  404f1c:	443b      	add	r3, r7
  404f1e:	d06d      	beq.n	404ffc <_free_r+0x120>
  404f20:	68e7      	ldr	r7, [r4, #12]
  404f22:	60ef      	str	r7, [r5, #12]
  404f24:	60bd      	str	r5, [r7, #8]
  404f26:	1815      	adds	r5, r2, r0
  404f28:	686d      	ldr	r5, [r5, #4]
  404f2a:	07ed      	lsls	r5, r5, #31
  404f2c:	d53e      	bpl.n	404fac <_free_r+0xd0>
  404f2e:	f043 0201 	orr.w	r2, r3, #1
  404f32:	6062      	str	r2, [r4, #4]
  404f34:	50e3      	str	r3, [r4, r3]
  404f36:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404f3a:	d217      	bcs.n	404f6c <_free_r+0x90>
  404f3c:	08db      	lsrs	r3, r3, #3
  404f3e:	1c58      	adds	r0, r3, #1
  404f40:	109a      	asrs	r2, r3, #2
  404f42:	684d      	ldr	r5, [r1, #4]
  404f44:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  404f48:	60a7      	str	r7, [r4, #8]
  404f4a:	2301      	movs	r3, #1
  404f4c:	4093      	lsls	r3, r2
  404f4e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  404f52:	432b      	orrs	r3, r5
  404f54:	3a08      	subs	r2, #8
  404f56:	60e2      	str	r2, [r4, #12]
  404f58:	604b      	str	r3, [r1, #4]
  404f5a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  404f5e:	60fc      	str	r4, [r7, #12]
  404f60:	4640      	mov	r0, r8
  404f62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404f66:	f7ff bad3 	b.w	404510 <__malloc_unlock>
  404f6a:	4770      	bx	lr
  404f6c:	0a5a      	lsrs	r2, r3, #9
  404f6e:	2a04      	cmp	r2, #4
  404f70:	d852      	bhi.n	405018 <_free_r+0x13c>
  404f72:	099a      	lsrs	r2, r3, #6
  404f74:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404f78:	00ff      	lsls	r7, r7, #3
  404f7a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  404f7e:	19c8      	adds	r0, r1, r7
  404f80:	59ca      	ldr	r2, [r1, r7]
  404f82:	3808      	subs	r0, #8
  404f84:	4290      	cmp	r0, r2
  404f86:	d04f      	beq.n	405028 <_free_r+0x14c>
  404f88:	6851      	ldr	r1, [r2, #4]
  404f8a:	f021 0103 	bic.w	r1, r1, #3
  404f8e:	428b      	cmp	r3, r1
  404f90:	d232      	bcs.n	404ff8 <_free_r+0x11c>
  404f92:	6892      	ldr	r2, [r2, #8]
  404f94:	4290      	cmp	r0, r2
  404f96:	d1f7      	bne.n	404f88 <_free_r+0xac>
  404f98:	68c3      	ldr	r3, [r0, #12]
  404f9a:	60a0      	str	r0, [r4, #8]
  404f9c:	60e3      	str	r3, [r4, #12]
  404f9e:	609c      	str	r4, [r3, #8]
  404fa0:	60c4      	str	r4, [r0, #12]
  404fa2:	4640      	mov	r0, r8
  404fa4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404fa8:	f7ff bab2 	b.w	404510 <__malloc_unlock>
  404fac:	6895      	ldr	r5, [r2, #8]
  404fae:	4f3b      	ldr	r7, [pc, #236]	; (40509c <_free_r+0x1c0>)
  404fb0:	42bd      	cmp	r5, r7
  404fb2:	4403      	add	r3, r0
  404fb4:	d040      	beq.n	405038 <_free_r+0x15c>
  404fb6:	68d0      	ldr	r0, [r2, #12]
  404fb8:	60e8      	str	r0, [r5, #12]
  404fba:	f043 0201 	orr.w	r2, r3, #1
  404fbe:	6085      	str	r5, [r0, #8]
  404fc0:	6062      	str	r2, [r4, #4]
  404fc2:	50e3      	str	r3, [r4, r3]
  404fc4:	e7b7      	b.n	404f36 <_free_r+0x5a>
  404fc6:	07ff      	lsls	r7, r7, #31
  404fc8:	4403      	add	r3, r0
  404fca:	d407      	bmi.n	404fdc <_free_r+0x100>
  404fcc:	f855 2c08 	ldr.w	r2, [r5, #-8]
  404fd0:	1aa4      	subs	r4, r4, r2
  404fd2:	4413      	add	r3, r2
  404fd4:	68a0      	ldr	r0, [r4, #8]
  404fd6:	68e2      	ldr	r2, [r4, #12]
  404fd8:	60c2      	str	r2, [r0, #12]
  404fda:	6090      	str	r0, [r2, #8]
  404fdc:	4a30      	ldr	r2, [pc, #192]	; (4050a0 <_free_r+0x1c4>)
  404fde:	6812      	ldr	r2, [r2, #0]
  404fe0:	f043 0001 	orr.w	r0, r3, #1
  404fe4:	4293      	cmp	r3, r2
  404fe6:	6060      	str	r0, [r4, #4]
  404fe8:	608c      	str	r4, [r1, #8]
  404fea:	d3b9      	bcc.n	404f60 <_free_r+0x84>
  404fec:	4b2d      	ldr	r3, [pc, #180]	; (4050a4 <_free_r+0x1c8>)
  404fee:	4640      	mov	r0, r8
  404ff0:	6819      	ldr	r1, [r3, #0]
  404ff2:	f7ff ff23 	bl	404e3c <_malloc_trim_r>
  404ff6:	e7b3      	b.n	404f60 <_free_r+0x84>
  404ff8:	4610      	mov	r0, r2
  404ffa:	e7cd      	b.n	404f98 <_free_r+0xbc>
  404ffc:	1811      	adds	r1, r2, r0
  404ffe:	6849      	ldr	r1, [r1, #4]
  405000:	07c9      	lsls	r1, r1, #31
  405002:	d444      	bmi.n	40508e <_free_r+0x1b2>
  405004:	6891      	ldr	r1, [r2, #8]
  405006:	68d2      	ldr	r2, [r2, #12]
  405008:	60ca      	str	r2, [r1, #12]
  40500a:	4403      	add	r3, r0
  40500c:	f043 0001 	orr.w	r0, r3, #1
  405010:	6091      	str	r1, [r2, #8]
  405012:	6060      	str	r0, [r4, #4]
  405014:	50e3      	str	r3, [r4, r3]
  405016:	e7a3      	b.n	404f60 <_free_r+0x84>
  405018:	2a14      	cmp	r2, #20
  40501a:	d816      	bhi.n	40504a <_free_r+0x16e>
  40501c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  405020:	00ff      	lsls	r7, r7, #3
  405022:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  405026:	e7aa      	b.n	404f7e <_free_r+0xa2>
  405028:	10aa      	asrs	r2, r5, #2
  40502a:	2301      	movs	r3, #1
  40502c:	684d      	ldr	r5, [r1, #4]
  40502e:	4093      	lsls	r3, r2
  405030:	432b      	orrs	r3, r5
  405032:	604b      	str	r3, [r1, #4]
  405034:	4603      	mov	r3, r0
  405036:	e7b0      	b.n	404f9a <_free_r+0xbe>
  405038:	f043 0201 	orr.w	r2, r3, #1
  40503c:	614c      	str	r4, [r1, #20]
  40503e:	610c      	str	r4, [r1, #16]
  405040:	60e5      	str	r5, [r4, #12]
  405042:	60a5      	str	r5, [r4, #8]
  405044:	6062      	str	r2, [r4, #4]
  405046:	50e3      	str	r3, [r4, r3]
  405048:	e78a      	b.n	404f60 <_free_r+0x84>
  40504a:	2a54      	cmp	r2, #84	; 0x54
  40504c:	d806      	bhi.n	40505c <_free_r+0x180>
  40504e:	0b1a      	lsrs	r2, r3, #12
  405050:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405054:	00ff      	lsls	r7, r7, #3
  405056:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40505a:	e790      	b.n	404f7e <_free_r+0xa2>
  40505c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405060:	d806      	bhi.n	405070 <_free_r+0x194>
  405062:	0bda      	lsrs	r2, r3, #15
  405064:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405068:	00ff      	lsls	r7, r7, #3
  40506a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40506e:	e786      	b.n	404f7e <_free_r+0xa2>
  405070:	f240 5054 	movw	r0, #1364	; 0x554
  405074:	4282      	cmp	r2, r0
  405076:	d806      	bhi.n	405086 <_free_r+0x1aa>
  405078:	0c9a      	lsrs	r2, r3, #18
  40507a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40507e:	00ff      	lsls	r7, r7, #3
  405080:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405084:	e77b      	b.n	404f7e <_free_r+0xa2>
  405086:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40508a:	257e      	movs	r5, #126	; 0x7e
  40508c:	e777      	b.n	404f7e <_free_r+0xa2>
  40508e:	f043 0101 	orr.w	r1, r3, #1
  405092:	6061      	str	r1, [r4, #4]
  405094:	6013      	str	r3, [r2, #0]
  405096:	e763      	b.n	404f60 <_free_r+0x84>
  405098:	20400454 	.word	0x20400454
  40509c:	2040045c 	.word	0x2040045c
  4050a0:	20400860 	.word	0x20400860
  4050a4:	20400ca4 	.word	0x20400ca4

004050a8 <__ascii_mbtowc>:
  4050a8:	b082      	sub	sp, #8
  4050aa:	b149      	cbz	r1, 4050c0 <__ascii_mbtowc+0x18>
  4050ac:	b15a      	cbz	r2, 4050c6 <__ascii_mbtowc+0x1e>
  4050ae:	b16b      	cbz	r3, 4050cc <__ascii_mbtowc+0x24>
  4050b0:	7813      	ldrb	r3, [r2, #0]
  4050b2:	600b      	str	r3, [r1, #0]
  4050b4:	7812      	ldrb	r2, [r2, #0]
  4050b6:	1c10      	adds	r0, r2, #0
  4050b8:	bf18      	it	ne
  4050ba:	2001      	movne	r0, #1
  4050bc:	b002      	add	sp, #8
  4050be:	4770      	bx	lr
  4050c0:	a901      	add	r1, sp, #4
  4050c2:	2a00      	cmp	r2, #0
  4050c4:	d1f3      	bne.n	4050ae <__ascii_mbtowc+0x6>
  4050c6:	4610      	mov	r0, r2
  4050c8:	b002      	add	sp, #8
  4050ca:	4770      	bx	lr
  4050cc:	f06f 0001 	mvn.w	r0, #1
  4050d0:	e7f4      	b.n	4050bc <__ascii_mbtowc+0x14>
  4050d2:	bf00      	nop

004050d4 <memmove>:
  4050d4:	4288      	cmp	r0, r1
  4050d6:	b5f0      	push	{r4, r5, r6, r7, lr}
  4050d8:	d90d      	bls.n	4050f6 <memmove+0x22>
  4050da:	188b      	adds	r3, r1, r2
  4050dc:	4298      	cmp	r0, r3
  4050de:	d20a      	bcs.n	4050f6 <memmove+0x22>
  4050e0:	1884      	adds	r4, r0, r2
  4050e2:	2a00      	cmp	r2, #0
  4050e4:	d051      	beq.n	40518a <memmove+0xb6>
  4050e6:	4622      	mov	r2, r4
  4050e8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4050ec:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4050f0:	4299      	cmp	r1, r3
  4050f2:	d1f9      	bne.n	4050e8 <memmove+0x14>
  4050f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4050f6:	2a0f      	cmp	r2, #15
  4050f8:	d948      	bls.n	40518c <memmove+0xb8>
  4050fa:	ea41 0300 	orr.w	r3, r1, r0
  4050fe:	079b      	lsls	r3, r3, #30
  405100:	d146      	bne.n	405190 <memmove+0xbc>
  405102:	f100 0410 	add.w	r4, r0, #16
  405106:	f101 0310 	add.w	r3, r1, #16
  40510a:	4615      	mov	r5, r2
  40510c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405110:	f844 6c10 	str.w	r6, [r4, #-16]
  405114:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405118:	f844 6c0c 	str.w	r6, [r4, #-12]
  40511c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405120:	f844 6c08 	str.w	r6, [r4, #-8]
  405124:	3d10      	subs	r5, #16
  405126:	f853 6c04 	ldr.w	r6, [r3, #-4]
  40512a:	f844 6c04 	str.w	r6, [r4, #-4]
  40512e:	2d0f      	cmp	r5, #15
  405130:	f103 0310 	add.w	r3, r3, #16
  405134:	f104 0410 	add.w	r4, r4, #16
  405138:	d8e8      	bhi.n	40510c <memmove+0x38>
  40513a:	f1a2 0310 	sub.w	r3, r2, #16
  40513e:	f023 030f 	bic.w	r3, r3, #15
  405142:	f002 0e0f 	and.w	lr, r2, #15
  405146:	3310      	adds	r3, #16
  405148:	f1be 0f03 	cmp.w	lr, #3
  40514c:	4419      	add	r1, r3
  40514e:	4403      	add	r3, r0
  405150:	d921      	bls.n	405196 <memmove+0xc2>
  405152:	1f1e      	subs	r6, r3, #4
  405154:	460d      	mov	r5, r1
  405156:	4674      	mov	r4, lr
  405158:	3c04      	subs	r4, #4
  40515a:	f855 7b04 	ldr.w	r7, [r5], #4
  40515e:	f846 7f04 	str.w	r7, [r6, #4]!
  405162:	2c03      	cmp	r4, #3
  405164:	d8f8      	bhi.n	405158 <memmove+0x84>
  405166:	f1ae 0404 	sub.w	r4, lr, #4
  40516a:	f024 0403 	bic.w	r4, r4, #3
  40516e:	3404      	adds	r4, #4
  405170:	4421      	add	r1, r4
  405172:	4423      	add	r3, r4
  405174:	f002 0203 	and.w	r2, r2, #3
  405178:	b162      	cbz	r2, 405194 <memmove+0xc0>
  40517a:	3b01      	subs	r3, #1
  40517c:	440a      	add	r2, r1
  40517e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405182:	f803 4f01 	strb.w	r4, [r3, #1]!
  405186:	428a      	cmp	r2, r1
  405188:	d1f9      	bne.n	40517e <memmove+0xaa>
  40518a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40518c:	4603      	mov	r3, r0
  40518e:	e7f3      	b.n	405178 <memmove+0xa4>
  405190:	4603      	mov	r3, r0
  405192:	e7f2      	b.n	40517a <memmove+0xa6>
  405194:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405196:	4672      	mov	r2, lr
  405198:	e7ee      	b.n	405178 <memmove+0xa4>
  40519a:	bf00      	nop

0040519c <_realloc_r>:
  40519c:	2900      	cmp	r1, #0
  40519e:	f000 8095 	beq.w	4052cc <_realloc_r+0x130>
  4051a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4051a6:	460d      	mov	r5, r1
  4051a8:	4616      	mov	r6, r2
  4051aa:	b083      	sub	sp, #12
  4051ac:	4680      	mov	r8, r0
  4051ae:	f106 070b 	add.w	r7, r6, #11
  4051b2:	f7ff f9a7 	bl	404504 <__malloc_lock>
  4051b6:	f855 ec04 	ldr.w	lr, [r5, #-4]
  4051ba:	2f16      	cmp	r7, #22
  4051bc:	f02e 0403 	bic.w	r4, lr, #3
  4051c0:	f1a5 0908 	sub.w	r9, r5, #8
  4051c4:	d83c      	bhi.n	405240 <_realloc_r+0xa4>
  4051c6:	2210      	movs	r2, #16
  4051c8:	4617      	mov	r7, r2
  4051ca:	42be      	cmp	r6, r7
  4051cc:	d83d      	bhi.n	40524a <_realloc_r+0xae>
  4051ce:	4294      	cmp	r4, r2
  4051d0:	da43      	bge.n	40525a <_realloc_r+0xbe>
  4051d2:	4bc4      	ldr	r3, [pc, #784]	; (4054e4 <_realloc_r+0x348>)
  4051d4:	6899      	ldr	r1, [r3, #8]
  4051d6:	eb09 0004 	add.w	r0, r9, r4
  4051da:	4288      	cmp	r0, r1
  4051dc:	f000 80b4 	beq.w	405348 <_realloc_r+0x1ac>
  4051e0:	6843      	ldr	r3, [r0, #4]
  4051e2:	f023 0101 	bic.w	r1, r3, #1
  4051e6:	4401      	add	r1, r0
  4051e8:	6849      	ldr	r1, [r1, #4]
  4051ea:	07c9      	lsls	r1, r1, #31
  4051ec:	d54c      	bpl.n	405288 <_realloc_r+0xec>
  4051ee:	f01e 0f01 	tst.w	lr, #1
  4051f2:	f000 809b 	beq.w	40532c <_realloc_r+0x190>
  4051f6:	4631      	mov	r1, r6
  4051f8:	4640      	mov	r0, r8
  4051fa:	f7fe fde7 	bl	403dcc <_malloc_r>
  4051fe:	4606      	mov	r6, r0
  405200:	2800      	cmp	r0, #0
  405202:	d03a      	beq.n	40527a <_realloc_r+0xde>
  405204:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405208:	f023 0301 	bic.w	r3, r3, #1
  40520c:	444b      	add	r3, r9
  40520e:	f1a0 0208 	sub.w	r2, r0, #8
  405212:	429a      	cmp	r2, r3
  405214:	f000 8121 	beq.w	40545a <_realloc_r+0x2be>
  405218:	1f22      	subs	r2, r4, #4
  40521a:	2a24      	cmp	r2, #36	; 0x24
  40521c:	f200 8107 	bhi.w	40542e <_realloc_r+0x292>
  405220:	2a13      	cmp	r2, #19
  405222:	f200 80db 	bhi.w	4053dc <_realloc_r+0x240>
  405226:	4603      	mov	r3, r0
  405228:	462a      	mov	r2, r5
  40522a:	6811      	ldr	r1, [r2, #0]
  40522c:	6019      	str	r1, [r3, #0]
  40522e:	6851      	ldr	r1, [r2, #4]
  405230:	6059      	str	r1, [r3, #4]
  405232:	6892      	ldr	r2, [r2, #8]
  405234:	609a      	str	r2, [r3, #8]
  405236:	4629      	mov	r1, r5
  405238:	4640      	mov	r0, r8
  40523a:	f7ff fe4f 	bl	404edc <_free_r>
  40523e:	e01c      	b.n	40527a <_realloc_r+0xde>
  405240:	f027 0707 	bic.w	r7, r7, #7
  405244:	2f00      	cmp	r7, #0
  405246:	463a      	mov	r2, r7
  405248:	dabf      	bge.n	4051ca <_realloc_r+0x2e>
  40524a:	2600      	movs	r6, #0
  40524c:	230c      	movs	r3, #12
  40524e:	4630      	mov	r0, r6
  405250:	f8c8 3000 	str.w	r3, [r8]
  405254:	b003      	add	sp, #12
  405256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40525a:	462e      	mov	r6, r5
  40525c:	1be3      	subs	r3, r4, r7
  40525e:	2b0f      	cmp	r3, #15
  405260:	d81e      	bhi.n	4052a0 <_realloc_r+0x104>
  405262:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405266:	f003 0301 	and.w	r3, r3, #1
  40526a:	4323      	orrs	r3, r4
  40526c:	444c      	add	r4, r9
  40526e:	f8c9 3004 	str.w	r3, [r9, #4]
  405272:	6863      	ldr	r3, [r4, #4]
  405274:	f043 0301 	orr.w	r3, r3, #1
  405278:	6063      	str	r3, [r4, #4]
  40527a:	4640      	mov	r0, r8
  40527c:	f7ff f948 	bl	404510 <__malloc_unlock>
  405280:	4630      	mov	r0, r6
  405282:	b003      	add	sp, #12
  405284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405288:	f023 0303 	bic.w	r3, r3, #3
  40528c:	18e1      	adds	r1, r4, r3
  40528e:	4291      	cmp	r1, r2
  405290:	db1f      	blt.n	4052d2 <_realloc_r+0x136>
  405292:	68c3      	ldr	r3, [r0, #12]
  405294:	6882      	ldr	r2, [r0, #8]
  405296:	462e      	mov	r6, r5
  405298:	60d3      	str	r3, [r2, #12]
  40529a:	460c      	mov	r4, r1
  40529c:	609a      	str	r2, [r3, #8]
  40529e:	e7dd      	b.n	40525c <_realloc_r+0xc0>
  4052a0:	f8d9 2004 	ldr.w	r2, [r9, #4]
  4052a4:	eb09 0107 	add.w	r1, r9, r7
  4052a8:	f002 0201 	and.w	r2, r2, #1
  4052ac:	444c      	add	r4, r9
  4052ae:	f043 0301 	orr.w	r3, r3, #1
  4052b2:	4317      	orrs	r7, r2
  4052b4:	f8c9 7004 	str.w	r7, [r9, #4]
  4052b8:	604b      	str	r3, [r1, #4]
  4052ba:	6863      	ldr	r3, [r4, #4]
  4052bc:	f043 0301 	orr.w	r3, r3, #1
  4052c0:	3108      	adds	r1, #8
  4052c2:	6063      	str	r3, [r4, #4]
  4052c4:	4640      	mov	r0, r8
  4052c6:	f7ff fe09 	bl	404edc <_free_r>
  4052ca:	e7d6      	b.n	40527a <_realloc_r+0xde>
  4052cc:	4611      	mov	r1, r2
  4052ce:	f7fe bd7d 	b.w	403dcc <_malloc_r>
  4052d2:	f01e 0f01 	tst.w	lr, #1
  4052d6:	d18e      	bne.n	4051f6 <_realloc_r+0x5a>
  4052d8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4052dc:	eba9 0a01 	sub.w	sl, r9, r1
  4052e0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4052e4:	f021 0103 	bic.w	r1, r1, #3
  4052e8:	440b      	add	r3, r1
  4052ea:	4423      	add	r3, r4
  4052ec:	4293      	cmp	r3, r2
  4052ee:	db25      	blt.n	40533c <_realloc_r+0x1a0>
  4052f0:	68c2      	ldr	r2, [r0, #12]
  4052f2:	6881      	ldr	r1, [r0, #8]
  4052f4:	4656      	mov	r6, sl
  4052f6:	60ca      	str	r2, [r1, #12]
  4052f8:	6091      	str	r1, [r2, #8]
  4052fa:	f8da 100c 	ldr.w	r1, [sl, #12]
  4052fe:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405302:	1f22      	subs	r2, r4, #4
  405304:	2a24      	cmp	r2, #36	; 0x24
  405306:	60c1      	str	r1, [r0, #12]
  405308:	6088      	str	r0, [r1, #8]
  40530a:	f200 8094 	bhi.w	405436 <_realloc_r+0x29a>
  40530e:	2a13      	cmp	r2, #19
  405310:	d96f      	bls.n	4053f2 <_realloc_r+0x256>
  405312:	6829      	ldr	r1, [r5, #0]
  405314:	f8ca 1008 	str.w	r1, [sl, #8]
  405318:	6869      	ldr	r1, [r5, #4]
  40531a:	f8ca 100c 	str.w	r1, [sl, #12]
  40531e:	2a1b      	cmp	r2, #27
  405320:	f200 80a2 	bhi.w	405468 <_realloc_r+0x2cc>
  405324:	3508      	adds	r5, #8
  405326:	f10a 0210 	add.w	r2, sl, #16
  40532a:	e063      	b.n	4053f4 <_realloc_r+0x258>
  40532c:	f855 3c08 	ldr.w	r3, [r5, #-8]
  405330:	eba9 0a03 	sub.w	sl, r9, r3
  405334:	f8da 1004 	ldr.w	r1, [sl, #4]
  405338:	f021 0103 	bic.w	r1, r1, #3
  40533c:	1863      	adds	r3, r4, r1
  40533e:	4293      	cmp	r3, r2
  405340:	f6ff af59 	blt.w	4051f6 <_realloc_r+0x5a>
  405344:	4656      	mov	r6, sl
  405346:	e7d8      	b.n	4052fa <_realloc_r+0x15e>
  405348:	6841      	ldr	r1, [r0, #4]
  40534a:	f021 0b03 	bic.w	fp, r1, #3
  40534e:	44a3      	add	fp, r4
  405350:	f107 0010 	add.w	r0, r7, #16
  405354:	4583      	cmp	fp, r0
  405356:	da56      	bge.n	405406 <_realloc_r+0x26a>
  405358:	f01e 0f01 	tst.w	lr, #1
  40535c:	f47f af4b 	bne.w	4051f6 <_realloc_r+0x5a>
  405360:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405364:	eba9 0a01 	sub.w	sl, r9, r1
  405368:	f8da 1004 	ldr.w	r1, [sl, #4]
  40536c:	f021 0103 	bic.w	r1, r1, #3
  405370:	448b      	add	fp, r1
  405372:	4558      	cmp	r0, fp
  405374:	dce2      	bgt.n	40533c <_realloc_r+0x1a0>
  405376:	4656      	mov	r6, sl
  405378:	f8da 100c 	ldr.w	r1, [sl, #12]
  40537c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405380:	1f22      	subs	r2, r4, #4
  405382:	2a24      	cmp	r2, #36	; 0x24
  405384:	60c1      	str	r1, [r0, #12]
  405386:	6088      	str	r0, [r1, #8]
  405388:	f200 808f 	bhi.w	4054aa <_realloc_r+0x30e>
  40538c:	2a13      	cmp	r2, #19
  40538e:	f240 808a 	bls.w	4054a6 <_realloc_r+0x30a>
  405392:	6829      	ldr	r1, [r5, #0]
  405394:	f8ca 1008 	str.w	r1, [sl, #8]
  405398:	6869      	ldr	r1, [r5, #4]
  40539a:	f8ca 100c 	str.w	r1, [sl, #12]
  40539e:	2a1b      	cmp	r2, #27
  4053a0:	f200 808a 	bhi.w	4054b8 <_realloc_r+0x31c>
  4053a4:	3508      	adds	r5, #8
  4053a6:	f10a 0210 	add.w	r2, sl, #16
  4053aa:	6829      	ldr	r1, [r5, #0]
  4053ac:	6011      	str	r1, [r2, #0]
  4053ae:	6869      	ldr	r1, [r5, #4]
  4053b0:	6051      	str	r1, [r2, #4]
  4053b2:	68a9      	ldr	r1, [r5, #8]
  4053b4:	6091      	str	r1, [r2, #8]
  4053b6:	eb0a 0107 	add.w	r1, sl, r7
  4053ba:	ebab 0207 	sub.w	r2, fp, r7
  4053be:	f042 0201 	orr.w	r2, r2, #1
  4053c2:	6099      	str	r1, [r3, #8]
  4053c4:	604a      	str	r2, [r1, #4]
  4053c6:	f8da 3004 	ldr.w	r3, [sl, #4]
  4053ca:	f003 0301 	and.w	r3, r3, #1
  4053ce:	431f      	orrs	r7, r3
  4053d0:	4640      	mov	r0, r8
  4053d2:	f8ca 7004 	str.w	r7, [sl, #4]
  4053d6:	f7ff f89b 	bl	404510 <__malloc_unlock>
  4053da:	e751      	b.n	405280 <_realloc_r+0xe4>
  4053dc:	682b      	ldr	r3, [r5, #0]
  4053de:	6003      	str	r3, [r0, #0]
  4053e0:	686b      	ldr	r3, [r5, #4]
  4053e2:	6043      	str	r3, [r0, #4]
  4053e4:	2a1b      	cmp	r2, #27
  4053e6:	d82d      	bhi.n	405444 <_realloc_r+0x2a8>
  4053e8:	f100 0308 	add.w	r3, r0, #8
  4053ec:	f105 0208 	add.w	r2, r5, #8
  4053f0:	e71b      	b.n	40522a <_realloc_r+0x8e>
  4053f2:	4632      	mov	r2, r6
  4053f4:	6829      	ldr	r1, [r5, #0]
  4053f6:	6011      	str	r1, [r2, #0]
  4053f8:	6869      	ldr	r1, [r5, #4]
  4053fa:	6051      	str	r1, [r2, #4]
  4053fc:	68a9      	ldr	r1, [r5, #8]
  4053fe:	6091      	str	r1, [r2, #8]
  405400:	461c      	mov	r4, r3
  405402:	46d1      	mov	r9, sl
  405404:	e72a      	b.n	40525c <_realloc_r+0xc0>
  405406:	eb09 0107 	add.w	r1, r9, r7
  40540a:	ebab 0b07 	sub.w	fp, fp, r7
  40540e:	f04b 0201 	orr.w	r2, fp, #1
  405412:	6099      	str	r1, [r3, #8]
  405414:	604a      	str	r2, [r1, #4]
  405416:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40541a:	f003 0301 	and.w	r3, r3, #1
  40541e:	431f      	orrs	r7, r3
  405420:	4640      	mov	r0, r8
  405422:	f845 7c04 	str.w	r7, [r5, #-4]
  405426:	f7ff f873 	bl	404510 <__malloc_unlock>
  40542a:	462e      	mov	r6, r5
  40542c:	e728      	b.n	405280 <_realloc_r+0xe4>
  40542e:	4629      	mov	r1, r5
  405430:	f7ff fe50 	bl	4050d4 <memmove>
  405434:	e6ff      	b.n	405236 <_realloc_r+0x9a>
  405436:	4629      	mov	r1, r5
  405438:	4630      	mov	r0, r6
  40543a:	461c      	mov	r4, r3
  40543c:	46d1      	mov	r9, sl
  40543e:	f7ff fe49 	bl	4050d4 <memmove>
  405442:	e70b      	b.n	40525c <_realloc_r+0xc0>
  405444:	68ab      	ldr	r3, [r5, #8]
  405446:	6083      	str	r3, [r0, #8]
  405448:	68eb      	ldr	r3, [r5, #12]
  40544a:	60c3      	str	r3, [r0, #12]
  40544c:	2a24      	cmp	r2, #36	; 0x24
  40544e:	d017      	beq.n	405480 <_realloc_r+0x2e4>
  405450:	f100 0310 	add.w	r3, r0, #16
  405454:	f105 0210 	add.w	r2, r5, #16
  405458:	e6e7      	b.n	40522a <_realloc_r+0x8e>
  40545a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40545e:	f023 0303 	bic.w	r3, r3, #3
  405462:	441c      	add	r4, r3
  405464:	462e      	mov	r6, r5
  405466:	e6f9      	b.n	40525c <_realloc_r+0xc0>
  405468:	68a9      	ldr	r1, [r5, #8]
  40546a:	f8ca 1010 	str.w	r1, [sl, #16]
  40546e:	68e9      	ldr	r1, [r5, #12]
  405470:	f8ca 1014 	str.w	r1, [sl, #20]
  405474:	2a24      	cmp	r2, #36	; 0x24
  405476:	d00c      	beq.n	405492 <_realloc_r+0x2f6>
  405478:	3510      	adds	r5, #16
  40547a:	f10a 0218 	add.w	r2, sl, #24
  40547e:	e7b9      	b.n	4053f4 <_realloc_r+0x258>
  405480:	692b      	ldr	r3, [r5, #16]
  405482:	6103      	str	r3, [r0, #16]
  405484:	696b      	ldr	r3, [r5, #20]
  405486:	6143      	str	r3, [r0, #20]
  405488:	f105 0218 	add.w	r2, r5, #24
  40548c:	f100 0318 	add.w	r3, r0, #24
  405490:	e6cb      	b.n	40522a <_realloc_r+0x8e>
  405492:	692a      	ldr	r2, [r5, #16]
  405494:	f8ca 2018 	str.w	r2, [sl, #24]
  405498:	696a      	ldr	r2, [r5, #20]
  40549a:	f8ca 201c 	str.w	r2, [sl, #28]
  40549e:	3518      	adds	r5, #24
  4054a0:	f10a 0220 	add.w	r2, sl, #32
  4054a4:	e7a6      	b.n	4053f4 <_realloc_r+0x258>
  4054a6:	4632      	mov	r2, r6
  4054a8:	e77f      	b.n	4053aa <_realloc_r+0x20e>
  4054aa:	4629      	mov	r1, r5
  4054ac:	4630      	mov	r0, r6
  4054ae:	9301      	str	r3, [sp, #4]
  4054b0:	f7ff fe10 	bl	4050d4 <memmove>
  4054b4:	9b01      	ldr	r3, [sp, #4]
  4054b6:	e77e      	b.n	4053b6 <_realloc_r+0x21a>
  4054b8:	68a9      	ldr	r1, [r5, #8]
  4054ba:	f8ca 1010 	str.w	r1, [sl, #16]
  4054be:	68e9      	ldr	r1, [r5, #12]
  4054c0:	f8ca 1014 	str.w	r1, [sl, #20]
  4054c4:	2a24      	cmp	r2, #36	; 0x24
  4054c6:	d003      	beq.n	4054d0 <_realloc_r+0x334>
  4054c8:	3510      	adds	r5, #16
  4054ca:	f10a 0218 	add.w	r2, sl, #24
  4054ce:	e76c      	b.n	4053aa <_realloc_r+0x20e>
  4054d0:	692a      	ldr	r2, [r5, #16]
  4054d2:	f8ca 2018 	str.w	r2, [sl, #24]
  4054d6:	696a      	ldr	r2, [r5, #20]
  4054d8:	f8ca 201c 	str.w	r2, [sl, #28]
  4054dc:	3518      	adds	r5, #24
  4054de:	f10a 0220 	add.w	r2, sl, #32
  4054e2:	e762      	b.n	4053aa <_realloc_r+0x20e>
  4054e4:	20400454 	.word	0x20400454

004054e8 <__ascii_wctomb>:
  4054e8:	b121      	cbz	r1, 4054f4 <__ascii_wctomb+0xc>
  4054ea:	2aff      	cmp	r2, #255	; 0xff
  4054ec:	d804      	bhi.n	4054f8 <__ascii_wctomb+0x10>
  4054ee:	700a      	strb	r2, [r1, #0]
  4054f0:	2001      	movs	r0, #1
  4054f2:	4770      	bx	lr
  4054f4:	4608      	mov	r0, r1
  4054f6:	4770      	bx	lr
  4054f8:	238a      	movs	r3, #138	; 0x8a
  4054fa:	6003      	str	r3, [r0, #0]
  4054fc:	f04f 30ff 	mov.w	r0, #4294967295
  405500:	4770      	bx	lr
  405502:	bf00      	nop

00405504 <__aeabi_drsub>:
  405504:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405508:	e002      	b.n	405510 <__adddf3>
  40550a:	bf00      	nop

0040550c <__aeabi_dsub>:
  40550c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405510 <__adddf3>:
  405510:	b530      	push	{r4, r5, lr}
  405512:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405516:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40551a:	ea94 0f05 	teq	r4, r5
  40551e:	bf08      	it	eq
  405520:	ea90 0f02 	teqeq	r0, r2
  405524:	bf1f      	itttt	ne
  405526:	ea54 0c00 	orrsne.w	ip, r4, r0
  40552a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40552e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  405532:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405536:	f000 80e2 	beq.w	4056fe <__adddf3+0x1ee>
  40553a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40553e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405542:	bfb8      	it	lt
  405544:	426d      	neglt	r5, r5
  405546:	dd0c      	ble.n	405562 <__adddf3+0x52>
  405548:	442c      	add	r4, r5
  40554a:	ea80 0202 	eor.w	r2, r0, r2
  40554e:	ea81 0303 	eor.w	r3, r1, r3
  405552:	ea82 0000 	eor.w	r0, r2, r0
  405556:	ea83 0101 	eor.w	r1, r3, r1
  40555a:	ea80 0202 	eor.w	r2, r0, r2
  40555e:	ea81 0303 	eor.w	r3, r1, r3
  405562:	2d36      	cmp	r5, #54	; 0x36
  405564:	bf88      	it	hi
  405566:	bd30      	pophi	{r4, r5, pc}
  405568:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40556c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405570:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405574:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405578:	d002      	beq.n	405580 <__adddf3+0x70>
  40557a:	4240      	negs	r0, r0
  40557c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405580:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405584:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405588:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40558c:	d002      	beq.n	405594 <__adddf3+0x84>
  40558e:	4252      	negs	r2, r2
  405590:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405594:	ea94 0f05 	teq	r4, r5
  405598:	f000 80a7 	beq.w	4056ea <__adddf3+0x1da>
  40559c:	f1a4 0401 	sub.w	r4, r4, #1
  4055a0:	f1d5 0e20 	rsbs	lr, r5, #32
  4055a4:	db0d      	blt.n	4055c2 <__adddf3+0xb2>
  4055a6:	fa02 fc0e 	lsl.w	ip, r2, lr
  4055aa:	fa22 f205 	lsr.w	r2, r2, r5
  4055ae:	1880      	adds	r0, r0, r2
  4055b0:	f141 0100 	adc.w	r1, r1, #0
  4055b4:	fa03 f20e 	lsl.w	r2, r3, lr
  4055b8:	1880      	adds	r0, r0, r2
  4055ba:	fa43 f305 	asr.w	r3, r3, r5
  4055be:	4159      	adcs	r1, r3
  4055c0:	e00e      	b.n	4055e0 <__adddf3+0xd0>
  4055c2:	f1a5 0520 	sub.w	r5, r5, #32
  4055c6:	f10e 0e20 	add.w	lr, lr, #32
  4055ca:	2a01      	cmp	r2, #1
  4055cc:	fa03 fc0e 	lsl.w	ip, r3, lr
  4055d0:	bf28      	it	cs
  4055d2:	f04c 0c02 	orrcs.w	ip, ip, #2
  4055d6:	fa43 f305 	asr.w	r3, r3, r5
  4055da:	18c0      	adds	r0, r0, r3
  4055dc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4055e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4055e4:	d507      	bpl.n	4055f6 <__adddf3+0xe6>
  4055e6:	f04f 0e00 	mov.w	lr, #0
  4055ea:	f1dc 0c00 	rsbs	ip, ip, #0
  4055ee:	eb7e 0000 	sbcs.w	r0, lr, r0
  4055f2:	eb6e 0101 	sbc.w	r1, lr, r1
  4055f6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4055fa:	d31b      	bcc.n	405634 <__adddf3+0x124>
  4055fc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405600:	d30c      	bcc.n	40561c <__adddf3+0x10c>
  405602:	0849      	lsrs	r1, r1, #1
  405604:	ea5f 0030 	movs.w	r0, r0, rrx
  405608:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40560c:	f104 0401 	add.w	r4, r4, #1
  405610:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405614:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405618:	f080 809a 	bcs.w	405750 <__adddf3+0x240>
  40561c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  405620:	bf08      	it	eq
  405622:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405626:	f150 0000 	adcs.w	r0, r0, #0
  40562a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40562e:	ea41 0105 	orr.w	r1, r1, r5
  405632:	bd30      	pop	{r4, r5, pc}
  405634:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  405638:	4140      	adcs	r0, r0
  40563a:	eb41 0101 	adc.w	r1, r1, r1
  40563e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405642:	f1a4 0401 	sub.w	r4, r4, #1
  405646:	d1e9      	bne.n	40561c <__adddf3+0x10c>
  405648:	f091 0f00 	teq	r1, #0
  40564c:	bf04      	itt	eq
  40564e:	4601      	moveq	r1, r0
  405650:	2000      	moveq	r0, #0
  405652:	fab1 f381 	clz	r3, r1
  405656:	bf08      	it	eq
  405658:	3320      	addeq	r3, #32
  40565a:	f1a3 030b 	sub.w	r3, r3, #11
  40565e:	f1b3 0220 	subs.w	r2, r3, #32
  405662:	da0c      	bge.n	40567e <__adddf3+0x16e>
  405664:	320c      	adds	r2, #12
  405666:	dd08      	ble.n	40567a <__adddf3+0x16a>
  405668:	f102 0c14 	add.w	ip, r2, #20
  40566c:	f1c2 020c 	rsb	r2, r2, #12
  405670:	fa01 f00c 	lsl.w	r0, r1, ip
  405674:	fa21 f102 	lsr.w	r1, r1, r2
  405678:	e00c      	b.n	405694 <__adddf3+0x184>
  40567a:	f102 0214 	add.w	r2, r2, #20
  40567e:	bfd8      	it	le
  405680:	f1c2 0c20 	rsble	ip, r2, #32
  405684:	fa01 f102 	lsl.w	r1, r1, r2
  405688:	fa20 fc0c 	lsr.w	ip, r0, ip
  40568c:	bfdc      	itt	le
  40568e:	ea41 010c 	orrle.w	r1, r1, ip
  405692:	4090      	lslle	r0, r2
  405694:	1ae4      	subs	r4, r4, r3
  405696:	bfa2      	ittt	ge
  405698:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40569c:	4329      	orrge	r1, r5
  40569e:	bd30      	popge	{r4, r5, pc}
  4056a0:	ea6f 0404 	mvn.w	r4, r4
  4056a4:	3c1f      	subs	r4, #31
  4056a6:	da1c      	bge.n	4056e2 <__adddf3+0x1d2>
  4056a8:	340c      	adds	r4, #12
  4056aa:	dc0e      	bgt.n	4056ca <__adddf3+0x1ba>
  4056ac:	f104 0414 	add.w	r4, r4, #20
  4056b0:	f1c4 0220 	rsb	r2, r4, #32
  4056b4:	fa20 f004 	lsr.w	r0, r0, r4
  4056b8:	fa01 f302 	lsl.w	r3, r1, r2
  4056bc:	ea40 0003 	orr.w	r0, r0, r3
  4056c0:	fa21 f304 	lsr.w	r3, r1, r4
  4056c4:	ea45 0103 	orr.w	r1, r5, r3
  4056c8:	bd30      	pop	{r4, r5, pc}
  4056ca:	f1c4 040c 	rsb	r4, r4, #12
  4056ce:	f1c4 0220 	rsb	r2, r4, #32
  4056d2:	fa20 f002 	lsr.w	r0, r0, r2
  4056d6:	fa01 f304 	lsl.w	r3, r1, r4
  4056da:	ea40 0003 	orr.w	r0, r0, r3
  4056de:	4629      	mov	r1, r5
  4056e0:	bd30      	pop	{r4, r5, pc}
  4056e2:	fa21 f004 	lsr.w	r0, r1, r4
  4056e6:	4629      	mov	r1, r5
  4056e8:	bd30      	pop	{r4, r5, pc}
  4056ea:	f094 0f00 	teq	r4, #0
  4056ee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4056f2:	bf06      	itte	eq
  4056f4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4056f8:	3401      	addeq	r4, #1
  4056fa:	3d01      	subne	r5, #1
  4056fc:	e74e      	b.n	40559c <__adddf3+0x8c>
  4056fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405702:	bf18      	it	ne
  405704:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405708:	d029      	beq.n	40575e <__adddf3+0x24e>
  40570a:	ea94 0f05 	teq	r4, r5
  40570e:	bf08      	it	eq
  405710:	ea90 0f02 	teqeq	r0, r2
  405714:	d005      	beq.n	405722 <__adddf3+0x212>
  405716:	ea54 0c00 	orrs.w	ip, r4, r0
  40571a:	bf04      	itt	eq
  40571c:	4619      	moveq	r1, r3
  40571e:	4610      	moveq	r0, r2
  405720:	bd30      	pop	{r4, r5, pc}
  405722:	ea91 0f03 	teq	r1, r3
  405726:	bf1e      	ittt	ne
  405728:	2100      	movne	r1, #0
  40572a:	2000      	movne	r0, #0
  40572c:	bd30      	popne	{r4, r5, pc}
  40572e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  405732:	d105      	bne.n	405740 <__adddf3+0x230>
  405734:	0040      	lsls	r0, r0, #1
  405736:	4149      	adcs	r1, r1
  405738:	bf28      	it	cs
  40573a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40573e:	bd30      	pop	{r4, r5, pc}
  405740:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405744:	bf3c      	itt	cc
  405746:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40574a:	bd30      	popcc	{r4, r5, pc}
  40574c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405750:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405754:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405758:	f04f 0000 	mov.w	r0, #0
  40575c:	bd30      	pop	{r4, r5, pc}
  40575e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405762:	bf1a      	itte	ne
  405764:	4619      	movne	r1, r3
  405766:	4610      	movne	r0, r2
  405768:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  40576c:	bf1c      	itt	ne
  40576e:	460b      	movne	r3, r1
  405770:	4602      	movne	r2, r0
  405772:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405776:	bf06      	itte	eq
  405778:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40577c:	ea91 0f03 	teqeq	r1, r3
  405780:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405784:	bd30      	pop	{r4, r5, pc}
  405786:	bf00      	nop

00405788 <__aeabi_ui2d>:
  405788:	f090 0f00 	teq	r0, #0
  40578c:	bf04      	itt	eq
  40578e:	2100      	moveq	r1, #0
  405790:	4770      	bxeq	lr
  405792:	b530      	push	{r4, r5, lr}
  405794:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405798:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40579c:	f04f 0500 	mov.w	r5, #0
  4057a0:	f04f 0100 	mov.w	r1, #0
  4057a4:	e750      	b.n	405648 <__adddf3+0x138>
  4057a6:	bf00      	nop

004057a8 <__aeabi_i2d>:
  4057a8:	f090 0f00 	teq	r0, #0
  4057ac:	bf04      	itt	eq
  4057ae:	2100      	moveq	r1, #0
  4057b0:	4770      	bxeq	lr
  4057b2:	b530      	push	{r4, r5, lr}
  4057b4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4057b8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4057bc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4057c0:	bf48      	it	mi
  4057c2:	4240      	negmi	r0, r0
  4057c4:	f04f 0100 	mov.w	r1, #0
  4057c8:	e73e      	b.n	405648 <__adddf3+0x138>
  4057ca:	bf00      	nop

004057cc <__aeabi_f2d>:
  4057cc:	0042      	lsls	r2, r0, #1
  4057ce:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4057d2:	ea4f 0131 	mov.w	r1, r1, rrx
  4057d6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4057da:	bf1f      	itttt	ne
  4057dc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4057e0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4057e4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4057e8:	4770      	bxne	lr
  4057ea:	f092 0f00 	teq	r2, #0
  4057ee:	bf14      	ite	ne
  4057f0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4057f4:	4770      	bxeq	lr
  4057f6:	b530      	push	{r4, r5, lr}
  4057f8:	f44f 7460 	mov.w	r4, #896	; 0x380
  4057fc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405800:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405804:	e720      	b.n	405648 <__adddf3+0x138>
  405806:	bf00      	nop

00405808 <__aeabi_ul2d>:
  405808:	ea50 0201 	orrs.w	r2, r0, r1
  40580c:	bf08      	it	eq
  40580e:	4770      	bxeq	lr
  405810:	b530      	push	{r4, r5, lr}
  405812:	f04f 0500 	mov.w	r5, #0
  405816:	e00a      	b.n	40582e <__aeabi_l2d+0x16>

00405818 <__aeabi_l2d>:
  405818:	ea50 0201 	orrs.w	r2, r0, r1
  40581c:	bf08      	it	eq
  40581e:	4770      	bxeq	lr
  405820:	b530      	push	{r4, r5, lr}
  405822:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405826:	d502      	bpl.n	40582e <__aeabi_l2d+0x16>
  405828:	4240      	negs	r0, r0
  40582a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40582e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405832:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405836:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40583a:	f43f aedc 	beq.w	4055f6 <__adddf3+0xe6>
  40583e:	f04f 0203 	mov.w	r2, #3
  405842:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405846:	bf18      	it	ne
  405848:	3203      	addne	r2, #3
  40584a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40584e:	bf18      	it	ne
  405850:	3203      	addne	r2, #3
  405852:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405856:	f1c2 0320 	rsb	r3, r2, #32
  40585a:	fa00 fc03 	lsl.w	ip, r0, r3
  40585e:	fa20 f002 	lsr.w	r0, r0, r2
  405862:	fa01 fe03 	lsl.w	lr, r1, r3
  405866:	ea40 000e 	orr.w	r0, r0, lr
  40586a:	fa21 f102 	lsr.w	r1, r1, r2
  40586e:	4414      	add	r4, r2
  405870:	e6c1      	b.n	4055f6 <__adddf3+0xe6>
  405872:	bf00      	nop

00405874 <__aeabi_dmul>:
  405874:	b570      	push	{r4, r5, r6, lr}
  405876:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40587a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40587e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405882:	bf1d      	ittte	ne
  405884:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405888:	ea94 0f0c 	teqne	r4, ip
  40588c:	ea95 0f0c 	teqne	r5, ip
  405890:	f000 f8de 	bleq	405a50 <__aeabi_dmul+0x1dc>
  405894:	442c      	add	r4, r5
  405896:	ea81 0603 	eor.w	r6, r1, r3
  40589a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40589e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  4058a2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4058a6:	bf18      	it	ne
  4058a8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  4058ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4058b0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4058b4:	d038      	beq.n	405928 <__aeabi_dmul+0xb4>
  4058b6:	fba0 ce02 	umull	ip, lr, r0, r2
  4058ba:	f04f 0500 	mov.w	r5, #0
  4058be:	fbe1 e502 	umlal	lr, r5, r1, r2
  4058c2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4058c6:	fbe0 e503 	umlal	lr, r5, r0, r3
  4058ca:	f04f 0600 	mov.w	r6, #0
  4058ce:	fbe1 5603 	umlal	r5, r6, r1, r3
  4058d2:	f09c 0f00 	teq	ip, #0
  4058d6:	bf18      	it	ne
  4058d8:	f04e 0e01 	orrne.w	lr, lr, #1
  4058dc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4058e0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4058e4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4058e8:	d204      	bcs.n	4058f4 <__aeabi_dmul+0x80>
  4058ea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4058ee:	416d      	adcs	r5, r5
  4058f0:	eb46 0606 	adc.w	r6, r6, r6
  4058f4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4058f8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4058fc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405900:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405904:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405908:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  40590c:	bf88      	it	hi
  40590e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405912:	d81e      	bhi.n	405952 <__aeabi_dmul+0xde>
  405914:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405918:	bf08      	it	eq
  40591a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  40591e:	f150 0000 	adcs.w	r0, r0, #0
  405922:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405926:	bd70      	pop	{r4, r5, r6, pc}
  405928:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40592c:	ea46 0101 	orr.w	r1, r6, r1
  405930:	ea40 0002 	orr.w	r0, r0, r2
  405934:	ea81 0103 	eor.w	r1, r1, r3
  405938:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40593c:	bfc2      	ittt	gt
  40593e:	ebd4 050c 	rsbsgt	r5, r4, ip
  405942:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405946:	bd70      	popgt	{r4, r5, r6, pc}
  405948:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40594c:	f04f 0e00 	mov.w	lr, #0
  405950:	3c01      	subs	r4, #1
  405952:	f300 80ab 	bgt.w	405aac <__aeabi_dmul+0x238>
  405956:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40595a:	bfde      	ittt	le
  40595c:	2000      	movle	r0, #0
  40595e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405962:	bd70      	pople	{r4, r5, r6, pc}
  405964:	f1c4 0400 	rsb	r4, r4, #0
  405968:	3c20      	subs	r4, #32
  40596a:	da35      	bge.n	4059d8 <__aeabi_dmul+0x164>
  40596c:	340c      	adds	r4, #12
  40596e:	dc1b      	bgt.n	4059a8 <__aeabi_dmul+0x134>
  405970:	f104 0414 	add.w	r4, r4, #20
  405974:	f1c4 0520 	rsb	r5, r4, #32
  405978:	fa00 f305 	lsl.w	r3, r0, r5
  40597c:	fa20 f004 	lsr.w	r0, r0, r4
  405980:	fa01 f205 	lsl.w	r2, r1, r5
  405984:	ea40 0002 	orr.w	r0, r0, r2
  405988:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40598c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405990:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405994:	fa21 f604 	lsr.w	r6, r1, r4
  405998:	eb42 0106 	adc.w	r1, r2, r6
  40599c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4059a0:	bf08      	it	eq
  4059a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4059a6:	bd70      	pop	{r4, r5, r6, pc}
  4059a8:	f1c4 040c 	rsb	r4, r4, #12
  4059ac:	f1c4 0520 	rsb	r5, r4, #32
  4059b0:	fa00 f304 	lsl.w	r3, r0, r4
  4059b4:	fa20 f005 	lsr.w	r0, r0, r5
  4059b8:	fa01 f204 	lsl.w	r2, r1, r4
  4059bc:	ea40 0002 	orr.w	r0, r0, r2
  4059c0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4059c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4059c8:	f141 0100 	adc.w	r1, r1, #0
  4059cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4059d0:	bf08      	it	eq
  4059d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4059d6:	bd70      	pop	{r4, r5, r6, pc}
  4059d8:	f1c4 0520 	rsb	r5, r4, #32
  4059dc:	fa00 f205 	lsl.w	r2, r0, r5
  4059e0:	ea4e 0e02 	orr.w	lr, lr, r2
  4059e4:	fa20 f304 	lsr.w	r3, r0, r4
  4059e8:	fa01 f205 	lsl.w	r2, r1, r5
  4059ec:	ea43 0302 	orr.w	r3, r3, r2
  4059f0:	fa21 f004 	lsr.w	r0, r1, r4
  4059f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4059f8:	fa21 f204 	lsr.w	r2, r1, r4
  4059fc:	ea20 0002 	bic.w	r0, r0, r2
  405a00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405a04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405a08:	bf08      	it	eq
  405a0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405a0e:	bd70      	pop	{r4, r5, r6, pc}
  405a10:	f094 0f00 	teq	r4, #0
  405a14:	d10f      	bne.n	405a36 <__aeabi_dmul+0x1c2>
  405a16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405a1a:	0040      	lsls	r0, r0, #1
  405a1c:	eb41 0101 	adc.w	r1, r1, r1
  405a20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405a24:	bf08      	it	eq
  405a26:	3c01      	subeq	r4, #1
  405a28:	d0f7      	beq.n	405a1a <__aeabi_dmul+0x1a6>
  405a2a:	ea41 0106 	orr.w	r1, r1, r6
  405a2e:	f095 0f00 	teq	r5, #0
  405a32:	bf18      	it	ne
  405a34:	4770      	bxne	lr
  405a36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405a3a:	0052      	lsls	r2, r2, #1
  405a3c:	eb43 0303 	adc.w	r3, r3, r3
  405a40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405a44:	bf08      	it	eq
  405a46:	3d01      	subeq	r5, #1
  405a48:	d0f7      	beq.n	405a3a <__aeabi_dmul+0x1c6>
  405a4a:	ea43 0306 	orr.w	r3, r3, r6
  405a4e:	4770      	bx	lr
  405a50:	ea94 0f0c 	teq	r4, ip
  405a54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405a58:	bf18      	it	ne
  405a5a:	ea95 0f0c 	teqne	r5, ip
  405a5e:	d00c      	beq.n	405a7a <__aeabi_dmul+0x206>
  405a60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405a64:	bf18      	it	ne
  405a66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405a6a:	d1d1      	bne.n	405a10 <__aeabi_dmul+0x19c>
  405a6c:	ea81 0103 	eor.w	r1, r1, r3
  405a70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405a74:	f04f 0000 	mov.w	r0, #0
  405a78:	bd70      	pop	{r4, r5, r6, pc}
  405a7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405a7e:	bf06      	itte	eq
  405a80:	4610      	moveq	r0, r2
  405a82:	4619      	moveq	r1, r3
  405a84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405a88:	d019      	beq.n	405abe <__aeabi_dmul+0x24a>
  405a8a:	ea94 0f0c 	teq	r4, ip
  405a8e:	d102      	bne.n	405a96 <__aeabi_dmul+0x222>
  405a90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405a94:	d113      	bne.n	405abe <__aeabi_dmul+0x24a>
  405a96:	ea95 0f0c 	teq	r5, ip
  405a9a:	d105      	bne.n	405aa8 <__aeabi_dmul+0x234>
  405a9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405aa0:	bf1c      	itt	ne
  405aa2:	4610      	movne	r0, r2
  405aa4:	4619      	movne	r1, r3
  405aa6:	d10a      	bne.n	405abe <__aeabi_dmul+0x24a>
  405aa8:	ea81 0103 	eor.w	r1, r1, r3
  405aac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405ab0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405ab4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405ab8:	f04f 0000 	mov.w	r0, #0
  405abc:	bd70      	pop	{r4, r5, r6, pc}
  405abe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405ac2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405ac6:	bd70      	pop	{r4, r5, r6, pc}

00405ac8 <__aeabi_ddiv>:
  405ac8:	b570      	push	{r4, r5, r6, lr}
  405aca:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405ace:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405ad2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405ad6:	bf1d      	ittte	ne
  405ad8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405adc:	ea94 0f0c 	teqne	r4, ip
  405ae0:	ea95 0f0c 	teqne	r5, ip
  405ae4:	f000 f8a7 	bleq	405c36 <__aeabi_ddiv+0x16e>
  405ae8:	eba4 0405 	sub.w	r4, r4, r5
  405aec:	ea81 0e03 	eor.w	lr, r1, r3
  405af0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405af4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405af8:	f000 8088 	beq.w	405c0c <__aeabi_ddiv+0x144>
  405afc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405b00:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405b04:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405b08:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405b0c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405b10:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405b14:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405b18:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405b1c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405b20:	429d      	cmp	r5, r3
  405b22:	bf08      	it	eq
  405b24:	4296      	cmpeq	r6, r2
  405b26:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405b2a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405b2e:	d202      	bcs.n	405b36 <__aeabi_ddiv+0x6e>
  405b30:	085b      	lsrs	r3, r3, #1
  405b32:	ea4f 0232 	mov.w	r2, r2, rrx
  405b36:	1ab6      	subs	r6, r6, r2
  405b38:	eb65 0503 	sbc.w	r5, r5, r3
  405b3c:	085b      	lsrs	r3, r3, #1
  405b3e:	ea4f 0232 	mov.w	r2, r2, rrx
  405b42:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405b46:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405b4a:	ebb6 0e02 	subs.w	lr, r6, r2
  405b4e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405b52:	bf22      	ittt	cs
  405b54:	1ab6      	subcs	r6, r6, r2
  405b56:	4675      	movcs	r5, lr
  405b58:	ea40 000c 	orrcs.w	r0, r0, ip
  405b5c:	085b      	lsrs	r3, r3, #1
  405b5e:	ea4f 0232 	mov.w	r2, r2, rrx
  405b62:	ebb6 0e02 	subs.w	lr, r6, r2
  405b66:	eb75 0e03 	sbcs.w	lr, r5, r3
  405b6a:	bf22      	ittt	cs
  405b6c:	1ab6      	subcs	r6, r6, r2
  405b6e:	4675      	movcs	r5, lr
  405b70:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405b74:	085b      	lsrs	r3, r3, #1
  405b76:	ea4f 0232 	mov.w	r2, r2, rrx
  405b7a:	ebb6 0e02 	subs.w	lr, r6, r2
  405b7e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405b82:	bf22      	ittt	cs
  405b84:	1ab6      	subcs	r6, r6, r2
  405b86:	4675      	movcs	r5, lr
  405b88:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405b8c:	085b      	lsrs	r3, r3, #1
  405b8e:	ea4f 0232 	mov.w	r2, r2, rrx
  405b92:	ebb6 0e02 	subs.w	lr, r6, r2
  405b96:	eb75 0e03 	sbcs.w	lr, r5, r3
  405b9a:	bf22      	ittt	cs
  405b9c:	1ab6      	subcs	r6, r6, r2
  405b9e:	4675      	movcs	r5, lr
  405ba0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405ba4:	ea55 0e06 	orrs.w	lr, r5, r6
  405ba8:	d018      	beq.n	405bdc <__aeabi_ddiv+0x114>
  405baa:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405bae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405bb2:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405bb6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405bba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405bbe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405bc2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405bc6:	d1c0      	bne.n	405b4a <__aeabi_ddiv+0x82>
  405bc8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405bcc:	d10b      	bne.n	405be6 <__aeabi_ddiv+0x11e>
  405bce:	ea41 0100 	orr.w	r1, r1, r0
  405bd2:	f04f 0000 	mov.w	r0, #0
  405bd6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405bda:	e7b6      	b.n	405b4a <__aeabi_ddiv+0x82>
  405bdc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405be0:	bf04      	itt	eq
  405be2:	4301      	orreq	r1, r0
  405be4:	2000      	moveq	r0, #0
  405be6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405bea:	bf88      	it	hi
  405bec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405bf0:	f63f aeaf 	bhi.w	405952 <__aeabi_dmul+0xde>
  405bf4:	ebb5 0c03 	subs.w	ip, r5, r3
  405bf8:	bf04      	itt	eq
  405bfa:	ebb6 0c02 	subseq.w	ip, r6, r2
  405bfe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405c02:	f150 0000 	adcs.w	r0, r0, #0
  405c06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405c0a:	bd70      	pop	{r4, r5, r6, pc}
  405c0c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405c10:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405c14:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405c18:	bfc2      	ittt	gt
  405c1a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405c1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405c22:	bd70      	popgt	{r4, r5, r6, pc}
  405c24:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405c28:	f04f 0e00 	mov.w	lr, #0
  405c2c:	3c01      	subs	r4, #1
  405c2e:	e690      	b.n	405952 <__aeabi_dmul+0xde>
  405c30:	ea45 0e06 	orr.w	lr, r5, r6
  405c34:	e68d      	b.n	405952 <__aeabi_dmul+0xde>
  405c36:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405c3a:	ea94 0f0c 	teq	r4, ip
  405c3e:	bf08      	it	eq
  405c40:	ea95 0f0c 	teqeq	r5, ip
  405c44:	f43f af3b 	beq.w	405abe <__aeabi_dmul+0x24a>
  405c48:	ea94 0f0c 	teq	r4, ip
  405c4c:	d10a      	bne.n	405c64 <__aeabi_ddiv+0x19c>
  405c4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405c52:	f47f af34 	bne.w	405abe <__aeabi_dmul+0x24a>
  405c56:	ea95 0f0c 	teq	r5, ip
  405c5a:	f47f af25 	bne.w	405aa8 <__aeabi_dmul+0x234>
  405c5e:	4610      	mov	r0, r2
  405c60:	4619      	mov	r1, r3
  405c62:	e72c      	b.n	405abe <__aeabi_dmul+0x24a>
  405c64:	ea95 0f0c 	teq	r5, ip
  405c68:	d106      	bne.n	405c78 <__aeabi_ddiv+0x1b0>
  405c6a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405c6e:	f43f aefd 	beq.w	405a6c <__aeabi_dmul+0x1f8>
  405c72:	4610      	mov	r0, r2
  405c74:	4619      	mov	r1, r3
  405c76:	e722      	b.n	405abe <__aeabi_dmul+0x24a>
  405c78:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405c7c:	bf18      	it	ne
  405c7e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405c82:	f47f aec5 	bne.w	405a10 <__aeabi_dmul+0x19c>
  405c86:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405c8a:	f47f af0d 	bne.w	405aa8 <__aeabi_dmul+0x234>
  405c8e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405c92:	f47f aeeb 	bne.w	405a6c <__aeabi_dmul+0x1f8>
  405c96:	e712      	b.n	405abe <__aeabi_dmul+0x24a>

00405c98 <__gedf2>:
  405c98:	f04f 3cff 	mov.w	ip, #4294967295
  405c9c:	e006      	b.n	405cac <__cmpdf2+0x4>
  405c9e:	bf00      	nop

00405ca0 <__ledf2>:
  405ca0:	f04f 0c01 	mov.w	ip, #1
  405ca4:	e002      	b.n	405cac <__cmpdf2+0x4>
  405ca6:	bf00      	nop

00405ca8 <__cmpdf2>:
  405ca8:	f04f 0c01 	mov.w	ip, #1
  405cac:	f84d cd04 	str.w	ip, [sp, #-4]!
  405cb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405cb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405cb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405cbc:	bf18      	it	ne
  405cbe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405cc2:	d01b      	beq.n	405cfc <__cmpdf2+0x54>
  405cc4:	b001      	add	sp, #4
  405cc6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405cca:	bf0c      	ite	eq
  405ccc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405cd0:	ea91 0f03 	teqne	r1, r3
  405cd4:	bf02      	ittt	eq
  405cd6:	ea90 0f02 	teqeq	r0, r2
  405cda:	2000      	moveq	r0, #0
  405cdc:	4770      	bxeq	lr
  405cde:	f110 0f00 	cmn.w	r0, #0
  405ce2:	ea91 0f03 	teq	r1, r3
  405ce6:	bf58      	it	pl
  405ce8:	4299      	cmppl	r1, r3
  405cea:	bf08      	it	eq
  405cec:	4290      	cmpeq	r0, r2
  405cee:	bf2c      	ite	cs
  405cf0:	17d8      	asrcs	r0, r3, #31
  405cf2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405cf6:	f040 0001 	orr.w	r0, r0, #1
  405cfa:	4770      	bx	lr
  405cfc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405d00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d04:	d102      	bne.n	405d0c <__cmpdf2+0x64>
  405d06:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405d0a:	d107      	bne.n	405d1c <__cmpdf2+0x74>
  405d0c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405d10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405d14:	d1d6      	bne.n	405cc4 <__cmpdf2+0x1c>
  405d16:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405d1a:	d0d3      	beq.n	405cc4 <__cmpdf2+0x1c>
  405d1c:	f85d 0b04 	ldr.w	r0, [sp], #4
  405d20:	4770      	bx	lr
  405d22:	bf00      	nop

00405d24 <__aeabi_cdrcmple>:
  405d24:	4684      	mov	ip, r0
  405d26:	4610      	mov	r0, r2
  405d28:	4662      	mov	r2, ip
  405d2a:	468c      	mov	ip, r1
  405d2c:	4619      	mov	r1, r3
  405d2e:	4663      	mov	r3, ip
  405d30:	e000      	b.n	405d34 <__aeabi_cdcmpeq>
  405d32:	bf00      	nop

00405d34 <__aeabi_cdcmpeq>:
  405d34:	b501      	push	{r0, lr}
  405d36:	f7ff ffb7 	bl	405ca8 <__cmpdf2>
  405d3a:	2800      	cmp	r0, #0
  405d3c:	bf48      	it	mi
  405d3e:	f110 0f00 	cmnmi.w	r0, #0
  405d42:	bd01      	pop	{r0, pc}

00405d44 <__aeabi_dcmpeq>:
  405d44:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d48:	f7ff fff4 	bl	405d34 <__aeabi_cdcmpeq>
  405d4c:	bf0c      	ite	eq
  405d4e:	2001      	moveq	r0, #1
  405d50:	2000      	movne	r0, #0
  405d52:	f85d fb08 	ldr.w	pc, [sp], #8
  405d56:	bf00      	nop

00405d58 <__aeabi_dcmplt>:
  405d58:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d5c:	f7ff ffea 	bl	405d34 <__aeabi_cdcmpeq>
  405d60:	bf34      	ite	cc
  405d62:	2001      	movcc	r0, #1
  405d64:	2000      	movcs	r0, #0
  405d66:	f85d fb08 	ldr.w	pc, [sp], #8
  405d6a:	bf00      	nop

00405d6c <__aeabi_dcmple>:
  405d6c:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d70:	f7ff ffe0 	bl	405d34 <__aeabi_cdcmpeq>
  405d74:	bf94      	ite	ls
  405d76:	2001      	movls	r0, #1
  405d78:	2000      	movhi	r0, #0
  405d7a:	f85d fb08 	ldr.w	pc, [sp], #8
  405d7e:	bf00      	nop

00405d80 <__aeabi_dcmpge>:
  405d80:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d84:	f7ff ffce 	bl	405d24 <__aeabi_cdrcmple>
  405d88:	bf94      	ite	ls
  405d8a:	2001      	movls	r0, #1
  405d8c:	2000      	movhi	r0, #0
  405d8e:	f85d fb08 	ldr.w	pc, [sp], #8
  405d92:	bf00      	nop

00405d94 <__aeabi_dcmpgt>:
  405d94:	f84d ed08 	str.w	lr, [sp, #-8]!
  405d98:	f7ff ffc4 	bl	405d24 <__aeabi_cdrcmple>
  405d9c:	bf34      	ite	cc
  405d9e:	2001      	movcc	r0, #1
  405da0:	2000      	movcs	r0, #0
  405da2:	f85d fb08 	ldr.w	pc, [sp], #8
  405da6:	bf00      	nop

00405da8 <__aeabi_dcmpun>:
  405da8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405dac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405db0:	d102      	bne.n	405db8 <__aeabi_dcmpun+0x10>
  405db2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405db6:	d10a      	bne.n	405dce <__aeabi_dcmpun+0x26>
  405db8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405dbc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405dc0:	d102      	bne.n	405dc8 <__aeabi_dcmpun+0x20>
  405dc2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405dc6:	d102      	bne.n	405dce <__aeabi_dcmpun+0x26>
  405dc8:	f04f 0000 	mov.w	r0, #0
  405dcc:	4770      	bx	lr
  405dce:	f04f 0001 	mov.w	r0, #1
  405dd2:	4770      	bx	lr

00405dd4 <__aeabi_d2iz>:
  405dd4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405dd8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405ddc:	d215      	bcs.n	405e0a <__aeabi_d2iz+0x36>
  405dde:	d511      	bpl.n	405e04 <__aeabi_d2iz+0x30>
  405de0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405de4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405de8:	d912      	bls.n	405e10 <__aeabi_d2iz+0x3c>
  405dea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405dee:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405df2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405df6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405dfa:	fa23 f002 	lsr.w	r0, r3, r2
  405dfe:	bf18      	it	ne
  405e00:	4240      	negne	r0, r0
  405e02:	4770      	bx	lr
  405e04:	f04f 0000 	mov.w	r0, #0
  405e08:	4770      	bx	lr
  405e0a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405e0e:	d105      	bne.n	405e1c <__aeabi_d2iz+0x48>
  405e10:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405e14:	bf08      	it	eq
  405e16:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405e1a:	4770      	bx	lr
  405e1c:	f04f 0000 	mov.w	r0, #0
  405e20:	4770      	bx	lr
  405e22:	bf00      	nop

00405e24 <__aeabi_uldivmod>:
  405e24:	b953      	cbnz	r3, 405e3c <__aeabi_uldivmod+0x18>
  405e26:	b94a      	cbnz	r2, 405e3c <__aeabi_uldivmod+0x18>
  405e28:	2900      	cmp	r1, #0
  405e2a:	bf08      	it	eq
  405e2c:	2800      	cmpeq	r0, #0
  405e2e:	bf1c      	itt	ne
  405e30:	f04f 31ff 	movne.w	r1, #4294967295
  405e34:	f04f 30ff 	movne.w	r0, #4294967295
  405e38:	f000 b97a 	b.w	406130 <__aeabi_idiv0>
  405e3c:	f1ad 0c08 	sub.w	ip, sp, #8
  405e40:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  405e44:	f000 f806 	bl	405e54 <__udivmoddi4>
  405e48:	f8dd e004 	ldr.w	lr, [sp, #4]
  405e4c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  405e50:	b004      	add	sp, #16
  405e52:	4770      	bx	lr

00405e54 <__udivmoddi4>:
  405e54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405e58:	468c      	mov	ip, r1
  405e5a:	460d      	mov	r5, r1
  405e5c:	4604      	mov	r4, r0
  405e5e:	9e08      	ldr	r6, [sp, #32]
  405e60:	2b00      	cmp	r3, #0
  405e62:	d151      	bne.n	405f08 <__udivmoddi4+0xb4>
  405e64:	428a      	cmp	r2, r1
  405e66:	4617      	mov	r7, r2
  405e68:	d96d      	bls.n	405f46 <__udivmoddi4+0xf2>
  405e6a:	fab2 fe82 	clz	lr, r2
  405e6e:	f1be 0f00 	cmp.w	lr, #0
  405e72:	d00b      	beq.n	405e8c <__udivmoddi4+0x38>
  405e74:	f1ce 0c20 	rsb	ip, lr, #32
  405e78:	fa01 f50e 	lsl.w	r5, r1, lr
  405e7c:	fa20 fc0c 	lsr.w	ip, r0, ip
  405e80:	fa02 f70e 	lsl.w	r7, r2, lr
  405e84:	ea4c 0c05 	orr.w	ip, ip, r5
  405e88:	fa00 f40e 	lsl.w	r4, r0, lr
  405e8c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  405e90:	0c25      	lsrs	r5, r4, #16
  405e92:	fbbc f8fa 	udiv	r8, ip, sl
  405e96:	fa1f f987 	uxth.w	r9, r7
  405e9a:	fb0a cc18 	mls	ip, sl, r8, ip
  405e9e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  405ea2:	fb08 f309 	mul.w	r3, r8, r9
  405ea6:	42ab      	cmp	r3, r5
  405ea8:	d90a      	bls.n	405ec0 <__udivmoddi4+0x6c>
  405eaa:	19ed      	adds	r5, r5, r7
  405eac:	f108 32ff 	add.w	r2, r8, #4294967295
  405eb0:	f080 8123 	bcs.w	4060fa <__udivmoddi4+0x2a6>
  405eb4:	42ab      	cmp	r3, r5
  405eb6:	f240 8120 	bls.w	4060fa <__udivmoddi4+0x2a6>
  405eba:	f1a8 0802 	sub.w	r8, r8, #2
  405ebe:	443d      	add	r5, r7
  405ec0:	1aed      	subs	r5, r5, r3
  405ec2:	b2a4      	uxth	r4, r4
  405ec4:	fbb5 f0fa 	udiv	r0, r5, sl
  405ec8:	fb0a 5510 	mls	r5, sl, r0, r5
  405ecc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  405ed0:	fb00 f909 	mul.w	r9, r0, r9
  405ed4:	45a1      	cmp	r9, r4
  405ed6:	d909      	bls.n	405eec <__udivmoddi4+0x98>
  405ed8:	19e4      	adds	r4, r4, r7
  405eda:	f100 33ff 	add.w	r3, r0, #4294967295
  405ede:	f080 810a 	bcs.w	4060f6 <__udivmoddi4+0x2a2>
  405ee2:	45a1      	cmp	r9, r4
  405ee4:	f240 8107 	bls.w	4060f6 <__udivmoddi4+0x2a2>
  405ee8:	3802      	subs	r0, #2
  405eea:	443c      	add	r4, r7
  405eec:	eba4 0409 	sub.w	r4, r4, r9
  405ef0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405ef4:	2100      	movs	r1, #0
  405ef6:	2e00      	cmp	r6, #0
  405ef8:	d061      	beq.n	405fbe <__udivmoddi4+0x16a>
  405efa:	fa24 f40e 	lsr.w	r4, r4, lr
  405efe:	2300      	movs	r3, #0
  405f00:	6034      	str	r4, [r6, #0]
  405f02:	6073      	str	r3, [r6, #4]
  405f04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f08:	428b      	cmp	r3, r1
  405f0a:	d907      	bls.n	405f1c <__udivmoddi4+0xc8>
  405f0c:	2e00      	cmp	r6, #0
  405f0e:	d054      	beq.n	405fba <__udivmoddi4+0x166>
  405f10:	2100      	movs	r1, #0
  405f12:	e886 0021 	stmia.w	r6, {r0, r5}
  405f16:	4608      	mov	r0, r1
  405f18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f1c:	fab3 f183 	clz	r1, r3
  405f20:	2900      	cmp	r1, #0
  405f22:	f040 808e 	bne.w	406042 <__udivmoddi4+0x1ee>
  405f26:	42ab      	cmp	r3, r5
  405f28:	d302      	bcc.n	405f30 <__udivmoddi4+0xdc>
  405f2a:	4282      	cmp	r2, r0
  405f2c:	f200 80fa 	bhi.w	406124 <__udivmoddi4+0x2d0>
  405f30:	1a84      	subs	r4, r0, r2
  405f32:	eb65 0503 	sbc.w	r5, r5, r3
  405f36:	2001      	movs	r0, #1
  405f38:	46ac      	mov	ip, r5
  405f3a:	2e00      	cmp	r6, #0
  405f3c:	d03f      	beq.n	405fbe <__udivmoddi4+0x16a>
  405f3e:	e886 1010 	stmia.w	r6, {r4, ip}
  405f42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405f46:	b912      	cbnz	r2, 405f4e <__udivmoddi4+0xfa>
  405f48:	2701      	movs	r7, #1
  405f4a:	fbb7 f7f2 	udiv	r7, r7, r2
  405f4e:	fab7 fe87 	clz	lr, r7
  405f52:	f1be 0f00 	cmp.w	lr, #0
  405f56:	d134      	bne.n	405fc2 <__udivmoddi4+0x16e>
  405f58:	1beb      	subs	r3, r5, r7
  405f5a:	0c3a      	lsrs	r2, r7, #16
  405f5c:	fa1f fc87 	uxth.w	ip, r7
  405f60:	2101      	movs	r1, #1
  405f62:	fbb3 f8f2 	udiv	r8, r3, r2
  405f66:	0c25      	lsrs	r5, r4, #16
  405f68:	fb02 3318 	mls	r3, r2, r8, r3
  405f6c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  405f70:	fb0c f308 	mul.w	r3, ip, r8
  405f74:	42ab      	cmp	r3, r5
  405f76:	d907      	bls.n	405f88 <__udivmoddi4+0x134>
  405f78:	19ed      	adds	r5, r5, r7
  405f7a:	f108 30ff 	add.w	r0, r8, #4294967295
  405f7e:	d202      	bcs.n	405f86 <__udivmoddi4+0x132>
  405f80:	42ab      	cmp	r3, r5
  405f82:	f200 80d1 	bhi.w	406128 <__udivmoddi4+0x2d4>
  405f86:	4680      	mov	r8, r0
  405f88:	1aed      	subs	r5, r5, r3
  405f8a:	b2a3      	uxth	r3, r4
  405f8c:	fbb5 f0f2 	udiv	r0, r5, r2
  405f90:	fb02 5510 	mls	r5, r2, r0, r5
  405f94:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  405f98:	fb0c fc00 	mul.w	ip, ip, r0
  405f9c:	45a4      	cmp	ip, r4
  405f9e:	d907      	bls.n	405fb0 <__udivmoddi4+0x15c>
  405fa0:	19e4      	adds	r4, r4, r7
  405fa2:	f100 33ff 	add.w	r3, r0, #4294967295
  405fa6:	d202      	bcs.n	405fae <__udivmoddi4+0x15a>
  405fa8:	45a4      	cmp	ip, r4
  405faa:	f200 80b8 	bhi.w	40611e <__udivmoddi4+0x2ca>
  405fae:	4618      	mov	r0, r3
  405fb0:	eba4 040c 	sub.w	r4, r4, ip
  405fb4:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  405fb8:	e79d      	b.n	405ef6 <__udivmoddi4+0xa2>
  405fba:	4631      	mov	r1, r6
  405fbc:	4630      	mov	r0, r6
  405fbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405fc2:	f1ce 0420 	rsb	r4, lr, #32
  405fc6:	fa05 f30e 	lsl.w	r3, r5, lr
  405fca:	fa07 f70e 	lsl.w	r7, r7, lr
  405fce:	fa20 f804 	lsr.w	r8, r0, r4
  405fd2:	0c3a      	lsrs	r2, r7, #16
  405fd4:	fa25 f404 	lsr.w	r4, r5, r4
  405fd8:	ea48 0803 	orr.w	r8, r8, r3
  405fdc:	fbb4 f1f2 	udiv	r1, r4, r2
  405fe0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  405fe4:	fb02 4411 	mls	r4, r2, r1, r4
  405fe8:	fa1f fc87 	uxth.w	ip, r7
  405fec:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  405ff0:	fb01 f30c 	mul.w	r3, r1, ip
  405ff4:	42ab      	cmp	r3, r5
  405ff6:	fa00 f40e 	lsl.w	r4, r0, lr
  405ffa:	d909      	bls.n	406010 <__udivmoddi4+0x1bc>
  405ffc:	19ed      	adds	r5, r5, r7
  405ffe:	f101 30ff 	add.w	r0, r1, #4294967295
  406002:	f080 808a 	bcs.w	40611a <__udivmoddi4+0x2c6>
  406006:	42ab      	cmp	r3, r5
  406008:	f240 8087 	bls.w	40611a <__udivmoddi4+0x2c6>
  40600c:	3902      	subs	r1, #2
  40600e:	443d      	add	r5, r7
  406010:	1aeb      	subs	r3, r5, r3
  406012:	fa1f f588 	uxth.w	r5, r8
  406016:	fbb3 f0f2 	udiv	r0, r3, r2
  40601a:	fb02 3310 	mls	r3, r2, r0, r3
  40601e:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406022:	fb00 f30c 	mul.w	r3, r0, ip
  406026:	42ab      	cmp	r3, r5
  406028:	d907      	bls.n	40603a <__udivmoddi4+0x1e6>
  40602a:	19ed      	adds	r5, r5, r7
  40602c:	f100 38ff 	add.w	r8, r0, #4294967295
  406030:	d26f      	bcs.n	406112 <__udivmoddi4+0x2be>
  406032:	42ab      	cmp	r3, r5
  406034:	d96d      	bls.n	406112 <__udivmoddi4+0x2be>
  406036:	3802      	subs	r0, #2
  406038:	443d      	add	r5, r7
  40603a:	1aeb      	subs	r3, r5, r3
  40603c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406040:	e78f      	b.n	405f62 <__udivmoddi4+0x10e>
  406042:	f1c1 0720 	rsb	r7, r1, #32
  406046:	fa22 f807 	lsr.w	r8, r2, r7
  40604a:	408b      	lsls	r3, r1
  40604c:	fa05 f401 	lsl.w	r4, r5, r1
  406050:	ea48 0303 	orr.w	r3, r8, r3
  406054:	fa20 fe07 	lsr.w	lr, r0, r7
  406058:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40605c:	40fd      	lsrs	r5, r7
  40605e:	ea4e 0e04 	orr.w	lr, lr, r4
  406062:	fbb5 f9fc 	udiv	r9, r5, ip
  406066:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40606a:	fb0c 5519 	mls	r5, ip, r9, r5
  40606e:	fa1f f883 	uxth.w	r8, r3
  406072:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406076:	fb09 f408 	mul.w	r4, r9, r8
  40607a:	42ac      	cmp	r4, r5
  40607c:	fa02 f201 	lsl.w	r2, r2, r1
  406080:	fa00 fa01 	lsl.w	sl, r0, r1
  406084:	d908      	bls.n	406098 <__udivmoddi4+0x244>
  406086:	18ed      	adds	r5, r5, r3
  406088:	f109 30ff 	add.w	r0, r9, #4294967295
  40608c:	d243      	bcs.n	406116 <__udivmoddi4+0x2c2>
  40608e:	42ac      	cmp	r4, r5
  406090:	d941      	bls.n	406116 <__udivmoddi4+0x2c2>
  406092:	f1a9 0902 	sub.w	r9, r9, #2
  406096:	441d      	add	r5, r3
  406098:	1b2d      	subs	r5, r5, r4
  40609a:	fa1f fe8e 	uxth.w	lr, lr
  40609e:	fbb5 f0fc 	udiv	r0, r5, ip
  4060a2:	fb0c 5510 	mls	r5, ip, r0, r5
  4060a6:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  4060aa:	fb00 f808 	mul.w	r8, r0, r8
  4060ae:	45a0      	cmp	r8, r4
  4060b0:	d907      	bls.n	4060c2 <__udivmoddi4+0x26e>
  4060b2:	18e4      	adds	r4, r4, r3
  4060b4:	f100 35ff 	add.w	r5, r0, #4294967295
  4060b8:	d229      	bcs.n	40610e <__udivmoddi4+0x2ba>
  4060ba:	45a0      	cmp	r8, r4
  4060bc:	d927      	bls.n	40610e <__udivmoddi4+0x2ba>
  4060be:	3802      	subs	r0, #2
  4060c0:	441c      	add	r4, r3
  4060c2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  4060c6:	eba4 0408 	sub.w	r4, r4, r8
  4060ca:	fba0 8902 	umull	r8, r9, r0, r2
  4060ce:	454c      	cmp	r4, r9
  4060d0:	46c6      	mov	lr, r8
  4060d2:	464d      	mov	r5, r9
  4060d4:	d315      	bcc.n	406102 <__udivmoddi4+0x2ae>
  4060d6:	d012      	beq.n	4060fe <__udivmoddi4+0x2aa>
  4060d8:	b156      	cbz	r6, 4060f0 <__udivmoddi4+0x29c>
  4060da:	ebba 030e 	subs.w	r3, sl, lr
  4060de:	eb64 0405 	sbc.w	r4, r4, r5
  4060e2:	fa04 f707 	lsl.w	r7, r4, r7
  4060e6:	40cb      	lsrs	r3, r1
  4060e8:	431f      	orrs	r7, r3
  4060ea:	40cc      	lsrs	r4, r1
  4060ec:	6037      	str	r7, [r6, #0]
  4060ee:	6074      	str	r4, [r6, #4]
  4060f0:	2100      	movs	r1, #0
  4060f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4060f6:	4618      	mov	r0, r3
  4060f8:	e6f8      	b.n	405eec <__udivmoddi4+0x98>
  4060fa:	4690      	mov	r8, r2
  4060fc:	e6e0      	b.n	405ec0 <__udivmoddi4+0x6c>
  4060fe:	45c2      	cmp	sl, r8
  406100:	d2ea      	bcs.n	4060d8 <__udivmoddi4+0x284>
  406102:	ebb8 0e02 	subs.w	lr, r8, r2
  406106:	eb69 0503 	sbc.w	r5, r9, r3
  40610a:	3801      	subs	r0, #1
  40610c:	e7e4      	b.n	4060d8 <__udivmoddi4+0x284>
  40610e:	4628      	mov	r0, r5
  406110:	e7d7      	b.n	4060c2 <__udivmoddi4+0x26e>
  406112:	4640      	mov	r0, r8
  406114:	e791      	b.n	40603a <__udivmoddi4+0x1e6>
  406116:	4681      	mov	r9, r0
  406118:	e7be      	b.n	406098 <__udivmoddi4+0x244>
  40611a:	4601      	mov	r1, r0
  40611c:	e778      	b.n	406010 <__udivmoddi4+0x1bc>
  40611e:	3802      	subs	r0, #2
  406120:	443c      	add	r4, r7
  406122:	e745      	b.n	405fb0 <__udivmoddi4+0x15c>
  406124:	4608      	mov	r0, r1
  406126:	e708      	b.n	405f3a <__udivmoddi4+0xe6>
  406128:	f1a8 0802 	sub.w	r8, r8, #2
  40612c:	443d      	add	r5, r7
  40612e:	e72b      	b.n	405f88 <__udivmoddi4+0x134>

00406130 <__aeabi_idiv0>:
  406130:	4770      	bx	lr
  406132:	bf00      	nop

00406134 <sysfont_glyphs>:
	...
  406154:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406164:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406174:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  40618c:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  40619c:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  4061ac:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  4061c4:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  4061d4:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  4061e4:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  4061fc:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  406218:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406228:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  406238:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  406248:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  406270:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406298:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  4062a8:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  4062cc:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  4062dc:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  4062ec:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  4062fc:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406314:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406324:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  406334:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  40634c:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  40635c:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  40636c:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406384:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406394:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  4063a4:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  4063bc:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  4063cc:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  4063dc:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4063f4:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  406404:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406414:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  406430:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  406440:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  406450:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  40646c:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406484:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  40649c:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  4064ac:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  4064bc:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  4064d4:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  4064e4:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4064f4:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  40650c:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  40651c:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  40652c:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  406544:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406554:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406564:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  40657c:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  40658c:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  40659c:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  4065b4:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4065c4:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4065d4:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  4065ec:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4065fc:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  40660c:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406624:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  406634:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  406644:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  40665c:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  40666c:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  40667c:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406694:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  4066a4:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  4066b4:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  4066cc:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  4066dc:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4066ec:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406704:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406714:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406724:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  40673c:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  40674c:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  40675c:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406774:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406784:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406794:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  4067ac:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  4067bc:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  4067cc:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  4067e4:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  4067f4:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406804:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  40682c:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  40683c:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406858:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406870:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406880:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406890:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  4068a8:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  4068b8:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  4068c8:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  4068e0:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  4068f0:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406900:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406910:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406920:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406930:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406940:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406950:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406960:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406970:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406988:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406998:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  4069a8:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  4069c4:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  4069e0:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  4069fc:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406a0c:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406a1c:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406a34:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406a50:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406a6c:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406a88:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406aa4:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406ac0:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406adc:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406af8:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406b08:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406b18:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406b28:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406b38:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406b48:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406b58:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406b68:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406b78:	0000 0000 3225 2064 7a48 0000               ....%2d Hz..

00406b84 <_global_impure_ptr>:
  406b84:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406b94:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406ba4:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406bb4:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406bc4:	296c 0000 0030 0000                         l)..0...

00406bcc <blanks.7223>:
  406bcc:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406bdc <zeroes.7224>:
  406bdc:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406bec:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406bfc:	0000 0000                                   ....

00406c00 <__mprec_bigtens>:
  406c00:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406c10:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406c20:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406c28 <__mprec_tens>:
  406c28:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406c38:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406c48:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406c58:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406c68:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406c78:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406c88:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406c98:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406ca8:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406cb8:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406cc8:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406cd8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406ce8:	9db4 79d9 7843 44ea                         ...yCx.D

00406cf0 <p05.6055>:
  406cf0:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406d00:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406d0c <_ctype_>:
  406d0c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406d1c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406d2c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406d3c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406d4c:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406d5c:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406d6c:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406d7c:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406d8c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406e10 <_init>:
  406e10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406e12:	bf00      	nop
  406e14:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406e16:	bc08      	pop	{r3}
  406e18:	469e      	mov	lr, r3
  406e1a:	4770      	bx	lr

00406e1c <__init_array_start>:
  406e1c:	00402dd5 	.word	0x00402dd5

00406e20 <__frame_dummy_init_array_entry>:
  406e20:	00400165                                e.@.

00406e24 <_fini>:
  406e24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406e26:	bf00      	nop
  406e28:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406e2a:	bc08      	pop	{r3}
  406e2c:	469e      	mov	lr, r3
  406e2e:	4770      	bx	lr

00406e30 <__fini_array_start>:
  406e30:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 6134 0040 0e0a 7d20               ....4a@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <but_flag2>:
20400020:	0001 0000                                   ....

20400024 <_impure_ptr>:
20400024:	0028 2040                                   (.@ 

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0ca8 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	54e9 0040 50a9 0040 0000 0000 6d0c 0040     .T@..P@......m@.
20400954:	6d08 0040 6ba8 0040 6ba8 0040 6ba8 0040     .m@..k@..k@..k@.
20400964:	6ba8 0040 6ba8 0040 6ba8 0040 6ba8 0040     .k@..k@..k@..k@.
20400974:	6ba8 0040 6ba8 0040 ffff ffff ffff ffff     .k@..k@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
